// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: solver_commons.proto

// Protobuf Java Version: 3.25.2
package com.booleworks.logicng.solvers.sat;

public final class ProtoBufSolverCommons {
  private ProtoBufSolverCommons() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code solver.PBClauseMinimization}
   */
  public enum PBClauseMinimization
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <code>BASIC = 1;</code>
     */
    BASIC(1),
    /**
     * <code>DEEP = 2;</code>
     */
    DEEP(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <code>BASIC = 1;</code>
     */
    public static final int BASIC_VALUE = 1;
    /**
     * <code>DEEP = 2;</code>
     */
    public static final int DEEP_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PBClauseMinimization valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PBClauseMinimization forNumber(int value) {
      switch (value) {
        case 0: return NONE;
        case 1: return BASIC;
        case 2: return DEEP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PBClauseMinimization>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PBClauseMinimization> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PBClauseMinimization>() {
            public PBClauseMinimization findValueByNumber(int number) {
              return PBClauseMinimization.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.getDescriptor().getEnumTypes().get(0);
    }

    private static final PBClauseMinimization[] VALUES = values();

    public static PBClauseMinimization valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PBClauseMinimization(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:solver.PBClauseMinimization)
  }

  /**
   * Protobuf enum {@code solver.PBCnfMethod}
   */
  public enum PBCnfMethod
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FACTORY_CNF = 0;</code>
     */
    FACTORY_CNF(0),
    /**
     * <code>PG_ON_SOLVER = 1;</code>
     */
    PG_ON_SOLVER(1),
    /**
     * <code>FULL_PG_ON_SOLVER = 2;</code>
     */
    FULL_PG_ON_SOLVER(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>FACTORY_CNF = 0;</code>
     */
    public static final int FACTORY_CNF_VALUE = 0;
    /**
     * <code>PG_ON_SOLVER = 1;</code>
     */
    public static final int PG_ON_SOLVER_VALUE = 1;
    /**
     * <code>FULL_PG_ON_SOLVER = 2;</code>
     */
    public static final int FULL_PG_ON_SOLVER_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PBCnfMethod valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PBCnfMethod forNumber(int value) {
      switch (value) {
        case 0: return FACTORY_CNF;
        case 1: return PG_ON_SOLVER;
        case 2: return FULL_PG_ON_SOLVER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PBCnfMethod>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PBCnfMethod> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PBCnfMethod>() {
            public PBCnfMethod findValueByNumber(int number) {
              return PBCnfMethod.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.getDescriptor().getEnumTypes().get(1);
    }

    private static final PBCnfMethod[] VALUES = values();

    public static PBCnfMethod valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PBCnfMethod(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:solver.PBCnfMethod)
  }

  public interface PBMiniSatConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:solver.PBMiniSatConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double varDecay = 1;</code>
     * @return The varDecay.
     */
    double getVarDecay();

    /**
     * <code>double varInc = 2;</code>
     * @return The varInc.
     */
    double getVarInc();

    /**
     * <code>.solver.PBClauseMinimization clauseMin = 3;</code>
     * @return The enum numeric value on the wire for clauseMin.
     */
    int getClauseMinValue();
    /**
     * <code>.solver.PBClauseMinimization clauseMin = 3;</code>
     * @return The clauseMin.
     */
    com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization getClauseMin();

    /**
     * <code>int32 restartFirst = 4;</code>
     * @return The restartFirst.
     */
    int getRestartFirst();

    /**
     * <code>double restartInc = 5;</code>
     * @return The restartInc.
     */
    double getRestartInc();

    /**
     * <code>double clauseDecay = 6;</code>
     * @return The clauseDecay.
     */
    double getClauseDecay();

    /**
     * <code>bool removeSatisfied = 7;</code>
     * @return The removeSatisfied.
     */
    boolean getRemoveSatisfied();

    /**
     * <code>double learntsizeFactor = 8;</code>
     * @return The learntsizeFactor.
     */
    double getLearntsizeFactor();

    /**
     * <code>double learntsizeInc = 9;</code>
     * @return The learntsizeInc.
     */
    double getLearntsizeInc();

    /**
     * <code>bool incremental = 10;</code>
     * @return The incremental.
     */
    boolean getIncremental();

    /**
     * <code>bool initialPhase = 11;</code>
     * @return The initialPhase.
     */
    boolean getInitialPhase();

    /**
     * <code>bool proofGeneration = 12;</code>
     * @return The proofGeneration.
     */
    boolean getProofGeneration();

    /**
     * <code>.solver.PBCnfMethod cnfMethod = 13;</code>
     * @return The enum numeric value on the wire for cnfMethod.
     */
    int getCnfMethodValue();
    /**
     * <code>.solver.PBCnfMethod cnfMethod = 13;</code>
     * @return The cnfMethod.
     */
    com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBCnfMethod getCnfMethod();

    /**
     * <code>bool bbInitialUBCheckForRotatableLiterals = 14;</code>
     * @return The bbInitialUBCheckForRotatableLiterals.
     */
    boolean getBbInitialUBCheckForRotatableLiterals();

    /**
     * <code>bool bbCheckForComplementModelLiterals = 15;</code>
     * @return The bbCheckForComplementModelLiterals.
     */
    boolean getBbCheckForComplementModelLiterals();

    /**
     * <code>bool bbCheckForRotatableLiterals = 16;</code>
     * @return The bbCheckForRotatableLiterals.
     */
    boolean getBbCheckForRotatableLiterals();
  }
  /**
   * Protobuf type {@code solver.PBMiniSatConfig}
   */
  public static final class PBMiniSatConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:solver.PBMiniSatConfig)
      PBMiniSatConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PBMiniSatConfig.newBuilder() to construct.
    private PBMiniSatConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PBMiniSatConfig() {
      clauseMin_ = 0;
      cnfMethod_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PBMiniSatConfig();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.internal_static_solver_PBMiniSatConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.internal_static_solver_PBMiniSatConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig.class, com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig.Builder.class);
    }

    public static final int VARDECAY_FIELD_NUMBER = 1;
    private double varDecay_ = 0D;
    /**
     * <code>double varDecay = 1;</code>
     * @return The varDecay.
     */
    @java.lang.Override
    public double getVarDecay() {
      return varDecay_;
    }

    public static final int VARINC_FIELD_NUMBER = 2;
    private double varInc_ = 0D;
    /**
     * <code>double varInc = 2;</code>
     * @return The varInc.
     */
    @java.lang.Override
    public double getVarInc() {
      return varInc_;
    }

    public static final int CLAUSEMIN_FIELD_NUMBER = 3;
    private int clauseMin_ = 0;
    /**
     * <code>.solver.PBClauseMinimization clauseMin = 3;</code>
     * @return The enum numeric value on the wire for clauseMin.
     */
    @java.lang.Override public int getClauseMinValue() {
      return clauseMin_;
    }
    /**
     * <code>.solver.PBClauseMinimization clauseMin = 3;</code>
     * @return The clauseMin.
     */
    @java.lang.Override public com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization getClauseMin() {
      com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization result = com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization.forNumber(clauseMin_);
      return result == null ? com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization.UNRECOGNIZED : result;
    }

    public static final int RESTARTFIRST_FIELD_NUMBER = 4;
    private int restartFirst_ = 0;
    /**
     * <code>int32 restartFirst = 4;</code>
     * @return The restartFirst.
     */
    @java.lang.Override
    public int getRestartFirst() {
      return restartFirst_;
    }

    public static final int RESTARTINC_FIELD_NUMBER = 5;
    private double restartInc_ = 0D;
    /**
     * <code>double restartInc = 5;</code>
     * @return The restartInc.
     */
    @java.lang.Override
    public double getRestartInc() {
      return restartInc_;
    }

    public static final int CLAUSEDECAY_FIELD_NUMBER = 6;
    private double clauseDecay_ = 0D;
    /**
     * <code>double clauseDecay = 6;</code>
     * @return The clauseDecay.
     */
    @java.lang.Override
    public double getClauseDecay() {
      return clauseDecay_;
    }

    public static final int REMOVESATISFIED_FIELD_NUMBER = 7;
    private boolean removeSatisfied_ = false;
    /**
     * <code>bool removeSatisfied = 7;</code>
     * @return The removeSatisfied.
     */
    @java.lang.Override
    public boolean getRemoveSatisfied() {
      return removeSatisfied_;
    }

    public static final int LEARNTSIZEFACTOR_FIELD_NUMBER = 8;
    private double learntsizeFactor_ = 0D;
    /**
     * <code>double learntsizeFactor = 8;</code>
     * @return The learntsizeFactor.
     */
    @java.lang.Override
    public double getLearntsizeFactor() {
      return learntsizeFactor_;
    }

    public static final int LEARNTSIZEINC_FIELD_NUMBER = 9;
    private double learntsizeInc_ = 0D;
    /**
     * <code>double learntsizeInc = 9;</code>
     * @return The learntsizeInc.
     */
    @java.lang.Override
    public double getLearntsizeInc() {
      return learntsizeInc_;
    }

    public static final int INCREMENTAL_FIELD_NUMBER = 10;
    private boolean incremental_ = false;
    /**
     * <code>bool incremental = 10;</code>
     * @return The incremental.
     */
    @java.lang.Override
    public boolean getIncremental() {
      return incremental_;
    }

    public static final int INITIALPHASE_FIELD_NUMBER = 11;
    private boolean initialPhase_ = false;
    /**
     * <code>bool initialPhase = 11;</code>
     * @return The initialPhase.
     */
    @java.lang.Override
    public boolean getInitialPhase() {
      return initialPhase_;
    }

    public static final int PROOFGENERATION_FIELD_NUMBER = 12;
    private boolean proofGeneration_ = false;
    /**
     * <code>bool proofGeneration = 12;</code>
     * @return The proofGeneration.
     */
    @java.lang.Override
    public boolean getProofGeneration() {
      return proofGeneration_;
    }

    public static final int CNFMETHOD_FIELD_NUMBER = 13;
    private int cnfMethod_ = 0;
    /**
     * <code>.solver.PBCnfMethod cnfMethod = 13;</code>
     * @return The enum numeric value on the wire for cnfMethod.
     */
    @java.lang.Override public int getCnfMethodValue() {
      return cnfMethod_;
    }
    /**
     * <code>.solver.PBCnfMethod cnfMethod = 13;</code>
     * @return The cnfMethod.
     */
    @java.lang.Override public com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBCnfMethod getCnfMethod() {
      com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBCnfMethod result = com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBCnfMethod.forNumber(cnfMethod_);
      return result == null ? com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBCnfMethod.UNRECOGNIZED : result;
    }

    public static final int BBINITIALUBCHECKFORROTATABLELITERALS_FIELD_NUMBER = 14;
    private boolean bbInitialUBCheckForRotatableLiterals_ = false;
    /**
     * <code>bool bbInitialUBCheckForRotatableLiterals = 14;</code>
     * @return The bbInitialUBCheckForRotatableLiterals.
     */
    @java.lang.Override
    public boolean getBbInitialUBCheckForRotatableLiterals() {
      return bbInitialUBCheckForRotatableLiterals_;
    }

    public static final int BBCHECKFORCOMPLEMENTMODELLITERALS_FIELD_NUMBER = 15;
    private boolean bbCheckForComplementModelLiterals_ = false;
    /**
     * <code>bool bbCheckForComplementModelLiterals = 15;</code>
     * @return The bbCheckForComplementModelLiterals.
     */
    @java.lang.Override
    public boolean getBbCheckForComplementModelLiterals() {
      return bbCheckForComplementModelLiterals_;
    }

    public static final int BBCHECKFORROTATABLELITERALS_FIELD_NUMBER = 16;
    private boolean bbCheckForRotatableLiterals_ = false;
    /**
     * <code>bool bbCheckForRotatableLiterals = 16;</code>
     * @return The bbCheckForRotatableLiterals.
     */
    @java.lang.Override
    public boolean getBbCheckForRotatableLiterals() {
      return bbCheckForRotatableLiterals_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Double.doubleToRawLongBits(varDecay_) != 0) {
        output.writeDouble(1, varDecay_);
      }
      if (java.lang.Double.doubleToRawLongBits(varInc_) != 0) {
        output.writeDouble(2, varInc_);
      }
      if (clauseMin_ != com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization.NONE.getNumber()) {
        output.writeEnum(3, clauseMin_);
      }
      if (restartFirst_ != 0) {
        output.writeInt32(4, restartFirst_);
      }
      if (java.lang.Double.doubleToRawLongBits(restartInc_) != 0) {
        output.writeDouble(5, restartInc_);
      }
      if (java.lang.Double.doubleToRawLongBits(clauseDecay_) != 0) {
        output.writeDouble(6, clauseDecay_);
      }
      if (removeSatisfied_ != false) {
        output.writeBool(7, removeSatisfied_);
      }
      if (java.lang.Double.doubleToRawLongBits(learntsizeFactor_) != 0) {
        output.writeDouble(8, learntsizeFactor_);
      }
      if (java.lang.Double.doubleToRawLongBits(learntsizeInc_) != 0) {
        output.writeDouble(9, learntsizeInc_);
      }
      if (incremental_ != false) {
        output.writeBool(10, incremental_);
      }
      if (initialPhase_ != false) {
        output.writeBool(11, initialPhase_);
      }
      if (proofGeneration_ != false) {
        output.writeBool(12, proofGeneration_);
      }
      if (cnfMethod_ != com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBCnfMethod.FACTORY_CNF.getNumber()) {
        output.writeEnum(13, cnfMethod_);
      }
      if (bbInitialUBCheckForRotatableLiterals_ != false) {
        output.writeBool(14, bbInitialUBCheckForRotatableLiterals_);
      }
      if (bbCheckForComplementModelLiterals_ != false) {
        output.writeBool(15, bbCheckForComplementModelLiterals_);
      }
      if (bbCheckForRotatableLiterals_ != false) {
        output.writeBool(16, bbCheckForRotatableLiterals_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Double.doubleToRawLongBits(varDecay_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, varDecay_);
      }
      if (java.lang.Double.doubleToRawLongBits(varInc_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, varInc_);
      }
      if (clauseMin_ != com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization.NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, clauseMin_);
      }
      if (restartFirst_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, restartFirst_);
      }
      if (java.lang.Double.doubleToRawLongBits(restartInc_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, restartInc_);
      }
      if (java.lang.Double.doubleToRawLongBits(clauseDecay_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, clauseDecay_);
      }
      if (removeSatisfied_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, removeSatisfied_);
      }
      if (java.lang.Double.doubleToRawLongBits(learntsizeFactor_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, learntsizeFactor_);
      }
      if (java.lang.Double.doubleToRawLongBits(learntsizeInc_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, learntsizeInc_);
      }
      if (incremental_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, incremental_);
      }
      if (initialPhase_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, initialPhase_);
      }
      if (proofGeneration_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, proofGeneration_);
      }
      if (cnfMethod_ != com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBCnfMethod.FACTORY_CNF.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(13, cnfMethod_);
      }
      if (bbInitialUBCheckForRotatableLiterals_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, bbInitialUBCheckForRotatableLiterals_);
      }
      if (bbCheckForComplementModelLiterals_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, bbCheckForComplementModelLiterals_);
      }
      if (bbCheckForRotatableLiterals_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, bbCheckForRotatableLiterals_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig)) {
        return super.equals(obj);
      }
      com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig other = (com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig) obj;

      if (java.lang.Double.doubleToLongBits(getVarDecay())
          != java.lang.Double.doubleToLongBits(
              other.getVarDecay())) return false;
      if (java.lang.Double.doubleToLongBits(getVarInc())
          != java.lang.Double.doubleToLongBits(
              other.getVarInc())) return false;
      if (clauseMin_ != other.clauseMin_) return false;
      if (getRestartFirst()
          != other.getRestartFirst()) return false;
      if (java.lang.Double.doubleToLongBits(getRestartInc())
          != java.lang.Double.doubleToLongBits(
              other.getRestartInc())) return false;
      if (java.lang.Double.doubleToLongBits(getClauseDecay())
          != java.lang.Double.doubleToLongBits(
              other.getClauseDecay())) return false;
      if (getRemoveSatisfied()
          != other.getRemoveSatisfied()) return false;
      if (java.lang.Double.doubleToLongBits(getLearntsizeFactor())
          != java.lang.Double.doubleToLongBits(
              other.getLearntsizeFactor())) return false;
      if (java.lang.Double.doubleToLongBits(getLearntsizeInc())
          != java.lang.Double.doubleToLongBits(
              other.getLearntsizeInc())) return false;
      if (getIncremental()
          != other.getIncremental()) return false;
      if (getInitialPhase()
          != other.getInitialPhase()) return false;
      if (getProofGeneration()
          != other.getProofGeneration()) return false;
      if (cnfMethod_ != other.cnfMethod_) return false;
      if (getBbInitialUBCheckForRotatableLiterals()
          != other.getBbInitialUBCheckForRotatableLiterals()) return false;
      if (getBbCheckForComplementModelLiterals()
          != other.getBbCheckForComplementModelLiterals()) return false;
      if (getBbCheckForRotatableLiterals()
          != other.getBbCheckForRotatableLiterals()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VARDECAY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getVarDecay()));
      hash = (37 * hash) + VARINC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getVarInc()));
      hash = (37 * hash) + CLAUSEMIN_FIELD_NUMBER;
      hash = (53 * hash) + clauseMin_;
      hash = (37 * hash) + RESTARTFIRST_FIELD_NUMBER;
      hash = (53 * hash) + getRestartFirst();
      hash = (37 * hash) + RESTARTINC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getRestartInc()));
      hash = (37 * hash) + CLAUSEDECAY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getClauseDecay()));
      hash = (37 * hash) + REMOVESATISFIED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRemoveSatisfied());
      hash = (37 * hash) + LEARNTSIZEFACTOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLearntsizeFactor()));
      hash = (37 * hash) + LEARNTSIZEINC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLearntsizeInc()));
      hash = (37 * hash) + INCREMENTAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIncremental());
      hash = (37 * hash) + INITIALPHASE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getInitialPhase());
      hash = (37 * hash) + PROOFGENERATION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getProofGeneration());
      hash = (37 * hash) + CNFMETHOD_FIELD_NUMBER;
      hash = (53 * hash) + cnfMethod_;
      hash = (37 * hash) + BBINITIALUBCHECKFORROTATABLELITERALS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getBbInitialUBCheckForRotatableLiterals());
      hash = (37 * hash) + BBCHECKFORCOMPLEMENTMODELLITERALS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getBbCheckForComplementModelLiterals());
      hash = (37 * hash) + BBCHECKFORROTATABLELITERALS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getBbCheckForRotatableLiterals());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code solver.PBMiniSatConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:solver.PBMiniSatConfig)
        com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.internal_static_solver_PBMiniSatConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.internal_static_solver_PBMiniSatConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig.class, com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig.Builder.class);
      }

      // Construct using com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        varDecay_ = 0D;
        varInc_ = 0D;
        clauseMin_ = 0;
        restartFirst_ = 0;
        restartInc_ = 0D;
        clauseDecay_ = 0D;
        removeSatisfied_ = false;
        learntsizeFactor_ = 0D;
        learntsizeInc_ = 0D;
        incremental_ = false;
        initialPhase_ = false;
        proofGeneration_ = false;
        cnfMethod_ = 0;
        bbInitialUBCheckForRotatableLiterals_ = false;
        bbCheckForComplementModelLiterals_ = false;
        bbCheckForRotatableLiterals_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.internal_static_solver_PBMiniSatConfig_descriptor;
      }

      @java.lang.Override
      public com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig getDefaultInstanceForType() {
        return com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig.getDefaultInstance();
      }

      @java.lang.Override
      public com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig build() {
        com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig buildPartial() {
        com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig result = new com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.varDecay_ = varDecay_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.varInc_ = varInc_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.clauseMin_ = clauseMin_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.restartFirst_ = restartFirst_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.restartInc_ = restartInc_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.clauseDecay_ = clauseDecay_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.removeSatisfied_ = removeSatisfied_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.learntsizeFactor_ = learntsizeFactor_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.learntsizeInc_ = learntsizeInc_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.incremental_ = incremental_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.initialPhase_ = initialPhase_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.proofGeneration_ = proofGeneration_;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.cnfMethod_ = cnfMethod_;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.bbInitialUBCheckForRotatableLiterals_ = bbInitialUBCheckForRotatableLiterals_;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.bbCheckForComplementModelLiterals_ = bbCheckForComplementModelLiterals_;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.bbCheckForRotatableLiterals_ = bbCheckForRotatableLiterals_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig) {
          return mergeFrom((com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig other) {
        if (other == com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig.getDefaultInstance()) return this;
        if (other.getVarDecay() != 0D) {
          setVarDecay(other.getVarDecay());
        }
        if (other.getVarInc() != 0D) {
          setVarInc(other.getVarInc());
        }
        if (other.clauseMin_ != 0) {
          setClauseMinValue(other.getClauseMinValue());
        }
        if (other.getRestartFirst() != 0) {
          setRestartFirst(other.getRestartFirst());
        }
        if (other.getRestartInc() != 0D) {
          setRestartInc(other.getRestartInc());
        }
        if (other.getClauseDecay() != 0D) {
          setClauseDecay(other.getClauseDecay());
        }
        if (other.getRemoveSatisfied() != false) {
          setRemoveSatisfied(other.getRemoveSatisfied());
        }
        if (other.getLearntsizeFactor() != 0D) {
          setLearntsizeFactor(other.getLearntsizeFactor());
        }
        if (other.getLearntsizeInc() != 0D) {
          setLearntsizeInc(other.getLearntsizeInc());
        }
        if (other.getIncremental() != false) {
          setIncremental(other.getIncremental());
        }
        if (other.getInitialPhase() != false) {
          setInitialPhase(other.getInitialPhase());
        }
        if (other.getProofGeneration() != false) {
          setProofGeneration(other.getProofGeneration());
        }
        if (other.cnfMethod_ != 0) {
          setCnfMethodValue(other.getCnfMethodValue());
        }
        if (other.getBbInitialUBCheckForRotatableLiterals() != false) {
          setBbInitialUBCheckForRotatableLiterals(other.getBbInitialUBCheckForRotatableLiterals());
        }
        if (other.getBbCheckForComplementModelLiterals() != false) {
          setBbCheckForComplementModelLiterals(other.getBbCheckForComplementModelLiterals());
        }
        if (other.getBbCheckForRotatableLiterals() != false) {
          setBbCheckForRotatableLiterals(other.getBbCheckForRotatableLiterals());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                varDecay_ = input.readDouble();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 17: {
                varInc_ = input.readDouble();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 24: {
                clauseMin_ = input.readEnum();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                restartFirst_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 41: {
                restartInc_ = input.readDouble();
                bitField0_ |= 0x00000010;
                break;
              } // case 41
              case 49: {
                clauseDecay_ = input.readDouble();
                bitField0_ |= 0x00000020;
                break;
              } // case 49
              case 56: {
                removeSatisfied_ = input.readBool();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 65: {
                learntsizeFactor_ = input.readDouble();
                bitField0_ |= 0x00000080;
                break;
              } // case 65
              case 73: {
                learntsizeInc_ = input.readDouble();
                bitField0_ |= 0x00000100;
                break;
              } // case 73
              case 80: {
                incremental_ = input.readBool();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 88: {
                initialPhase_ = input.readBool();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
              case 96: {
                proofGeneration_ = input.readBool();
                bitField0_ |= 0x00000800;
                break;
              } // case 96
              case 104: {
                cnfMethod_ = input.readEnum();
                bitField0_ |= 0x00001000;
                break;
              } // case 104
              case 112: {
                bbInitialUBCheckForRotatableLiterals_ = input.readBool();
                bitField0_ |= 0x00002000;
                break;
              } // case 112
              case 120: {
                bbCheckForComplementModelLiterals_ = input.readBool();
                bitField0_ |= 0x00004000;
                break;
              } // case 120
              case 128: {
                bbCheckForRotatableLiterals_ = input.readBool();
                bitField0_ |= 0x00008000;
                break;
              } // case 128
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private double varDecay_ ;
      /**
       * <code>double varDecay = 1;</code>
       * @return The varDecay.
       */
      @java.lang.Override
      public double getVarDecay() {
        return varDecay_;
      }
      /**
       * <code>double varDecay = 1;</code>
       * @param value The varDecay to set.
       * @return This builder for chaining.
       */
      public Builder setVarDecay(double value) {

        varDecay_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>double varDecay = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearVarDecay() {
        bitField0_ = (bitField0_ & ~0x00000001);
        varDecay_ = 0D;
        onChanged();
        return this;
      }

      private double varInc_ ;
      /**
       * <code>double varInc = 2;</code>
       * @return The varInc.
       */
      @java.lang.Override
      public double getVarInc() {
        return varInc_;
      }
      /**
       * <code>double varInc = 2;</code>
       * @param value The varInc to set.
       * @return This builder for chaining.
       */
      public Builder setVarInc(double value) {

        varInc_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>double varInc = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearVarInc() {
        bitField0_ = (bitField0_ & ~0x00000002);
        varInc_ = 0D;
        onChanged();
        return this;
      }

      private int clauseMin_ = 0;
      /**
       * <code>.solver.PBClauseMinimization clauseMin = 3;</code>
       * @return The enum numeric value on the wire for clauseMin.
       */
      @java.lang.Override public int getClauseMinValue() {
        return clauseMin_;
      }
      /**
       * <code>.solver.PBClauseMinimization clauseMin = 3;</code>
       * @param value The enum numeric value on the wire for clauseMin to set.
       * @return This builder for chaining.
       */
      public Builder setClauseMinValue(int value) {
        clauseMin_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBClauseMinimization clauseMin = 3;</code>
       * @return The clauseMin.
       */
      @java.lang.Override
      public com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization getClauseMin() {
        com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization result = com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization.forNumber(clauseMin_);
        return result == null ? com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization.UNRECOGNIZED : result;
      }
      /**
       * <code>.solver.PBClauseMinimization clauseMin = 3;</code>
       * @param value The clauseMin to set.
       * @return This builder for chaining.
       */
      public Builder setClauseMin(com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        clauseMin_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBClauseMinimization clauseMin = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearClauseMin() {
        bitField0_ = (bitField0_ & ~0x00000004);
        clauseMin_ = 0;
        onChanged();
        return this;
      }

      private int restartFirst_ ;
      /**
       * <code>int32 restartFirst = 4;</code>
       * @return The restartFirst.
       */
      @java.lang.Override
      public int getRestartFirst() {
        return restartFirst_;
      }
      /**
       * <code>int32 restartFirst = 4;</code>
       * @param value The restartFirst to set.
       * @return This builder for chaining.
       */
      public Builder setRestartFirst(int value) {

        restartFirst_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>int32 restartFirst = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRestartFirst() {
        bitField0_ = (bitField0_ & ~0x00000008);
        restartFirst_ = 0;
        onChanged();
        return this;
      }

      private double restartInc_ ;
      /**
       * <code>double restartInc = 5;</code>
       * @return The restartInc.
       */
      @java.lang.Override
      public double getRestartInc() {
        return restartInc_;
      }
      /**
       * <code>double restartInc = 5;</code>
       * @param value The restartInc to set.
       * @return This builder for chaining.
       */
      public Builder setRestartInc(double value) {

        restartInc_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>double restartInc = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearRestartInc() {
        bitField0_ = (bitField0_ & ~0x00000010);
        restartInc_ = 0D;
        onChanged();
        return this;
      }

      private double clauseDecay_ ;
      /**
       * <code>double clauseDecay = 6;</code>
       * @return The clauseDecay.
       */
      @java.lang.Override
      public double getClauseDecay() {
        return clauseDecay_;
      }
      /**
       * <code>double clauseDecay = 6;</code>
       * @param value The clauseDecay to set.
       * @return This builder for chaining.
       */
      public Builder setClauseDecay(double value) {

        clauseDecay_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>double clauseDecay = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearClauseDecay() {
        bitField0_ = (bitField0_ & ~0x00000020);
        clauseDecay_ = 0D;
        onChanged();
        return this;
      }

      private boolean removeSatisfied_ ;
      /**
       * <code>bool removeSatisfied = 7;</code>
       * @return The removeSatisfied.
       */
      @java.lang.Override
      public boolean getRemoveSatisfied() {
        return removeSatisfied_;
      }
      /**
       * <code>bool removeSatisfied = 7;</code>
       * @param value The removeSatisfied to set.
       * @return This builder for chaining.
       */
      public Builder setRemoveSatisfied(boolean value) {

        removeSatisfied_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>bool removeSatisfied = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearRemoveSatisfied() {
        bitField0_ = (bitField0_ & ~0x00000040);
        removeSatisfied_ = false;
        onChanged();
        return this;
      }

      private double learntsizeFactor_ ;
      /**
       * <code>double learntsizeFactor = 8;</code>
       * @return The learntsizeFactor.
       */
      @java.lang.Override
      public double getLearntsizeFactor() {
        return learntsizeFactor_;
      }
      /**
       * <code>double learntsizeFactor = 8;</code>
       * @param value The learntsizeFactor to set.
       * @return This builder for chaining.
       */
      public Builder setLearntsizeFactor(double value) {

        learntsizeFactor_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>double learntsizeFactor = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearLearntsizeFactor() {
        bitField0_ = (bitField0_ & ~0x00000080);
        learntsizeFactor_ = 0D;
        onChanged();
        return this;
      }

      private double learntsizeInc_ ;
      /**
       * <code>double learntsizeInc = 9;</code>
       * @return The learntsizeInc.
       */
      @java.lang.Override
      public double getLearntsizeInc() {
        return learntsizeInc_;
      }
      /**
       * <code>double learntsizeInc = 9;</code>
       * @param value The learntsizeInc to set.
       * @return This builder for chaining.
       */
      public Builder setLearntsizeInc(double value) {

        learntsizeInc_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>double learntsizeInc = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLearntsizeInc() {
        bitField0_ = (bitField0_ & ~0x00000100);
        learntsizeInc_ = 0D;
        onChanged();
        return this;
      }

      private boolean incremental_ ;
      /**
       * <code>bool incremental = 10;</code>
       * @return The incremental.
       */
      @java.lang.Override
      public boolean getIncremental() {
        return incremental_;
      }
      /**
       * <code>bool incremental = 10;</code>
       * @param value The incremental to set.
       * @return This builder for chaining.
       */
      public Builder setIncremental(boolean value) {

        incremental_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>bool incremental = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearIncremental() {
        bitField0_ = (bitField0_ & ~0x00000200);
        incremental_ = false;
        onChanged();
        return this;
      }

      private boolean initialPhase_ ;
      /**
       * <code>bool initialPhase = 11;</code>
       * @return The initialPhase.
       */
      @java.lang.Override
      public boolean getInitialPhase() {
        return initialPhase_;
      }
      /**
       * <code>bool initialPhase = 11;</code>
       * @param value The initialPhase to set.
       * @return This builder for chaining.
       */
      public Builder setInitialPhase(boolean value) {

        initialPhase_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>bool initialPhase = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearInitialPhase() {
        bitField0_ = (bitField0_ & ~0x00000400);
        initialPhase_ = false;
        onChanged();
        return this;
      }

      private boolean proofGeneration_ ;
      /**
       * <code>bool proofGeneration = 12;</code>
       * @return The proofGeneration.
       */
      @java.lang.Override
      public boolean getProofGeneration() {
        return proofGeneration_;
      }
      /**
       * <code>bool proofGeneration = 12;</code>
       * @param value The proofGeneration to set.
       * @return This builder for chaining.
       */
      public Builder setProofGeneration(boolean value) {

        proofGeneration_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>bool proofGeneration = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearProofGeneration() {
        bitField0_ = (bitField0_ & ~0x00000800);
        proofGeneration_ = false;
        onChanged();
        return this;
      }

      private int cnfMethod_ = 0;
      /**
       * <code>.solver.PBCnfMethod cnfMethod = 13;</code>
       * @return The enum numeric value on the wire for cnfMethod.
       */
      @java.lang.Override public int getCnfMethodValue() {
        return cnfMethod_;
      }
      /**
       * <code>.solver.PBCnfMethod cnfMethod = 13;</code>
       * @param value The enum numeric value on the wire for cnfMethod to set.
       * @return This builder for chaining.
       */
      public Builder setCnfMethodValue(int value) {
        cnfMethod_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBCnfMethod cnfMethod = 13;</code>
       * @return The cnfMethod.
       */
      @java.lang.Override
      public com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBCnfMethod getCnfMethod() {
        com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBCnfMethod result = com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBCnfMethod.forNumber(cnfMethod_);
        return result == null ? com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBCnfMethod.UNRECOGNIZED : result;
      }
      /**
       * <code>.solver.PBCnfMethod cnfMethod = 13;</code>
       * @param value The cnfMethod to set.
       * @return This builder for chaining.
       */
      public Builder setCnfMethod(com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBCnfMethod value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00001000;
        cnfMethod_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBCnfMethod cnfMethod = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearCnfMethod() {
        bitField0_ = (bitField0_ & ~0x00001000);
        cnfMethod_ = 0;
        onChanged();
        return this;
      }

      private boolean bbInitialUBCheckForRotatableLiterals_ ;
      /**
       * <code>bool bbInitialUBCheckForRotatableLiterals = 14;</code>
       * @return The bbInitialUBCheckForRotatableLiterals.
       */
      @java.lang.Override
      public boolean getBbInitialUBCheckForRotatableLiterals() {
        return bbInitialUBCheckForRotatableLiterals_;
      }
      /**
       * <code>bool bbInitialUBCheckForRotatableLiterals = 14;</code>
       * @param value The bbInitialUBCheckForRotatableLiterals to set.
       * @return This builder for chaining.
       */
      public Builder setBbInitialUBCheckForRotatableLiterals(boolean value) {

        bbInitialUBCheckForRotatableLiterals_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>bool bbInitialUBCheckForRotatableLiterals = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearBbInitialUBCheckForRotatableLiterals() {
        bitField0_ = (bitField0_ & ~0x00002000);
        bbInitialUBCheckForRotatableLiterals_ = false;
        onChanged();
        return this;
      }

      private boolean bbCheckForComplementModelLiterals_ ;
      /**
       * <code>bool bbCheckForComplementModelLiterals = 15;</code>
       * @return The bbCheckForComplementModelLiterals.
       */
      @java.lang.Override
      public boolean getBbCheckForComplementModelLiterals() {
        return bbCheckForComplementModelLiterals_;
      }
      /**
       * <code>bool bbCheckForComplementModelLiterals = 15;</code>
       * @param value The bbCheckForComplementModelLiterals to set.
       * @return This builder for chaining.
       */
      public Builder setBbCheckForComplementModelLiterals(boolean value) {

        bbCheckForComplementModelLiterals_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>bool bbCheckForComplementModelLiterals = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearBbCheckForComplementModelLiterals() {
        bitField0_ = (bitField0_ & ~0x00004000);
        bbCheckForComplementModelLiterals_ = false;
        onChanged();
        return this;
      }

      private boolean bbCheckForRotatableLiterals_ ;
      /**
       * <code>bool bbCheckForRotatableLiterals = 16;</code>
       * @return The bbCheckForRotatableLiterals.
       */
      @java.lang.Override
      public boolean getBbCheckForRotatableLiterals() {
        return bbCheckForRotatableLiterals_;
      }
      /**
       * <code>bool bbCheckForRotatableLiterals = 16;</code>
       * @param value The bbCheckForRotatableLiterals to set.
       * @return This builder for chaining.
       */
      public Builder setBbCheckForRotatableLiterals(boolean value) {

        bbCheckForRotatableLiterals_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>bool bbCheckForRotatableLiterals = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearBbCheckForRotatableLiterals() {
        bitField0_ = (bitField0_ & ~0x00008000);
        bbCheckForRotatableLiterals_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:solver.PBMiniSatConfig)
    }

    // @@protoc_insertion_point(class_scope:solver.PBMiniSatConfig)
    private static final com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig();
    }

    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PBMiniSatConfig>
        PARSER = new com.google.protobuf.AbstractParser<PBMiniSatConfig>() {
      @java.lang.Override
      public PBMiniSatConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PBMiniSatConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PBMiniSatConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PBGlucoseConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:solver.PBGlucoseConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 lbLBDMinimizingClause = 1;</code>
     * @return The lbLBDMinimizingClause.
     */
    int getLbLBDMinimizingClause();

    /**
     * <code>int32 lbLBDFrozenClause = 2;</code>
     * @return The lbLBDFrozenClause.
     */
    int getLbLBDFrozenClause();

    /**
     * <code>int32 lbSizeMinimizingClause = 3;</code>
     * @return The lbSizeMinimizingClause.
     */
    int getLbSizeMinimizingClause();

    /**
     * <code>int32 firstReduceDB = 4;</code>
     * @return The firstReduceDB.
     */
    int getFirstReduceDB();

    /**
     * <code>int32 specialIncReduceDB = 5;</code>
     * @return The specialIncReduceDB.
     */
    int getSpecialIncReduceDB();

    /**
     * <code>int32 incReduceDB = 6;</code>
     * @return The incReduceDB.
     */
    int getIncReduceDB();

    /**
     * <code>double factorK = 7;</code>
     * @return The factorK.
     */
    double getFactorK();

    /**
     * <code>double factorR = 8;</code>
     * @return The factorR.
     */
    double getFactorR();

    /**
     * <code>int32 sizeLBDQueue = 9;</code>
     * @return The sizeLBDQueue.
     */
    int getSizeLBDQueue();

    /**
     * <code>int32 sizeTrailQueue = 10;</code>
     * @return The sizeTrailQueue.
     */
    int getSizeTrailQueue();

    /**
     * <code>bool reduceOnSize = 11;</code>
     * @return The reduceOnSize.
     */
    boolean getReduceOnSize();

    /**
     * <code>int32 reduceOnSizeSize = 12;</code>
     * @return The reduceOnSizeSize.
     */
    int getReduceOnSizeSize();

    /**
     * <code>double maxVarDecay = 13;</code>
     * @return The maxVarDecay.
     */
    double getMaxVarDecay();
  }
  /**
   * Protobuf type {@code solver.PBGlucoseConfig}
   */
  public static final class PBGlucoseConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:solver.PBGlucoseConfig)
      PBGlucoseConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PBGlucoseConfig.newBuilder() to construct.
    private PBGlucoseConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PBGlucoseConfig() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PBGlucoseConfig();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.internal_static_solver_PBGlucoseConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.internal_static_solver_PBGlucoseConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig.class, com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig.Builder.class);
    }

    public static final int LBLBDMINIMIZINGCLAUSE_FIELD_NUMBER = 1;
    private int lbLBDMinimizingClause_ = 0;
    /**
     * <code>int32 lbLBDMinimizingClause = 1;</code>
     * @return The lbLBDMinimizingClause.
     */
    @java.lang.Override
    public int getLbLBDMinimizingClause() {
      return lbLBDMinimizingClause_;
    }

    public static final int LBLBDFROZENCLAUSE_FIELD_NUMBER = 2;
    private int lbLBDFrozenClause_ = 0;
    /**
     * <code>int32 lbLBDFrozenClause = 2;</code>
     * @return The lbLBDFrozenClause.
     */
    @java.lang.Override
    public int getLbLBDFrozenClause() {
      return lbLBDFrozenClause_;
    }

    public static final int LBSIZEMINIMIZINGCLAUSE_FIELD_NUMBER = 3;
    private int lbSizeMinimizingClause_ = 0;
    /**
     * <code>int32 lbSizeMinimizingClause = 3;</code>
     * @return The lbSizeMinimizingClause.
     */
    @java.lang.Override
    public int getLbSizeMinimizingClause() {
      return lbSizeMinimizingClause_;
    }

    public static final int FIRSTREDUCEDB_FIELD_NUMBER = 4;
    private int firstReduceDB_ = 0;
    /**
     * <code>int32 firstReduceDB = 4;</code>
     * @return The firstReduceDB.
     */
    @java.lang.Override
    public int getFirstReduceDB() {
      return firstReduceDB_;
    }

    public static final int SPECIALINCREDUCEDB_FIELD_NUMBER = 5;
    private int specialIncReduceDB_ = 0;
    /**
     * <code>int32 specialIncReduceDB = 5;</code>
     * @return The specialIncReduceDB.
     */
    @java.lang.Override
    public int getSpecialIncReduceDB() {
      return specialIncReduceDB_;
    }

    public static final int INCREDUCEDB_FIELD_NUMBER = 6;
    private int incReduceDB_ = 0;
    /**
     * <code>int32 incReduceDB = 6;</code>
     * @return The incReduceDB.
     */
    @java.lang.Override
    public int getIncReduceDB() {
      return incReduceDB_;
    }

    public static final int FACTORK_FIELD_NUMBER = 7;
    private double factorK_ = 0D;
    /**
     * <code>double factorK = 7;</code>
     * @return The factorK.
     */
    @java.lang.Override
    public double getFactorK() {
      return factorK_;
    }

    public static final int FACTORR_FIELD_NUMBER = 8;
    private double factorR_ = 0D;
    /**
     * <code>double factorR = 8;</code>
     * @return The factorR.
     */
    @java.lang.Override
    public double getFactorR() {
      return factorR_;
    }

    public static final int SIZELBDQUEUE_FIELD_NUMBER = 9;
    private int sizeLBDQueue_ = 0;
    /**
     * <code>int32 sizeLBDQueue = 9;</code>
     * @return The sizeLBDQueue.
     */
    @java.lang.Override
    public int getSizeLBDQueue() {
      return sizeLBDQueue_;
    }

    public static final int SIZETRAILQUEUE_FIELD_NUMBER = 10;
    private int sizeTrailQueue_ = 0;
    /**
     * <code>int32 sizeTrailQueue = 10;</code>
     * @return The sizeTrailQueue.
     */
    @java.lang.Override
    public int getSizeTrailQueue() {
      return sizeTrailQueue_;
    }

    public static final int REDUCEONSIZE_FIELD_NUMBER = 11;
    private boolean reduceOnSize_ = false;
    /**
     * <code>bool reduceOnSize = 11;</code>
     * @return The reduceOnSize.
     */
    @java.lang.Override
    public boolean getReduceOnSize() {
      return reduceOnSize_;
    }

    public static final int REDUCEONSIZESIZE_FIELD_NUMBER = 12;
    private int reduceOnSizeSize_ = 0;
    /**
     * <code>int32 reduceOnSizeSize = 12;</code>
     * @return The reduceOnSizeSize.
     */
    @java.lang.Override
    public int getReduceOnSizeSize() {
      return reduceOnSizeSize_;
    }

    public static final int MAXVARDECAY_FIELD_NUMBER = 13;
    private double maxVarDecay_ = 0D;
    /**
     * <code>double maxVarDecay = 13;</code>
     * @return The maxVarDecay.
     */
    @java.lang.Override
    public double getMaxVarDecay() {
      return maxVarDecay_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (lbLBDMinimizingClause_ != 0) {
        output.writeInt32(1, lbLBDMinimizingClause_);
      }
      if (lbLBDFrozenClause_ != 0) {
        output.writeInt32(2, lbLBDFrozenClause_);
      }
      if (lbSizeMinimizingClause_ != 0) {
        output.writeInt32(3, lbSizeMinimizingClause_);
      }
      if (firstReduceDB_ != 0) {
        output.writeInt32(4, firstReduceDB_);
      }
      if (specialIncReduceDB_ != 0) {
        output.writeInt32(5, specialIncReduceDB_);
      }
      if (incReduceDB_ != 0) {
        output.writeInt32(6, incReduceDB_);
      }
      if (java.lang.Double.doubleToRawLongBits(factorK_) != 0) {
        output.writeDouble(7, factorK_);
      }
      if (java.lang.Double.doubleToRawLongBits(factorR_) != 0) {
        output.writeDouble(8, factorR_);
      }
      if (sizeLBDQueue_ != 0) {
        output.writeInt32(9, sizeLBDQueue_);
      }
      if (sizeTrailQueue_ != 0) {
        output.writeInt32(10, sizeTrailQueue_);
      }
      if (reduceOnSize_ != false) {
        output.writeBool(11, reduceOnSize_);
      }
      if (reduceOnSizeSize_ != 0) {
        output.writeInt32(12, reduceOnSizeSize_);
      }
      if (java.lang.Double.doubleToRawLongBits(maxVarDecay_) != 0) {
        output.writeDouble(13, maxVarDecay_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (lbLBDMinimizingClause_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, lbLBDMinimizingClause_);
      }
      if (lbLBDFrozenClause_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, lbLBDFrozenClause_);
      }
      if (lbSizeMinimizingClause_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, lbSizeMinimizingClause_);
      }
      if (firstReduceDB_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, firstReduceDB_);
      }
      if (specialIncReduceDB_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, specialIncReduceDB_);
      }
      if (incReduceDB_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, incReduceDB_);
      }
      if (java.lang.Double.doubleToRawLongBits(factorK_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, factorK_);
      }
      if (java.lang.Double.doubleToRawLongBits(factorR_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, factorR_);
      }
      if (sizeLBDQueue_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, sizeLBDQueue_);
      }
      if (sizeTrailQueue_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, sizeTrailQueue_);
      }
      if (reduceOnSize_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, reduceOnSize_);
      }
      if (reduceOnSizeSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, reduceOnSizeSize_);
      }
      if (java.lang.Double.doubleToRawLongBits(maxVarDecay_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, maxVarDecay_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig)) {
        return super.equals(obj);
      }
      com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig other = (com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig) obj;

      if (getLbLBDMinimizingClause()
          != other.getLbLBDMinimizingClause()) return false;
      if (getLbLBDFrozenClause()
          != other.getLbLBDFrozenClause()) return false;
      if (getLbSizeMinimizingClause()
          != other.getLbSizeMinimizingClause()) return false;
      if (getFirstReduceDB()
          != other.getFirstReduceDB()) return false;
      if (getSpecialIncReduceDB()
          != other.getSpecialIncReduceDB()) return false;
      if (getIncReduceDB()
          != other.getIncReduceDB()) return false;
      if (java.lang.Double.doubleToLongBits(getFactorK())
          != java.lang.Double.doubleToLongBits(
              other.getFactorK())) return false;
      if (java.lang.Double.doubleToLongBits(getFactorR())
          != java.lang.Double.doubleToLongBits(
              other.getFactorR())) return false;
      if (getSizeLBDQueue()
          != other.getSizeLBDQueue()) return false;
      if (getSizeTrailQueue()
          != other.getSizeTrailQueue()) return false;
      if (getReduceOnSize()
          != other.getReduceOnSize()) return false;
      if (getReduceOnSizeSize()
          != other.getReduceOnSizeSize()) return false;
      if (java.lang.Double.doubleToLongBits(getMaxVarDecay())
          != java.lang.Double.doubleToLongBits(
              other.getMaxVarDecay())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LBLBDMINIMIZINGCLAUSE_FIELD_NUMBER;
      hash = (53 * hash) + getLbLBDMinimizingClause();
      hash = (37 * hash) + LBLBDFROZENCLAUSE_FIELD_NUMBER;
      hash = (53 * hash) + getLbLBDFrozenClause();
      hash = (37 * hash) + LBSIZEMINIMIZINGCLAUSE_FIELD_NUMBER;
      hash = (53 * hash) + getLbSizeMinimizingClause();
      hash = (37 * hash) + FIRSTREDUCEDB_FIELD_NUMBER;
      hash = (53 * hash) + getFirstReduceDB();
      hash = (37 * hash) + SPECIALINCREDUCEDB_FIELD_NUMBER;
      hash = (53 * hash) + getSpecialIncReduceDB();
      hash = (37 * hash) + INCREDUCEDB_FIELD_NUMBER;
      hash = (53 * hash) + getIncReduceDB();
      hash = (37 * hash) + FACTORK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getFactorK()));
      hash = (37 * hash) + FACTORR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getFactorR()));
      hash = (37 * hash) + SIZELBDQUEUE_FIELD_NUMBER;
      hash = (53 * hash) + getSizeLBDQueue();
      hash = (37 * hash) + SIZETRAILQUEUE_FIELD_NUMBER;
      hash = (53 * hash) + getSizeTrailQueue();
      hash = (37 * hash) + REDUCEONSIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getReduceOnSize());
      hash = (37 * hash) + REDUCEONSIZESIZE_FIELD_NUMBER;
      hash = (53 * hash) + getReduceOnSizeSize();
      hash = (37 * hash) + MAXVARDECAY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMaxVarDecay()));
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code solver.PBGlucoseConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:solver.PBGlucoseConfig)
        com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.internal_static_solver_PBGlucoseConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.internal_static_solver_PBGlucoseConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig.class, com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig.Builder.class);
      }

      // Construct using com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        lbLBDMinimizingClause_ = 0;
        lbLBDFrozenClause_ = 0;
        lbSizeMinimizingClause_ = 0;
        firstReduceDB_ = 0;
        specialIncReduceDB_ = 0;
        incReduceDB_ = 0;
        factorK_ = 0D;
        factorR_ = 0D;
        sizeLBDQueue_ = 0;
        sizeTrailQueue_ = 0;
        reduceOnSize_ = false;
        reduceOnSizeSize_ = 0;
        maxVarDecay_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.internal_static_solver_PBGlucoseConfig_descriptor;
      }

      @java.lang.Override
      public com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig getDefaultInstanceForType() {
        return com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig.getDefaultInstance();
      }

      @java.lang.Override
      public com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig build() {
        com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig buildPartial() {
        com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig result = new com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.lbLBDMinimizingClause_ = lbLBDMinimizingClause_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.lbLBDFrozenClause_ = lbLBDFrozenClause_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.lbSizeMinimizingClause_ = lbSizeMinimizingClause_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.firstReduceDB_ = firstReduceDB_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.specialIncReduceDB_ = specialIncReduceDB_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.incReduceDB_ = incReduceDB_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.factorK_ = factorK_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.factorR_ = factorR_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.sizeLBDQueue_ = sizeLBDQueue_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.sizeTrailQueue_ = sizeTrailQueue_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.reduceOnSize_ = reduceOnSize_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.reduceOnSizeSize_ = reduceOnSizeSize_;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.maxVarDecay_ = maxVarDecay_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig) {
          return mergeFrom((com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig other) {
        if (other == com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig.getDefaultInstance()) return this;
        if (other.getLbLBDMinimizingClause() != 0) {
          setLbLBDMinimizingClause(other.getLbLBDMinimizingClause());
        }
        if (other.getLbLBDFrozenClause() != 0) {
          setLbLBDFrozenClause(other.getLbLBDFrozenClause());
        }
        if (other.getLbSizeMinimizingClause() != 0) {
          setLbSizeMinimizingClause(other.getLbSizeMinimizingClause());
        }
        if (other.getFirstReduceDB() != 0) {
          setFirstReduceDB(other.getFirstReduceDB());
        }
        if (other.getSpecialIncReduceDB() != 0) {
          setSpecialIncReduceDB(other.getSpecialIncReduceDB());
        }
        if (other.getIncReduceDB() != 0) {
          setIncReduceDB(other.getIncReduceDB());
        }
        if (other.getFactorK() != 0D) {
          setFactorK(other.getFactorK());
        }
        if (other.getFactorR() != 0D) {
          setFactorR(other.getFactorR());
        }
        if (other.getSizeLBDQueue() != 0) {
          setSizeLBDQueue(other.getSizeLBDQueue());
        }
        if (other.getSizeTrailQueue() != 0) {
          setSizeTrailQueue(other.getSizeTrailQueue());
        }
        if (other.getReduceOnSize() != false) {
          setReduceOnSize(other.getReduceOnSize());
        }
        if (other.getReduceOnSizeSize() != 0) {
          setReduceOnSizeSize(other.getReduceOnSizeSize());
        }
        if (other.getMaxVarDecay() != 0D) {
          setMaxVarDecay(other.getMaxVarDecay());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                lbLBDMinimizingClause_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                lbLBDFrozenClause_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                lbSizeMinimizingClause_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                firstReduceDB_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                specialIncReduceDB_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                incReduceDB_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 57: {
                factorK_ = input.readDouble();
                bitField0_ |= 0x00000040;
                break;
              } // case 57
              case 65: {
                factorR_ = input.readDouble();
                bitField0_ |= 0x00000080;
                break;
              } // case 65
              case 72: {
                sizeLBDQueue_ = input.readInt32();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                sizeTrailQueue_ = input.readInt32();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 88: {
                reduceOnSize_ = input.readBool();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
              case 96: {
                reduceOnSizeSize_ = input.readInt32();
                bitField0_ |= 0x00000800;
                break;
              } // case 96
              case 105: {
                maxVarDecay_ = input.readDouble();
                bitField0_ |= 0x00001000;
                break;
              } // case 105
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int lbLBDMinimizingClause_ ;
      /**
       * <code>int32 lbLBDMinimizingClause = 1;</code>
       * @return The lbLBDMinimizingClause.
       */
      @java.lang.Override
      public int getLbLBDMinimizingClause() {
        return lbLBDMinimizingClause_;
      }
      /**
       * <code>int32 lbLBDMinimizingClause = 1;</code>
       * @param value The lbLBDMinimizingClause to set.
       * @return This builder for chaining.
       */
      public Builder setLbLBDMinimizingClause(int value) {

        lbLBDMinimizingClause_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 lbLBDMinimizingClause = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLbLBDMinimizingClause() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lbLBDMinimizingClause_ = 0;
        onChanged();
        return this;
      }

      private int lbLBDFrozenClause_ ;
      /**
       * <code>int32 lbLBDFrozenClause = 2;</code>
       * @return The lbLBDFrozenClause.
       */
      @java.lang.Override
      public int getLbLBDFrozenClause() {
        return lbLBDFrozenClause_;
      }
      /**
       * <code>int32 lbLBDFrozenClause = 2;</code>
       * @param value The lbLBDFrozenClause to set.
       * @return This builder for chaining.
       */
      public Builder setLbLBDFrozenClause(int value) {

        lbLBDFrozenClause_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>int32 lbLBDFrozenClause = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLbLBDFrozenClause() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lbLBDFrozenClause_ = 0;
        onChanged();
        return this;
      }

      private int lbSizeMinimizingClause_ ;
      /**
       * <code>int32 lbSizeMinimizingClause = 3;</code>
       * @return The lbSizeMinimizingClause.
       */
      @java.lang.Override
      public int getLbSizeMinimizingClause() {
        return lbSizeMinimizingClause_;
      }
      /**
       * <code>int32 lbSizeMinimizingClause = 3;</code>
       * @param value The lbSizeMinimizingClause to set.
       * @return This builder for chaining.
       */
      public Builder setLbSizeMinimizingClause(int value) {

        lbSizeMinimizingClause_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>int32 lbSizeMinimizingClause = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLbSizeMinimizingClause() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lbSizeMinimizingClause_ = 0;
        onChanged();
        return this;
      }

      private int firstReduceDB_ ;
      /**
       * <code>int32 firstReduceDB = 4;</code>
       * @return The firstReduceDB.
       */
      @java.lang.Override
      public int getFirstReduceDB() {
        return firstReduceDB_;
      }
      /**
       * <code>int32 firstReduceDB = 4;</code>
       * @param value The firstReduceDB to set.
       * @return This builder for chaining.
       */
      public Builder setFirstReduceDB(int value) {

        firstReduceDB_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>int32 firstReduceDB = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearFirstReduceDB() {
        bitField0_ = (bitField0_ & ~0x00000008);
        firstReduceDB_ = 0;
        onChanged();
        return this;
      }

      private int specialIncReduceDB_ ;
      /**
       * <code>int32 specialIncReduceDB = 5;</code>
       * @return The specialIncReduceDB.
       */
      @java.lang.Override
      public int getSpecialIncReduceDB() {
        return specialIncReduceDB_;
      }
      /**
       * <code>int32 specialIncReduceDB = 5;</code>
       * @param value The specialIncReduceDB to set.
       * @return This builder for chaining.
       */
      public Builder setSpecialIncReduceDB(int value) {

        specialIncReduceDB_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>int32 specialIncReduceDB = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSpecialIncReduceDB() {
        bitField0_ = (bitField0_ & ~0x00000010);
        specialIncReduceDB_ = 0;
        onChanged();
        return this;
      }

      private int incReduceDB_ ;
      /**
       * <code>int32 incReduceDB = 6;</code>
       * @return The incReduceDB.
       */
      @java.lang.Override
      public int getIncReduceDB() {
        return incReduceDB_;
      }
      /**
       * <code>int32 incReduceDB = 6;</code>
       * @param value The incReduceDB to set.
       * @return This builder for chaining.
       */
      public Builder setIncReduceDB(int value) {

        incReduceDB_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>int32 incReduceDB = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearIncReduceDB() {
        bitField0_ = (bitField0_ & ~0x00000020);
        incReduceDB_ = 0;
        onChanged();
        return this;
      }

      private double factorK_ ;
      /**
       * <code>double factorK = 7;</code>
       * @return The factorK.
       */
      @java.lang.Override
      public double getFactorK() {
        return factorK_;
      }
      /**
       * <code>double factorK = 7;</code>
       * @param value The factorK to set.
       * @return This builder for chaining.
       */
      public Builder setFactorK(double value) {

        factorK_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>double factorK = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearFactorK() {
        bitField0_ = (bitField0_ & ~0x00000040);
        factorK_ = 0D;
        onChanged();
        return this;
      }

      private double factorR_ ;
      /**
       * <code>double factorR = 8;</code>
       * @return The factorR.
       */
      @java.lang.Override
      public double getFactorR() {
        return factorR_;
      }
      /**
       * <code>double factorR = 8;</code>
       * @param value The factorR to set.
       * @return This builder for chaining.
       */
      public Builder setFactorR(double value) {

        factorR_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>double factorR = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearFactorR() {
        bitField0_ = (bitField0_ & ~0x00000080);
        factorR_ = 0D;
        onChanged();
        return this;
      }

      private int sizeLBDQueue_ ;
      /**
       * <code>int32 sizeLBDQueue = 9;</code>
       * @return The sizeLBDQueue.
       */
      @java.lang.Override
      public int getSizeLBDQueue() {
        return sizeLBDQueue_;
      }
      /**
       * <code>int32 sizeLBDQueue = 9;</code>
       * @param value The sizeLBDQueue to set.
       * @return This builder for chaining.
       */
      public Builder setSizeLBDQueue(int value) {

        sizeLBDQueue_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>int32 sizeLBDQueue = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearSizeLBDQueue() {
        bitField0_ = (bitField0_ & ~0x00000100);
        sizeLBDQueue_ = 0;
        onChanged();
        return this;
      }

      private int sizeTrailQueue_ ;
      /**
       * <code>int32 sizeTrailQueue = 10;</code>
       * @return The sizeTrailQueue.
       */
      @java.lang.Override
      public int getSizeTrailQueue() {
        return sizeTrailQueue_;
      }
      /**
       * <code>int32 sizeTrailQueue = 10;</code>
       * @param value The sizeTrailQueue to set.
       * @return This builder for chaining.
       */
      public Builder setSizeTrailQueue(int value) {

        sizeTrailQueue_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>int32 sizeTrailQueue = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearSizeTrailQueue() {
        bitField0_ = (bitField0_ & ~0x00000200);
        sizeTrailQueue_ = 0;
        onChanged();
        return this;
      }

      private boolean reduceOnSize_ ;
      /**
       * <code>bool reduceOnSize = 11;</code>
       * @return The reduceOnSize.
       */
      @java.lang.Override
      public boolean getReduceOnSize() {
        return reduceOnSize_;
      }
      /**
       * <code>bool reduceOnSize = 11;</code>
       * @param value The reduceOnSize to set.
       * @return This builder for chaining.
       */
      public Builder setReduceOnSize(boolean value) {

        reduceOnSize_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>bool reduceOnSize = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearReduceOnSize() {
        bitField0_ = (bitField0_ & ~0x00000400);
        reduceOnSize_ = false;
        onChanged();
        return this;
      }

      private int reduceOnSizeSize_ ;
      /**
       * <code>int32 reduceOnSizeSize = 12;</code>
       * @return The reduceOnSizeSize.
       */
      @java.lang.Override
      public int getReduceOnSizeSize() {
        return reduceOnSizeSize_;
      }
      /**
       * <code>int32 reduceOnSizeSize = 12;</code>
       * @param value The reduceOnSizeSize to set.
       * @return This builder for chaining.
       */
      public Builder setReduceOnSizeSize(int value) {

        reduceOnSizeSize_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>int32 reduceOnSizeSize = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearReduceOnSizeSize() {
        bitField0_ = (bitField0_ & ~0x00000800);
        reduceOnSizeSize_ = 0;
        onChanged();
        return this;
      }

      private double maxVarDecay_ ;
      /**
       * <code>double maxVarDecay = 13;</code>
       * @return The maxVarDecay.
       */
      @java.lang.Override
      public double getMaxVarDecay() {
        return maxVarDecay_;
      }
      /**
       * <code>double maxVarDecay = 13;</code>
       * @param value The maxVarDecay to set.
       * @return This builder for chaining.
       */
      public Builder setMaxVarDecay(double value) {

        maxVarDecay_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>double maxVarDecay = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxVarDecay() {
        bitField0_ = (bitField0_ & ~0x00001000);
        maxVarDecay_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:solver.PBGlucoseConfig)
    }

    // @@protoc_insertion_point(class_scope:solver.PBGlucoseConfig)
    private static final com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig();
    }

    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PBGlucoseConfig>
        PARSER = new com.google.protobuf.AbstractParser<PBGlucoseConfig>() {
      @java.lang.Override
      public PBGlucoseConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PBGlucoseConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PBGlucoseConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBGlucoseConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PBMiniSatStyleSolverOrBuilder extends
      // @@protoc_insertion_point(interface_extends:solver.PBMiniSatStyleSolver)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.solver.PBMiniSatConfig config = 1;</code>
     * @return Whether the config field is set.
     */
    boolean hasConfig();
    /**
     * <code>.solver.PBMiniSatConfig config = 1;</code>
     * @return The config.
     */
    com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig getConfig();
    /**
     * <code>.solver.PBMiniSatConfig config = 1;</code>
     */
    com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfigOrBuilder getConfigOrBuilder();

    /**
     * <code>bool ok = 2;</code>
     * @return The ok.
     */
    boolean getOk();

    /**
     * <code>int32 qhead = 3;</code>
     * @return The qhead.
     */
    int getQhead();

    /**
     * <code>.solver.PBMsClauseVector clauses = 4;</code>
     * @return Whether the clauses field is set.
     */
    boolean hasClauses();
    /**
     * <code>.solver.PBMsClauseVector clauses = 4;</code>
     * @return The clauses.
     */
    com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector getClauses();
    /**
     * <code>.solver.PBMsClauseVector clauses = 4;</code>
     */
    com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVectorOrBuilder getClausesOrBuilder();

    /**
     * <code>.solver.PBMsClauseVector learnts = 5;</code>
     * @return Whether the learnts field is set.
     */
    boolean hasLearnts();
    /**
     * <code>.solver.PBMsClauseVector learnts = 5;</code>
     * @return The learnts.
     */
    com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector getLearnts();
    /**
     * <code>.solver.PBMsClauseVector learnts = 5;</code>
     */
    com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVectorOrBuilder getLearntsOrBuilder();

    /**
     * <code>.solver.PBMsWatcherVectorVector watches = 6;</code>
     * @return Whether the watches field is set.
     */
    boolean hasWatches();
    /**
     * <code>.solver.PBMsWatcherVectorVector watches = 6;</code>
     * @return The watches.
     */
    com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVector getWatches();
    /**
     * <code>.solver.PBMsWatcherVectorVector watches = 6;</code>
     */
    com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVectorOrBuilder getWatchesOrBuilder();

    /**
     * <code>.solver.PBMsVariableVector vars = 7;</code>
     * @return Whether the vars field is set.
     */
    boolean hasVars();
    /**
     * <code>.solver.PBMsVariableVector vars = 7;</code>
     * @return The vars.
     */
    com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVector getVars();
    /**
     * <code>.solver.PBMsVariableVector vars = 7;</code>
     */
    com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVectorOrBuilder getVarsOrBuilder();

    /**
     * <code>.solver.PBLngHeap orderHeap = 8;</code>
     * @return Whether the orderHeap field is set.
     */
    boolean hasOrderHeap();
    /**
     * <code>.solver.PBLngHeap orderHeap = 8;</code>
     * @return The orderHeap.
     */
    com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeap getOrderHeap();
    /**
     * <code>.solver.PBLngHeap orderHeap = 8;</code>
     */
    com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeapOrBuilder getOrderHeapOrBuilder();

    /**
     * <code>.collections.PBIntVector trail = 9;</code>
     * @return Whether the trail field is set.
     */
    boolean hasTrail();
    /**
     * <code>.collections.PBIntVector trail = 9;</code>
     * @return The trail.
     */
    com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector getTrail();
    /**
     * <code>.collections.PBIntVector trail = 9;</code>
     */
    com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder getTrailOrBuilder();

    /**
     * <code>.collections.PBIntVector trailLim = 10;</code>
     * @return Whether the trailLim field is set.
     */
    boolean hasTrailLim();
    /**
     * <code>.collections.PBIntVector trailLim = 10;</code>
     * @return The trailLim.
     */
    com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector getTrailLim();
    /**
     * <code>.collections.PBIntVector trailLim = 10;</code>
     */
    com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder getTrailLimOrBuilder();

    /**
     * <code>.collections.PBBooleanVector model = 11;</code>
     * @return Whether the model field is set.
     */
    boolean hasModel();
    /**
     * <code>.collections.PBBooleanVector model = 11;</code>
     * @return The model.
     */
    com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector getModel();
    /**
     * <code>.collections.PBBooleanVector model = 11;</code>
     */
    com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVectorOrBuilder getModelOrBuilder();

    /**
     * <code>.collections.PBIntVector conflict = 12;</code>
     * @return Whether the conflict field is set.
     */
    boolean hasConflict();
    /**
     * <code>.collections.PBIntVector conflict = 12;</code>
     * @return The conflict.
     */
    com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector getConflict();
    /**
     * <code>.collections.PBIntVector conflict = 12;</code>
     */
    com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder getConflictOrBuilder();

    /**
     * <code>.collections.PBIntVector assumptions = 13;</code>
     * @return Whether the assumptions field is set.
     */
    boolean hasAssumptions();
    /**
     * <code>.collections.PBIntVector assumptions = 13;</code>
     * @return The assumptions.
     */
    com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector getAssumptions();
    /**
     * <code>.collections.PBIntVector assumptions = 13;</code>
     */
    com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder getAssumptionsOrBuilder();

    /**
     * <code>.collections.PBBooleanVector seen = 14;</code>
     * @return Whether the seen field is set.
     */
    boolean hasSeen();
    /**
     * <code>.collections.PBBooleanVector seen = 14;</code>
     * @return The seen.
     */
    com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector getSeen();
    /**
     * <code>.collections.PBBooleanVector seen = 14;</code>
     */
    com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVectorOrBuilder getSeenOrBuilder();

    /**
     * <code>int32 analyzeBtLevel = 15;</code>
     * @return The analyzeBtLevel.
     */
    int getAnalyzeBtLevel();

    /**
     * <code>double claInc = 16;</code>
     * @return The claInc.
     */
    double getClaInc();

    /**
     * <code>int32 simpDBAssigns = 17;</code>
     * @return The simpDBAssigns.
     */
    int getSimpDBAssigns();

    /**
     * <code>int32 simpDBProps = 18;</code>
     * @return The simpDBProps.
     */
    int getSimpDBProps();

    /**
     * <code>int32 clausesLiterals = 19;</code>
     * @return The clausesLiterals.
     */
    int getClausesLiterals();

    /**
     * <code>int32 learntsLiterals = 20;</code>
     * @return The learntsLiterals.
     */
    int getLearntsLiterals();

    /**
     * <code>double varDecay = 21;</code>
     * @return The varDecay.
     */
    double getVarDecay();

    /**
     * <code>double varInc = 22;</code>
     * @return The varInc.
     */
    double getVarInc();

    /**
     * <code>.solver.PBClauseMinimization ccminMode = 23;</code>
     * @return The enum numeric value on the wire for ccminMode.
     */
    int getCcminModeValue();
    /**
     * <code>.solver.PBClauseMinimization ccminMode = 23;</code>
     * @return The ccminMode.
     */
    com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization getCcminMode();

    /**
     * <code>int32 restartFirst = 24;</code>
     * @return The restartFirst.
     */
    int getRestartFirst();

    /**
     * <code>double restartInc = 25;</code>
     * @return The restartInc.
     */
    double getRestartInc();

    /**
     * <code>double clauseDecay = 26;</code>
     * @return The clauseDecay.
     */
    double getClauseDecay();

    /**
     * <code>bool shouldRemoveSatsisfied = 27;</code>
     * @return The shouldRemoveSatsisfied.
     */
    boolean getShouldRemoveSatsisfied();

    /**
     * <code>double learntsizeFactor = 28;</code>
     * @return The learntsizeFactor.
     */
    double getLearntsizeFactor();

    /**
     * <code>double learntsizeInc = 29;</code>
     * @return The learntsizeInc.
     */
    double getLearntsizeInc();

    /**
     * <code>bool incremental = 30;</code>
     * @return The incremental.
     */
    boolean getIncremental();

    /**
     * <code>map&lt;string, int32&gt; name2idx = 31;</code>
     */
    int getName2IdxCount();
    /**
     * <code>map&lt;string, int32&gt; name2idx = 31;</code>
     */
    boolean containsName2Idx(
        java.lang.String key);
    /**
     * Use {@link #getName2IdxMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getName2Idx();
    /**
     * <code>map&lt;string, int32&gt; name2idx = 31;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getName2IdxMap();
    /**
     * <code>map&lt;string, int32&gt; name2idx = 31;</code>
     */
    int getName2IdxOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, int32&gt; name2idx = 31;</code>
     */
    int getName2IdxOrThrow(
        java.lang.String key);

    /**
     * <code>.collections.PBIntVectorVector pgProof = 32;</code>
     * @return Whether the pgProof field is set.
     */
    boolean hasPgProof();
    /**
     * <code>.collections.PBIntVectorVector pgProof = 32;</code>
     * @return The pgProof.
     */
    com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVector getPgProof();
    /**
     * <code>.collections.PBIntVectorVector pgProof = 32;</code>
     */
    com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVectorOrBuilder getPgProofOrBuilder();

    /**
     * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
     */
    java.util.List<com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation> 
        getPgOriginalClausesList();
    /**
     * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
     */
    com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation getPgOriginalClauses(int index);
    /**
     * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
     */
    int getPgOriginalClausesCount();
    /**
     * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
     */
    java.util.List<? extends com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformationOrBuilder> 
        getPgOriginalClausesOrBuilderList();
    /**
     * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
     */
    com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformationOrBuilder getPgOriginalClausesOrBuilder(
        int index);

    /**
     * <code>.collections.PBIntVector backboneCandidates = 34;</code>
     * @return Whether the backboneCandidates field is set.
     */
    boolean hasBackboneCandidates();
    /**
     * <code>.collections.PBIntVector backboneCandidates = 34;</code>
     * @return The backboneCandidates.
     */
    com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector getBackboneCandidates();
    /**
     * <code>.collections.PBIntVector backboneCandidates = 34;</code>
     */
    com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder getBackboneCandidatesOrBuilder();

    /**
     * <code>.collections.PBIntVector backboneAssumptions = 35;</code>
     * @return Whether the backboneAssumptions field is set.
     */
    boolean hasBackboneAssumptions();
    /**
     * <code>.collections.PBIntVector backboneAssumptions = 35;</code>
     * @return The backboneAssumptions.
     */
    com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector getBackboneAssumptions();
    /**
     * <code>.collections.PBIntVector backboneAssumptions = 35;</code>
     */
    com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder getBackboneAssumptionsOrBuilder();

    /**
     * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
     */
    int getBackboneMapCount();
    /**
     * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
     */
    boolean containsBackboneMap(
        int key);
    /**
     * Use {@link #getBackboneMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBTristate>
    getBackboneMap();
    /**
     * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
     */
    java.util.Map<java.lang.Integer, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBTristate>
    getBackboneMapMap();
    /**
     * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
     */
    /* nullable */
com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBTristate getBackboneMapOrDefault(
        int key,
        /* nullable */
com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBTristate         defaultValue);
    /**
     * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
     */
    com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBTristate getBackboneMapOrThrow(
        int key);
    /**
     * Use {@link #getBackboneMapValueMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getBackboneMapValue();
    /**
     * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getBackboneMapValueMap();
    /**
     * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
     */
    int getBackboneMapValueOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
     */
    int getBackboneMapValueOrThrow(
        int key);

    /**
     * <code>bool computingBackbone = 37;</code>
     * @return The computingBackbone.
     */
    boolean getComputingBackbone();

    /**
     * <code>.collections.PBIntVector selectionOrder = 38;</code>
     * @return Whether the selectionOrder field is set.
     */
    boolean hasSelectionOrder();
    /**
     * <code>.collections.PBIntVector selectionOrder = 38;</code>
     * @return The selectionOrder.
     */
    com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector getSelectionOrder();
    /**
     * <code>.collections.PBIntVector selectionOrder = 38;</code>
     */
    com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder getSelectionOrderOrBuilder();

    /**
     * <code>int32 selectionOrderIdx = 39;</code>
     * @return The selectionOrderIdx.
     */
    int getSelectionOrderIdx();

    /**
     * <code>double learntsizeAdjustConfl = 40;</code>
     * @return The learntsizeAdjustConfl.
     */
    double getLearntsizeAdjustConfl();

    /**
     * <code>int32 learntsizeAdjustCnt = 41;</code>
     * @return The learntsizeAdjustCnt.
     */
    int getLearntsizeAdjustCnt();

    /**
     * <code>int32 learntsizeAdjustStartConfl = 42;</code>
     * @return The learntsizeAdjustStartConfl.
     */
    int getLearntsizeAdjustStartConfl();

    /**
     * <code>double learntsizeAdjustInc = 43;</code>
     * @return The learntsizeAdjustInc.
     */
    double getLearntsizeAdjustInc();

    /**
     * <code>double maxLearnts = 44;</code>
     * @return The maxLearnts.
     */
    double getMaxLearnts();
  }
  /**
   * Protobuf type {@code solver.PBMiniSatStyleSolver}
   */
  public static final class PBMiniSatStyleSolver extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:solver.PBMiniSatStyleSolver)
      PBMiniSatStyleSolverOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PBMiniSatStyleSolver.newBuilder() to construct.
    private PBMiniSatStyleSolver(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PBMiniSatStyleSolver() {
      ccminMode_ = 0;
      pgOriginalClauses_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PBMiniSatStyleSolver();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.internal_static_solver_PBMiniSatStyleSolver_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 31:
          return internalGetName2Idx();
        case 36:
          return internalGetBackboneMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.internal_static_solver_PBMiniSatStyleSolver_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver.class, com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver.Builder.class);
    }

    private int bitField0_;
    public static final int CONFIG_FIELD_NUMBER = 1;
    private com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig config_;
    /**
     * <code>.solver.PBMiniSatConfig config = 1;</code>
     * @return Whether the config field is set.
     */
    @java.lang.Override
    public boolean hasConfig() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.solver.PBMiniSatConfig config = 1;</code>
     * @return The config.
     */
    @java.lang.Override
    public com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig getConfig() {
      return config_ == null ? com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig.getDefaultInstance() : config_;
    }
    /**
     * <code>.solver.PBMiniSatConfig config = 1;</code>
     */
    @java.lang.Override
    public com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfigOrBuilder getConfigOrBuilder() {
      return config_ == null ? com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig.getDefaultInstance() : config_;
    }

    public static final int OK_FIELD_NUMBER = 2;
    private boolean ok_ = false;
    /**
     * <code>bool ok = 2;</code>
     * @return The ok.
     */
    @java.lang.Override
    public boolean getOk() {
      return ok_;
    }

    public static final int QHEAD_FIELD_NUMBER = 3;
    private int qhead_ = 0;
    /**
     * <code>int32 qhead = 3;</code>
     * @return The qhead.
     */
    @java.lang.Override
    public int getQhead() {
      return qhead_;
    }

    public static final int CLAUSES_FIELD_NUMBER = 4;
    private com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector clauses_;
    /**
     * <code>.solver.PBMsClauseVector clauses = 4;</code>
     * @return Whether the clauses field is set.
     */
    @java.lang.Override
    public boolean hasClauses() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>.solver.PBMsClauseVector clauses = 4;</code>
     * @return The clauses.
     */
    @java.lang.Override
    public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector getClauses() {
      return clauses_ == null ? com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector.getDefaultInstance() : clauses_;
    }
    /**
     * <code>.solver.PBMsClauseVector clauses = 4;</code>
     */
    @java.lang.Override
    public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVectorOrBuilder getClausesOrBuilder() {
      return clauses_ == null ? com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector.getDefaultInstance() : clauses_;
    }

    public static final int LEARNTS_FIELD_NUMBER = 5;
    private com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector learnts_;
    /**
     * <code>.solver.PBMsClauseVector learnts = 5;</code>
     * @return Whether the learnts field is set.
     */
    @java.lang.Override
    public boolean hasLearnts() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>.solver.PBMsClauseVector learnts = 5;</code>
     * @return The learnts.
     */
    @java.lang.Override
    public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector getLearnts() {
      return learnts_ == null ? com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector.getDefaultInstance() : learnts_;
    }
    /**
     * <code>.solver.PBMsClauseVector learnts = 5;</code>
     */
    @java.lang.Override
    public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVectorOrBuilder getLearntsOrBuilder() {
      return learnts_ == null ? com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector.getDefaultInstance() : learnts_;
    }

    public static final int WATCHES_FIELD_NUMBER = 6;
    private com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVector watches_;
    /**
     * <code>.solver.PBMsWatcherVectorVector watches = 6;</code>
     * @return Whether the watches field is set.
     */
    @java.lang.Override
    public boolean hasWatches() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>.solver.PBMsWatcherVectorVector watches = 6;</code>
     * @return The watches.
     */
    @java.lang.Override
    public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVector getWatches() {
      return watches_ == null ? com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVector.getDefaultInstance() : watches_;
    }
    /**
     * <code>.solver.PBMsWatcherVectorVector watches = 6;</code>
     */
    @java.lang.Override
    public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVectorOrBuilder getWatchesOrBuilder() {
      return watches_ == null ? com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVector.getDefaultInstance() : watches_;
    }

    public static final int VARS_FIELD_NUMBER = 7;
    private com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVector vars_;
    /**
     * <code>.solver.PBMsVariableVector vars = 7;</code>
     * @return Whether the vars field is set.
     */
    @java.lang.Override
    public boolean hasVars() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>.solver.PBMsVariableVector vars = 7;</code>
     * @return The vars.
     */
    @java.lang.Override
    public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVector getVars() {
      return vars_ == null ? com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVector.getDefaultInstance() : vars_;
    }
    /**
     * <code>.solver.PBMsVariableVector vars = 7;</code>
     */
    @java.lang.Override
    public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVectorOrBuilder getVarsOrBuilder() {
      return vars_ == null ? com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVector.getDefaultInstance() : vars_;
    }

    public static final int ORDERHEAP_FIELD_NUMBER = 8;
    private com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeap orderHeap_;
    /**
     * <code>.solver.PBLngHeap orderHeap = 8;</code>
     * @return Whether the orderHeap field is set.
     */
    @java.lang.Override
    public boolean hasOrderHeap() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>.solver.PBLngHeap orderHeap = 8;</code>
     * @return The orderHeap.
     */
    @java.lang.Override
    public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeap getOrderHeap() {
      return orderHeap_ == null ? com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeap.getDefaultInstance() : orderHeap_;
    }
    /**
     * <code>.solver.PBLngHeap orderHeap = 8;</code>
     */
    @java.lang.Override
    public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeapOrBuilder getOrderHeapOrBuilder() {
      return orderHeap_ == null ? com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeap.getDefaultInstance() : orderHeap_;
    }

    public static final int TRAIL_FIELD_NUMBER = 9;
    private com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector trail_;
    /**
     * <code>.collections.PBIntVector trail = 9;</code>
     * @return Whether the trail field is set.
     */
    @java.lang.Override
    public boolean hasTrail() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>.collections.PBIntVector trail = 9;</code>
     * @return The trail.
     */
    @java.lang.Override
    public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector getTrail() {
      return trail_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : trail_;
    }
    /**
     * <code>.collections.PBIntVector trail = 9;</code>
     */
    @java.lang.Override
    public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder getTrailOrBuilder() {
      return trail_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : trail_;
    }

    public static final int TRAILLIM_FIELD_NUMBER = 10;
    private com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector trailLim_;
    /**
     * <code>.collections.PBIntVector trailLim = 10;</code>
     * @return Whether the trailLim field is set.
     */
    @java.lang.Override
    public boolean hasTrailLim() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>.collections.PBIntVector trailLim = 10;</code>
     * @return The trailLim.
     */
    @java.lang.Override
    public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector getTrailLim() {
      return trailLim_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : trailLim_;
    }
    /**
     * <code>.collections.PBIntVector trailLim = 10;</code>
     */
    @java.lang.Override
    public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder getTrailLimOrBuilder() {
      return trailLim_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : trailLim_;
    }

    public static final int MODEL_FIELD_NUMBER = 11;
    private com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector model_;
    /**
     * <code>.collections.PBBooleanVector model = 11;</code>
     * @return Whether the model field is set.
     */
    @java.lang.Override
    public boolean hasModel() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>.collections.PBBooleanVector model = 11;</code>
     * @return The model.
     */
    @java.lang.Override
    public com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector getModel() {
      return model_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector.getDefaultInstance() : model_;
    }
    /**
     * <code>.collections.PBBooleanVector model = 11;</code>
     */
    @java.lang.Override
    public com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVectorOrBuilder getModelOrBuilder() {
      return model_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector.getDefaultInstance() : model_;
    }

    public static final int CONFLICT_FIELD_NUMBER = 12;
    private com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector conflict_;
    /**
     * <code>.collections.PBIntVector conflict = 12;</code>
     * @return Whether the conflict field is set.
     */
    @java.lang.Override
    public boolean hasConflict() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>.collections.PBIntVector conflict = 12;</code>
     * @return The conflict.
     */
    @java.lang.Override
    public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector getConflict() {
      return conflict_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : conflict_;
    }
    /**
     * <code>.collections.PBIntVector conflict = 12;</code>
     */
    @java.lang.Override
    public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder getConflictOrBuilder() {
      return conflict_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : conflict_;
    }

    public static final int ASSUMPTIONS_FIELD_NUMBER = 13;
    private com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector assumptions_;
    /**
     * <code>.collections.PBIntVector assumptions = 13;</code>
     * @return Whether the assumptions field is set.
     */
    @java.lang.Override
    public boolean hasAssumptions() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>.collections.PBIntVector assumptions = 13;</code>
     * @return The assumptions.
     */
    @java.lang.Override
    public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector getAssumptions() {
      return assumptions_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : assumptions_;
    }
    /**
     * <code>.collections.PBIntVector assumptions = 13;</code>
     */
    @java.lang.Override
    public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder getAssumptionsOrBuilder() {
      return assumptions_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : assumptions_;
    }

    public static final int SEEN_FIELD_NUMBER = 14;
    private com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector seen_;
    /**
     * <code>.collections.PBBooleanVector seen = 14;</code>
     * @return Whether the seen field is set.
     */
    @java.lang.Override
    public boolean hasSeen() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>.collections.PBBooleanVector seen = 14;</code>
     * @return The seen.
     */
    @java.lang.Override
    public com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector getSeen() {
      return seen_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector.getDefaultInstance() : seen_;
    }
    /**
     * <code>.collections.PBBooleanVector seen = 14;</code>
     */
    @java.lang.Override
    public com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVectorOrBuilder getSeenOrBuilder() {
      return seen_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector.getDefaultInstance() : seen_;
    }

    public static final int ANALYZEBTLEVEL_FIELD_NUMBER = 15;
    private int analyzeBtLevel_ = 0;
    /**
     * <code>int32 analyzeBtLevel = 15;</code>
     * @return The analyzeBtLevel.
     */
    @java.lang.Override
    public int getAnalyzeBtLevel() {
      return analyzeBtLevel_;
    }

    public static final int CLAINC_FIELD_NUMBER = 16;
    private double claInc_ = 0D;
    /**
     * <code>double claInc = 16;</code>
     * @return The claInc.
     */
    @java.lang.Override
    public double getClaInc() {
      return claInc_;
    }

    public static final int SIMPDBASSIGNS_FIELD_NUMBER = 17;
    private int simpDBAssigns_ = 0;
    /**
     * <code>int32 simpDBAssigns = 17;</code>
     * @return The simpDBAssigns.
     */
    @java.lang.Override
    public int getSimpDBAssigns() {
      return simpDBAssigns_;
    }

    public static final int SIMPDBPROPS_FIELD_NUMBER = 18;
    private int simpDBProps_ = 0;
    /**
     * <code>int32 simpDBProps = 18;</code>
     * @return The simpDBProps.
     */
    @java.lang.Override
    public int getSimpDBProps() {
      return simpDBProps_;
    }

    public static final int CLAUSESLITERALS_FIELD_NUMBER = 19;
    private int clausesLiterals_ = 0;
    /**
     * <code>int32 clausesLiterals = 19;</code>
     * @return The clausesLiterals.
     */
    @java.lang.Override
    public int getClausesLiterals() {
      return clausesLiterals_;
    }

    public static final int LEARNTSLITERALS_FIELD_NUMBER = 20;
    private int learntsLiterals_ = 0;
    /**
     * <code>int32 learntsLiterals = 20;</code>
     * @return The learntsLiterals.
     */
    @java.lang.Override
    public int getLearntsLiterals() {
      return learntsLiterals_;
    }

    public static final int VARDECAY_FIELD_NUMBER = 21;
    private double varDecay_ = 0D;
    /**
     * <code>double varDecay = 21;</code>
     * @return The varDecay.
     */
    @java.lang.Override
    public double getVarDecay() {
      return varDecay_;
    }

    public static final int VARINC_FIELD_NUMBER = 22;
    private double varInc_ = 0D;
    /**
     * <code>double varInc = 22;</code>
     * @return The varInc.
     */
    @java.lang.Override
    public double getVarInc() {
      return varInc_;
    }

    public static final int CCMINMODE_FIELD_NUMBER = 23;
    private int ccminMode_ = 0;
    /**
     * <code>.solver.PBClauseMinimization ccminMode = 23;</code>
     * @return The enum numeric value on the wire for ccminMode.
     */
    @java.lang.Override public int getCcminModeValue() {
      return ccminMode_;
    }
    /**
     * <code>.solver.PBClauseMinimization ccminMode = 23;</code>
     * @return The ccminMode.
     */
    @java.lang.Override public com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization getCcminMode() {
      com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization result = com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization.forNumber(ccminMode_);
      return result == null ? com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization.UNRECOGNIZED : result;
    }

    public static final int RESTARTFIRST_FIELD_NUMBER = 24;
    private int restartFirst_ = 0;
    /**
     * <code>int32 restartFirst = 24;</code>
     * @return The restartFirst.
     */
    @java.lang.Override
    public int getRestartFirst() {
      return restartFirst_;
    }

    public static final int RESTARTINC_FIELD_NUMBER = 25;
    private double restartInc_ = 0D;
    /**
     * <code>double restartInc = 25;</code>
     * @return The restartInc.
     */
    @java.lang.Override
    public double getRestartInc() {
      return restartInc_;
    }

    public static final int CLAUSEDECAY_FIELD_NUMBER = 26;
    private double clauseDecay_ = 0D;
    /**
     * <code>double clauseDecay = 26;</code>
     * @return The clauseDecay.
     */
    @java.lang.Override
    public double getClauseDecay() {
      return clauseDecay_;
    }

    public static final int SHOULDREMOVESATSISFIED_FIELD_NUMBER = 27;
    private boolean shouldRemoveSatsisfied_ = false;
    /**
     * <code>bool shouldRemoveSatsisfied = 27;</code>
     * @return The shouldRemoveSatsisfied.
     */
    @java.lang.Override
    public boolean getShouldRemoveSatsisfied() {
      return shouldRemoveSatsisfied_;
    }

    public static final int LEARNTSIZEFACTOR_FIELD_NUMBER = 28;
    private double learntsizeFactor_ = 0D;
    /**
     * <code>double learntsizeFactor = 28;</code>
     * @return The learntsizeFactor.
     */
    @java.lang.Override
    public double getLearntsizeFactor() {
      return learntsizeFactor_;
    }

    public static final int LEARNTSIZEINC_FIELD_NUMBER = 29;
    private double learntsizeInc_ = 0D;
    /**
     * <code>double learntsizeInc = 29;</code>
     * @return The learntsizeInc.
     */
    @java.lang.Override
    public double getLearntsizeInc() {
      return learntsizeInc_;
    }

    public static final int INCREMENTAL_FIELD_NUMBER = 30;
    private boolean incremental_ = false;
    /**
     * <code>bool incremental = 30;</code>
     * @return The incremental.
     */
    @java.lang.Override
    public boolean getIncremental() {
      return incremental_;
    }

    public static final int NAME2IDX_FIELD_NUMBER = 31;
    private static final class Name2IdxDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.internal_static_solver_PBMiniSatStyleSolver_Name2idxEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> name2Idx_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetName2Idx() {
      if (name2Idx_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Name2IdxDefaultEntryHolder.defaultEntry);
      }
      return name2Idx_;
    }
    public int getName2IdxCount() {
      return internalGetName2Idx().getMap().size();
    }
    /**
     * <code>map&lt;string, int32&gt; name2idx = 31;</code>
     */
    @java.lang.Override
    public boolean containsName2Idx(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetName2Idx().getMap().containsKey(key);
    }
    /**
     * Use {@link #getName2IdxMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getName2Idx() {
      return getName2IdxMap();
    }
    /**
     * <code>map&lt;string, int32&gt; name2idx = 31;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.Integer> getName2IdxMap() {
      return internalGetName2Idx().getMap();
    }
    /**
     * <code>map&lt;string, int32&gt; name2idx = 31;</code>
     */
    @java.lang.Override
    public int getName2IdxOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetName2Idx().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, int32&gt; name2idx = 31;</code>
     */
    @java.lang.Override
    public int getName2IdxOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetName2Idx().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int PGPROOF_FIELD_NUMBER = 32;
    private com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVector pgProof_;
    /**
     * <code>.collections.PBIntVectorVector pgProof = 32;</code>
     * @return Whether the pgProof field is set.
     */
    @java.lang.Override
    public boolean hasPgProof() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <code>.collections.PBIntVectorVector pgProof = 32;</code>
     * @return The pgProof.
     */
    @java.lang.Override
    public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVector getPgProof() {
      return pgProof_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVector.getDefaultInstance() : pgProof_;
    }
    /**
     * <code>.collections.PBIntVectorVector pgProof = 32;</code>
     */
    @java.lang.Override
    public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVectorOrBuilder getPgProofOrBuilder() {
      return pgProof_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVector.getDefaultInstance() : pgProof_;
    }

    public static final int PGORIGINALCLAUSES_FIELD_NUMBER = 33;
    @SuppressWarnings("serial")
    private java.util.List<com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation> pgOriginalClauses_;
    /**
     * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
     */
    @java.lang.Override
    public java.util.List<com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation> getPgOriginalClausesList() {
      return pgOriginalClauses_;
    }
    /**
     * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformationOrBuilder> 
        getPgOriginalClausesOrBuilderList() {
      return pgOriginalClauses_;
    }
    /**
     * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
     */
    @java.lang.Override
    public int getPgOriginalClausesCount() {
      return pgOriginalClauses_.size();
    }
    /**
     * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
     */
    @java.lang.Override
    public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation getPgOriginalClauses(int index) {
      return pgOriginalClauses_.get(index);
    }
    /**
     * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
     */
    @java.lang.Override
    public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformationOrBuilder getPgOriginalClausesOrBuilder(
        int index) {
      return pgOriginalClauses_.get(index);
    }

    public static final int BACKBONECANDIDATES_FIELD_NUMBER = 34;
    private com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector backboneCandidates_;
    /**
     * <code>.collections.PBIntVector backboneCandidates = 34;</code>
     * @return Whether the backboneCandidates field is set.
     */
    @java.lang.Override
    public boolean hasBackboneCandidates() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <code>.collections.PBIntVector backboneCandidates = 34;</code>
     * @return The backboneCandidates.
     */
    @java.lang.Override
    public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector getBackboneCandidates() {
      return backboneCandidates_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : backboneCandidates_;
    }
    /**
     * <code>.collections.PBIntVector backboneCandidates = 34;</code>
     */
    @java.lang.Override
    public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder getBackboneCandidatesOrBuilder() {
      return backboneCandidates_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : backboneCandidates_;
    }

    public static final int BACKBONEASSUMPTIONS_FIELD_NUMBER = 35;
    private com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector backboneAssumptions_;
    /**
     * <code>.collections.PBIntVector backboneAssumptions = 35;</code>
     * @return Whether the backboneAssumptions field is set.
     */
    @java.lang.Override
    public boolean hasBackboneAssumptions() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <code>.collections.PBIntVector backboneAssumptions = 35;</code>
     * @return The backboneAssumptions.
     */
    @java.lang.Override
    public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector getBackboneAssumptions() {
      return backboneAssumptions_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : backboneAssumptions_;
    }
    /**
     * <code>.collections.PBIntVector backboneAssumptions = 35;</code>
     */
    @java.lang.Override
    public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder getBackboneAssumptionsOrBuilder() {
      return backboneAssumptions_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : backboneAssumptions_;
    }

    public static final int BACKBONEMAP_FIELD_NUMBER = 36;
    private static final class BackboneMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.internal_static_solver_PBMiniSatStyleSolver_BackboneMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBTristate.FALSE.getNumber());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> backboneMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetBackboneMap() {
      if (backboneMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BackboneMapDefaultEntryHolder.defaultEntry);
      }
      return backboneMap_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBTristate> backboneMapValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBTristate.internalGetValueMap(),
                com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBTristate.UNRECOGNIZED);
    private static final java.util.Map<java.lang.Integer, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBTristate>
    internalGetAdaptedBackboneMapMap(
        java.util.Map<java.lang.Integer, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.Integer, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBTristate, java.lang.Integer>(
              map, backboneMapValueConverter);
    }
    public int getBackboneMapCount() {
      return internalGetBackboneMap().getMap().size();
    }
    /**
     * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
     */
    @java.lang.Override
    public boolean containsBackboneMap(
        int key) {

      return internalGetBackboneMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBackboneMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBTristate>
    getBackboneMap() {
      return getBackboneMapMap();
    }
    /**
     * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBTristate>
    getBackboneMapMap() {
      return internalGetAdaptedBackboneMapMap(
          internalGetBackboneMap().getMap());}
    /**
     * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
     */
    @java.lang.Override
    public /* nullable */
com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBTristate getBackboneMapOrDefault(
        int key,
        /* nullable */
com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBTristate defaultValue) {

      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetBackboneMap().getMap();
      return map.containsKey(key)
             ? backboneMapValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
     */
    @java.lang.Override
    public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBTristate getBackboneMapOrThrow(
        int key) {

      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetBackboneMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return backboneMapValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getBackboneMapValueMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer>
    getBackboneMapValue() {
      return getBackboneMapValueMap();
    }
    /**
     * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, java.lang.Integer>
    getBackboneMapValueMap() {
      return internalGetBackboneMap().getMap();
    }
    /**
     * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
     */
    @java.lang.Override
    public int getBackboneMapValueOrDefault(
        int key,
        int defaultValue) {

      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetBackboneMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
     */
    @java.lang.Override
    public int getBackboneMapValueOrThrow(
        int key) {

      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetBackboneMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int COMPUTINGBACKBONE_FIELD_NUMBER = 37;
    private boolean computingBackbone_ = false;
    /**
     * <code>bool computingBackbone = 37;</code>
     * @return The computingBackbone.
     */
    @java.lang.Override
    public boolean getComputingBackbone() {
      return computingBackbone_;
    }

    public static final int SELECTIONORDER_FIELD_NUMBER = 38;
    private com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector selectionOrder_;
    /**
     * <code>.collections.PBIntVector selectionOrder = 38;</code>
     * @return Whether the selectionOrder field is set.
     */
    @java.lang.Override
    public boolean hasSelectionOrder() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <code>.collections.PBIntVector selectionOrder = 38;</code>
     * @return The selectionOrder.
     */
    @java.lang.Override
    public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector getSelectionOrder() {
      return selectionOrder_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : selectionOrder_;
    }
    /**
     * <code>.collections.PBIntVector selectionOrder = 38;</code>
     */
    @java.lang.Override
    public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder getSelectionOrderOrBuilder() {
      return selectionOrder_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : selectionOrder_;
    }

    public static final int SELECTIONORDERIDX_FIELD_NUMBER = 39;
    private int selectionOrderIdx_ = 0;
    /**
     * <code>int32 selectionOrderIdx = 39;</code>
     * @return The selectionOrderIdx.
     */
    @java.lang.Override
    public int getSelectionOrderIdx() {
      return selectionOrderIdx_;
    }

    public static final int LEARNTSIZEADJUSTCONFL_FIELD_NUMBER = 40;
    private double learntsizeAdjustConfl_ = 0D;
    /**
     * <code>double learntsizeAdjustConfl = 40;</code>
     * @return The learntsizeAdjustConfl.
     */
    @java.lang.Override
    public double getLearntsizeAdjustConfl() {
      return learntsizeAdjustConfl_;
    }

    public static final int LEARNTSIZEADJUSTCNT_FIELD_NUMBER = 41;
    private int learntsizeAdjustCnt_ = 0;
    /**
     * <code>int32 learntsizeAdjustCnt = 41;</code>
     * @return The learntsizeAdjustCnt.
     */
    @java.lang.Override
    public int getLearntsizeAdjustCnt() {
      return learntsizeAdjustCnt_;
    }

    public static final int LEARNTSIZEADJUSTSTARTCONFL_FIELD_NUMBER = 42;
    private int learntsizeAdjustStartConfl_ = 0;
    /**
     * <code>int32 learntsizeAdjustStartConfl = 42;</code>
     * @return The learntsizeAdjustStartConfl.
     */
    @java.lang.Override
    public int getLearntsizeAdjustStartConfl() {
      return learntsizeAdjustStartConfl_;
    }

    public static final int LEARNTSIZEADJUSTINC_FIELD_NUMBER = 43;
    private double learntsizeAdjustInc_ = 0D;
    /**
     * <code>double learntsizeAdjustInc = 43;</code>
     * @return The learntsizeAdjustInc.
     */
    @java.lang.Override
    public double getLearntsizeAdjustInc() {
      return learntsizeAdjustInc_;
    }

    public static final int MAXLEARNTS_FIELD_NUMBER = 44;
    private double maxLearnts_ = 0D;
    /**
     * <code>double maxLearnts = 44;</code>
     * @return The maxLearnts.
     */
    @java.lang.Override
    public double getMaxLearnts() {
      return maxLearnts_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getConfig());
      }
      if (ok_ != false) {
        output.writeBool(2, ok_);
      }
      if (qhead_ != 0) {
        output.writeInt32(3, qhead_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(4, getClauses());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(5, getLearnts());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(6, getWatches());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeMessage(7, getVars());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeMessage(8, getOrderHeap());
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeMessage(9, getTrail());
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeMessage(10, getTrailLim());
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeMessage(11, getModel());
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeMessage(12, getConflict());
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeMessage(13, getAssumptions());
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeMessage(14, getSeen());
      }
      if (analyzeBtLevel_ != 0) {
        output.writeInt32(15, analyzeBtLevel_);
      }
      if (java.lang.Double.doubleToRawLongBits(claInc_) != 0) {
        output.writeDouble(16, claInc_);
      }
      if (simpDBAssigns_ != 0) {
        output.writeInt32(17, simpDBAssigns_);
      }
      if (simpDBProps_ != 0) {
        output.writeInt32(18, simpDBProps_);
      }
      if (clausesLiterals_ != 0) {
        output.writeInt32(19, clausesLiterals_);
      }
      if (learntsLiterals_ != 0) {
        output.writeInt32(20, learntsLiterals_);
      }
      if (java.lang.Double.doubleToRawLongBits(varDecay_) != 0) {
        output.writeDouble(21, varDecay_);
      }
      if (java.lang.Double.doubleToRawLongBits(varInc_) != 0) {
        output.writeDouble(22, varInc_);
      }
      if (ccminMode_ != com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization.NONE.getNumber()) {
        output.writeEnum(23, ccminMode_);
      }
      if (restartFirst_ != 0) {
        output.writeInt32(24, restartFirst_);
      }
      if (java.lang.Double.doubleToRawLongBits(restartInc_) != 0) {
        output.writeDouble(25, restartInc_);
      }
      if (java.lang.Double.doubleToRawLongBits(clauseDecay_) != 0) {
        output.writeDouble(26, clauseDecay_);
      }
      if (shouldRemoveSatsisfied_ != false) {
        output.writeBool(27, shouldRemoveSatsisfied_);
      }
      if (java.lang.Double.doubleToRawLongBits(learntsizeFactor_) != 0) {
        output.writeDouble(28, learntsizeFactor_);
      }
      if (java.lang.Double.doubleToRawLongBits(learntsizeInc_) != 0) {
        output.writeDouble(29, learntsizeInc_);
      }
      if (incremental_ != false) {
        output.writeBool(30, incremental_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetName2Idx(),
          Name2IdxDefaultEntryHolder.defaultEntry,
          31);
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeMessage(32, getPgProof());
      }
      for (int i = 0; i < pgOriginalClauses_.size(); i++) {
        output.writeMessage(33, pgOriginalClauses_.get(i));
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeMessage(34, getBackboneCandidates());
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        output.writeMessage(35, getBackboneAssumptions());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetBackboneMap(),
          BackboneMapDefaultEntryHolder.defaultEntry,
          36);
      if (computingBackbone_ != false) {
        output.writeBool(37, computingBackbone_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        output.writeMessage(38, getSelectionOrder());
      }
      if (selectionOrderIdx_ != 0) {
        output.writeInt32(39, selectionOrderIdx_);
      }
      if (java.lang.Double.doubleToRawLongBits(learntsizeAdjustConfl_) != 0) {
        output.writeDouble(40, learntsizeAdjustConfl_);
      }
      if (learntsizeAdjustCnt_ != 0) {
        output.writeInt32(41, learntsizeAdjustCnt_);
      }
      if (learntsizeAdjustStartConfl_ != 0) {
        output.writeInt32(42, learntsizeAdjustStartConfl_);
      }
      if (java.lang.Double.doubleToRawLongBits(learntsizeAdjustInc_) != 0) {
        output.writeDouble(43, learntsizeAdjustInc_);
      }
      if (java.lang.Double.doubleToRawLongBits(maxLearnts_) != 0) {
        output.writeDouble(44, maxLearnts_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getConfig());
      }
      if (ok_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, ok_);
      }
      if (qhead_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, qhead_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getClauses());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getLearnts());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getWatches());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getVars());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getOrderHeap());
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getTrail());
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getTrailLim());
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getModel());
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getConflict());
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getAssumptions());
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getSeen());
      }
      if (analyzeBtLevel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, analyzeBtLevel_);
      }
      if (java.lang.Double.doubleToRawLongBits(claInc_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(16, claInc_);
      }
      if (simpDBAssigns_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, simpDBAssigns_);
      }
      if (simpDBProps_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, simpDBProps_);
      }
      if (clausesLiterals_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, clausesLiterals_);
      }
      if (learntsLiterals_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, learntsLiterals_);
      }
      if (java.lang.Double.doubleToRawLongBits(varDecay_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(21, varDecay_);
      }
      if (java.lang.Double.doubleToRawLongBits(varInc_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(22, varInc_);
      }
      if (ccminMode_ != com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization.NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(23, ccminMode_);
      }
      if (restartFirst_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, restartFirst_);
      }
      if (java.lang.Double.doubleToRawLongBits(restartInc_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(25, restartInc_);
      }
      if (java.lang.Double.doubleToRawLongBits(clauseDecay_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(26, clauseDecay_);
      }
      if (shouldRemoveSatsisfied_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(27, shouldRemoveSatsisfied_);
      }
      if (java.lang.Double.doubleToRawLongBits(learntsizeFactor_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(28, learntsizeFactor_);
      }
      if (java.lang.Double.doubleToRawLongBits(learntsizeInc_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(29, learntsizeInc_);
      }
      if (incremental_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(30, incremental_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetName2Idx().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        name2Idx__ = Name2IdxDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(31, name2Idx__);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(32, getPgProof());
      }
      for (int i = 0; i < pgOriginalClauses_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(33, pgOriginalClauses_.get(i));
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(34, getBackboneCandidates());
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(35, getBackboneAssumptions());
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetBackboneMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        backboneMap__ = BackboneMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(36, backboneMap__);
      }
      if (computingBackbone_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(37, computingBackbone_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(38, getSelectionOrder());
      }
      if (selectionOrderIdx_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(39, selectionOrderIdx_);
      }
      if (java.lang.Double.doubleToRawLongBits(learntsizeAdjustConfl_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(40, learntsizeAdjustConfl_);
      }
      if (learntsizeAdjustCnt_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(41, learntsizeAdjustCnt_);
      }
      if (learntsizeAdjustStartConfl_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(42, learntsizeAdjustStartConfl_);
      }
      if (java.lang.Double.doubleToRawLongBits(learntsizeAdjustInc_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(43, learntsizeAdjustInc_);
      }
      if (java.lang.Double.doubleToRawLongBits(maxLearnts_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(44, maxLearnts_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver)) {
        return super.equals(obj);
      }
      com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver other = (com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver) obj;

      if (hasConfig() != other.hasConfig()) return false;
      if (hasConfig()) {
        if (!getConfig()
            .equals(other.getConfig())) return false;
      }
      if (getOk()
          != other.getOk()) return false;
      if (getQhead()
          != other.getQhead()) return false;
      if (hasClauses() != other.hasClauses()) return false;
      if (hasClauses()) {
        if (!getClauses()
            .equals(other.getClauses())) return false;
      }
      if (hasLearnts() != other.hasLearnts()) return false;
      if (hasLearnts()) {
        if (!getLearnts()
            .equals(other.getLearnts())) return false;
      }
      if (hasWatches() != other.hasWatches()) return false;
      if (hasWatches()) {
        if (!getWatches()
            .equals(other.getWatches())) return false;
      }
      if (hasVars() != other.hasVars()) return false;
      if (hasVars()) {
        if (!getVars()
            .equals(other.getVars())) return false;
      }
      if (hasOrderHeap() != other.hasOrderHeap()) return false;
      if (hasOrderHeap()) {
        if (!getOrderHeap()
            .equals(other.getOrderHeap())) return false;
      }
      if (hasTrail() != other.hasTrail()) return false;
      if (hasTrail()) {
        if (!getTrail()
            .equals(other.getTrail())) return false;
      }
      if (hasTrailLim() != other.hasTrailLim()) return false;
      if (hasTrailLim()) {
        if (!getTrailLim()
            .equals(other.getTrailLim())) return false;
      }
      if (hasModel() != other.hasModel()) return false;
      if (hasModel()) {
        if (!getModel()
            .equals(other.getModel())) return false;
      }
      if (hasConflict() != other.hasConflict()) return false;
      if (hasConflict()) {
        if (!getConflict()
            .equals(other.getConflict())) return false;
      }
      if (hasAssumptions() != other.hasAssumptions()) return false;
      if (hasAssumptions()) {
        if (!getAssumptions()
            .equals(other.getAssumptions())) return false;
      }
      if (hasSeen() != other.hasSeen()) return false;
      if (hasSeen()) {
        if (!getSeen()
            .equals(other.getSeen())) return false;
      }
      if (getAnalyzeBtLevel()
          != other.getAnalyzeBtLevel()) return false;
      if (java.lang.Double.doubleToLongBits(getClaInc())
          != java.lang.Double.doubleToLongBits(
              other.getClaInc())) return false;
      if (getSimpDBAssigns()
          != other.getSimpDBAssigns()) return false;
      if (getSimpDBProps()
          != other.getSimpDBProps()) return false;
      if (getClausesLiterals()
          != other.getClausesLiterals()) return false;
      if (getLearntsLiterals()
          != other.getLearntsLiterals()) return false;
      if (java.lang.Double.doubleToLongBits(getVarDecay())
          != java.lang.Double.doubleToLongBits(
              other.getVarDecay())) return false;
      if (java.lang.Double.doubleToLongBits(getVarInc())
          != java.lang.Double.doubleToLongBits(
              other.getVarInc())) return false;
      if (ccminMode_ != other.ccminMode_) return false;
      if (getRestartFirst()
          != other.getRestartFirst()) return false;
      if (java.lang.Double.doubleToLongBits(getRestartInc())
          != java.lang.Double.doubleToLongBits(
              other.getRestartInc())) return false;
      if (java.lang.Double.doubleToLongBits(getClauseDecay())
          != java.lang.Double.doubleToLongBits(
              other.getClauseDecay())) return false;
      if (getShouldRemoveSatsisfied()
          != other.getShouldRemoveSatsisfied()) return false;
      if (java.lang.Double.doubleToLongBits(getLearntsizeFactor())
          != java.lang.Double.doubleToLongBits(
              other.getLearntsizeFactor())) return false;
      if (java.lang.Double.doubleToLongBits(getLearntsizeInc())
          != java.lang.Double.doubleToLongBits(
              other.getLearntsizeInc())) return false;
      if (getIncremental()
          != other.getIncremental()) return false;
      if (!internalGetName2Idx().equals(
          other.internalGetName2Idx())) return false;
      if (hasPgProof() != other.hasPgProof()) return false;
      if (hasPgProof()) {
        if (!getPgProof()
            .equals(other.getPgProof())) return false;
      }
      if (!getPgOriginalClausesList()
          .equals(other.getPgOriginalClausesList())) return false;
      if (hasBackboneCandidates() != other.hasBackboneCandidates()) return false;
      if (hasBackboneCandidates()) {
        if (!getBackboneCandidates()
            .equals(other.getBackboneCandidates())) return false;
      }
      if (hasBackboneAssumptions() != other.hasBackboneAssumptions()) return false;
      if (hasBackboneAssumptions()) {
        if (!getBackboneAssumptions()
            .equals(other.getBackboneAssumptions())) return false;
      }
      if (!internalGetBackboneMap().equals(
          other.internalGetBackboneMap())) return false;
      if (getComputingBackbone()
          != other.getComputingBackbone()) return false;
      if (hasSelectionOrder() != other.hasSelectionOrder()) return false;
      if (hasSelectionOrder()) {
        if (!getSelectionOrder()
            .equals(other.getSelectionOrder())) return false;
      }
      if (getSelectionOrderIdx()
          != other.getSelectionOrderIdx()) return false;
      if (java.lang.Double.doubleToLongBits(getLearntsizeAdjustConfl())
          != java.lang.Double.doubleToLongBits(
              other.getLearntsizeAdjustConfl())) return false;
      if (getLearntsizeAdjustCnt()
          != other.getLearntsizeAdjustCnt()) return false;
      if (getLearntsizeAdjustStartConfl()
          != other.getLearntsizeAdjustStartConfl()) return false;
      if (java.lang.Double.doubleToLongBits(getLearntsizeAdjustInc())
          != java.lang.Double.doubleToLongBits(
              other.getLearntsizeAdjustInc())) return false;
      if (java.lang.Double.doubleToLongBits(getMaxLearnts())
          != java.lang.Double.doubleToLongBits(
              other.getMaxLearnts())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasConfig()) {
        hash = (37 * hash) + CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getConfig().hashCode();
      }
      hash = (37 * hash) + OK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getOk());
      hash = (37 * hash) + QHEAD_FIELD_NUMBER;
      hash = (53 * hash) + getQhead();
      if (hasClauses()) {
        hash = (37 * hash) + CLAUSES_FIELD_NUMBER;
        hash = (53 * hash) + getClauses().hashCode();
      }
      if (hasLearnts()) {
        hash = (37 * hash) + LEARNTS_FIELD_NUMBER;
        hash = (53 * hash) + getLearnts().hashCode();
      }
      if (hasWatches()) {
        hash = (37 * hash) + WATCHES_FIELD_NUMBER;
        hash = (53 * hash) + getWatches().hashCode();
      }
      if (hasVars()) {
        hash = (37 * hash) + VARS_FIELD_NUMBER;
        hash = (53 * hash) + getVars().hashCode();
      }
      if (hasOrderHeap()) {
        hash = (37 * hash) + ORDERHEAP_FIELD_NUMBER;
        hash = (53 * hash) + getOrderHeap().hashCode();
      }
      if (hasTrail()) {
        hash = (37 * hash) + TRAIL_FIELD_NUMBER;
        hash = (53 * hash) + getTrail().hashCode();
      }
      if (hasTrailLim()) {
        hash = (37 * hash) + TRAILLIM_FIELD_NUMBER;
        hash = (53 * hash) + getTrailLim().hashCode();
      }
      if (hasModel()) {
        hash = (37 * hash) + MODEL_FIELD_NUMBER;
        hash = (53 * hash) + getModel().hashCode();
      }
      if (hasConflict()) {
        hash = (37 * hash) + CONFLICT_FIELD_NUMBER;
        hash = (53 * hash) + getConflict().hashCode();
      }
      if (hasAssumptions()) {
        hash = (37 * hash) + ASSUMPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getAssumptions().hashCode();
      }
      if (hasSeen()) {
        hash = (37 * hash) + SEEN_FIELD_NUMBER;
        hash = (53 * hash) + getSeen().hashCode();
      }
      hash = (37 * hash) + ANALYZEBTLEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getAnalyzeBtLevel();
      hash = (37 * hash) + CLAINC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getClaInc()));
      hash = (37 * hash) + SIMPDBASSIGNS_FIELD_NUMBER;
      hash = (53 * hash) + getSimpDBAssigns();
      hash = (37 * hash) + SIMPDBPROPS_FIELD_NUMBER;
      hash = (53 * hash) + getSimpDBProps();
      hash = (37 * hash) + CLAUSESLITERALS_FIELD_NUMBER;
      hash = (53 * hash) + getClausesLiterals();
      hash = (37 * hash) + LEARNTSLITERALS_FIELD_NUMBER;
      hash = (53 * hash) + getLearntsLiterals();
      hash = (37 * hash) + VARDECAY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getVarDecay()));
      hash = (37 * hash) + VARINC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getVarInc()));
      hash = (37 * hash) + CCMINMODE_FIELD_NUMBER;
      hash = (53 * hash) + ccminMode_;
      hash = (37 * hash) + RESTARTFIRST_FIELD_NUMBER;
      hash = (53 * hash) + getRestartFirst();
      hash = (37 * hash) + RESTARTINC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getRestartInc()));
      hash = (37 * hash) + CLAUSEDECAY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getClauseDecay()));
      hash = (37 * hash) + SHOULDREMOVESATSISFIED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getShouldRemoveSatsisfied());
      hash = (37 * hash) + LEARNTSIZEFACTOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLearntsizeFactor()));
      hash = (37 * hash) + LEARNTSIZEINC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLearntsizeInc()));
      hash = (37 * hash) + INCREMENTAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIncremental());
      if (!internalGetName2Idx().getMap().isEmpty()) {
        hash = (37 * hash) + NAME2IDX_FIELD_NUMBER;
        hash = (53 * hash) + internalGetName2Idx().hashCode();
      }
      if (hasPgProof()) {
        hash = (37 * hash) + PGPROOF_FIELD_NUMBER;
        hash = (53 * hash) + getPgProof().hashCode();
      }
      if (getPgOriginalClausesCount() > 0) {
        hash = (37 * hash) + PGORIGINALCLAUSES_FIELD_NUMBER;
        hash = (53 * hash) + getPgOriginalClausesList().hashCode();
      }
      if (hasBackboneCandidates()) {
        hash = (37 * hash) + BACKBONECANDIDATES_FIELD_NUMBER;
        hash = (53 * hash) + getBackboneCandidates().hashCode();
      }
      if (hasBackboneAssumptions()) {
        hash = (37 * hash) + BACKBONEASSUMPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getBackboneAssumptions().hashCode();
      }
      if (!internalGetBackboneMap().getMap().isEmpty()) {
        hash = (37 * hash) + BACKBONEMAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetBackboneMap().hashCode();
      }
      hash = (37 * hash) + COMPUTINGBACKBONE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getComputingBackbone());
      if (hasSelectionOrder()) {
        hash = (37 * hash) + SELECTIONORDER_FIELD_NUMBER;
        hash = (53 * hash) + getSelectionOrder().hashCode();
      }
      hash = (37 * hash) + SELECTIONORDERIDX_FIELD_NUMBER;
      hash = (53 * hash) + getSelectionOrderIdx();
      hash = (37 * hash) + LEARNTSIZEADJUSTCONFL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLearntsizeAdjustConfl()));
      hash = (37 * hash) + LEARNTSIZEADJUSTCNT_FIELD_NUMBER;
      hash = (53 * hash) + getLearntsizeAdjustCnt();
      hash = (37 * hash) + LEARNTSIZEADJUSTSTARTCONFL_FIELD_NUMBER;
      hash = (53 * hash) + getLearntsizeAdjustStartConfl();
      hash = (37 * hash) + LEARNTSIZEADJUSTINC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLearntsizeAdjustInc()));
      hash = (37 * hash) + MAXLEARNTS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMaxLearnts()));
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code solver.PBMiniSatStyleSolver}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:solver.PBMiniSatStyleSolver)
        com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolverOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.internal_static_solver_PBMiniSatStyleSolver_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
          int number) {
        switch (number) {
          case 31:
            return internalGetName2Idx();
          case 36:
            return internalGetBackboneMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
          int number) {
        switch (number) {
          case 31:
            return internalGetMutableName2Idx();
          case 36:
            return internalGetMutableBackboneMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.internal_static_solver_PBMiniSatStyleSolver_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver.class, com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver.Builder.class);
      }

      // Construct using com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getConfigFieldBuilder();
          getClausesFieldBuilder();
          getLearntsFieldBuilder();
          getWatchesFieldBuilder();
          getVarsFieldBuilder();
          getOrderHeapFieldBuilder();
          getTrailFieldBuilder();
          getTrailLimFieldBuilder();
          getModelFieldBuilder();
          getConflictFieldBuilder();
          getAssumptionsFieldBuilder();
          getSeenFieldBuilder();
          getPgProofFieldBuilder();
          getPgOriginalClausesFieldBuilder();
          getBackboneCandidatesFieldBuilder();
          getBackboneAssumptionsFieldBuilder();
          getSelectionOrderFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        bitField1_ = 0;
        config_ = null;
        if (configBuilder_ != null) {
          configBuilder_.dispose();
          configBuilder_ = null;
        }
        ok_ = false;
        qhead_ = 0;
        clauses_ = null;
        if (clausesBuilder_ != null) {
          clausesBuilder_.dispose();
          clausesBuilder_ = null;
        }
        learnts_ = null;
        if (learntsBuilder_ != null) {
          learntsBuilder_.dispose();
          learntsBuilder_ = null;
        }
        watches_ = null;
        if (watchesBuilder_ != null) {
          watchesBuilder_.dispose();
          watchesBuilder_ = null;
        }
        vars_ = null;
        if (varsBuilder_ != null) {
          varsBuilder_.dispose();
          varsBuilder_ = null;
        }
        orderHeap_ = null;
        if (orderHeapBuilder_ != null) {
          orderHeapBuilder_.dispose();
          orderHeapBuilder_ = null;
        }
        trail_ = null;
        if (trailBuilder_ != null) {
          trailBuilder_.dispose();
          trailBuilder_ = null;
        }
        trailLim_ = null;
        if (trailLimBuilder_ != null) {
          trailLimBuilder_.dispose();
          trailLimBuilder_ = null;
        }
        model_ = null;
        if (modelBuilder_ != null) {
          modelBuilder_.dispose();
          modelBuilder_ = null;
        }
        conflict_ = null;
        if (conflictBuilder_ != null) {
          conflictBuilder_.dispose();
          conflictBuilder_ = null;
        }
        assumptions_ = null;
        if (assumptionsBuilder_ != null) {
          assumptionsBuilder_.dispose();
          assumptionsBuilder_ = null;
        }
        seen_ = null;
        if (seenBuilder_ != null) {
          seenBuilder_.dispose();
          seenBuilder_ = null;
        }
        analyzeBtLevel_ = 0;
        claInc_ = 0D;
        simpDBAssigns_ = 0;
        simpDBProps_ = 0;
        clausesLiterals_ = 0;
        learntsLiterals_ = 0;
        varDecay_ = 0D;
        varInc_ = 0D;
        ccminMode_ = 0;
        restartFirst_ = 0;
        restartInc_ = 0D;
        clauseDecay_ = 0D;
        shouldRemoveSatsisfied_ = false;
        learntsizeFactor_ = 0D;
        learntsizeInc_ = 0D;
        incremental_ = false;
        internalGetMutableName2Idx().clear();
        pgProof_ = null;
        if (pgProofBuilder_ != null) {
          pgProofBuilder_.dispose();
          pgProofBuilder_ = null;
        }
        if (pgOriginalClausesBuilder_ == null) {
          pgOriginalClauses_ = java.util.Collections.emptyList();
        } else {
          pgOriginalClauses_ = null;
          pgOriginalClausesBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000001);
        backboneCandidates_ = null;
        if (backboneCandidatesBuilder_ != null) {
          backboneCandidatesBuilder_.dispose();
          backboneCandidatesBuilder_ = null;
        }
        backboneAssumptions_ = null;
        if (backboneAssumptionsBuilder_ != null) {
          backboneAssumptionsBuilder_.dispose();
          backboneAssumptionsBuilder_ = null;
        }
        internalGetMutableBackboneMap().clear();
        computingBackbone_ = false;
        selectionOrder_ = null;
        if (selectionOrderBuilder_ != null) {
          selectionOrderBuilder_.dispose();
          selectionOrderBuilder_ = null;
        }
        selectionOrderIdx_ = 0;
        learntsizeAdjustConfl_ = 0D;
        learntsizeAdjustCnt_ = 0;
        learntsizeAdjustStartConfl_ = 0;
        learntsizeAdjustInc_ = 0D;
        maxLearnts_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.internal_static_solver_PBMiniSatStyleSolver_descriptor;
      }

      @java.lang.Override
      public com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver getDefaultInstanceForType() {
        return com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver.getDefaultInstance();
      }

      @java.lang.Override
      public com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver build() {
        com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver buildPartial() {
        com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver result = new com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        if (bitField1_ != 0) { buildPartial1(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver result) {
        if (pgOriginalClausesBuilder_ == null) {
          if (((bitField1_ & 0x00000001) != 0)) {
            pgOriginalClauses_ = java.util.Collections.unmodifiableList(pgOriginalClauses_);
            bitField1_ = (bitField1_ & ~0x00000001);
          }
          result.pgOriginalClauses_ = pgOriginalClauses_;
        } else {
          result.pgOriginalClauses_ = pgOriginalClausesBuilder_.build();
        }
      }

      private void buildPartial0(com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.config_ = configBuilder_ == null
              ? config_
              : configBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.ok_ = ok_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.qhead_ = qhead_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.clauses_ = clausesBuilder_ == null
              ? clauses_
              : clausesBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.learnts_ = learntsBuilder_ == null
              ? learnts_
              : learntsBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.watches_ = watchesBuilder_ == null
              ? watches_
              : watchesBuilder_.build();
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.vars_ = varsBuilder_ == null
              ? vars_
              : varsBuilder_.build();
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.orderHeap_ = orderHeapBuilder_ == null
              ? orderHeap_
              : orderHeapBuilder_.build();
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.trail_ = trailBuilder_ == null
              ? trail_
              : trailBuilder_.build();
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.trailLim_ = trailLimBuilder_ == null
              ? trailLim_
              : trailLimBuilder_.build();
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.model_ = modelBuilder_ == null
              ? model_
              : modelBuilder_.build();
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.conflict_ = conflictBuilder_ == null
              ? conflict_
              : conflictBuilder_.build();
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.assumptions_ = assumptionsBuilder_ == null
              ? assumptions_
              : assumptionsBuilder_.build();
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.seen_ = seenBuilder_ == null
              ? seen_
              : seenBuilder_.build();
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.analyzeBtLevel_ = analyzeBtLevel_;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.claInc_ = claInc_;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.simpDBAssigns_ = simpDBAssigns_;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.simpDBProps_ = simpDBProps_;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.clausesLiterals_ = clausesLiterals_;
        }
        if (((from_bitField0_ & 0x00080000) != 0)) {
          result.learntsLiterals_ = learntsLiterals_;
        }
        if (((from_bitField0_ & 0x00100000) != 0)) {
          result.varDecay_ = varDecay_;
        }
        if (((from_bitField0_ & 0x00200000) != 0)) {
          result.varInc_ = varInc_;
        }
        if (((from_bitField0_ & 0x00400000) != 0)) {
          result.ccminMode_ = ccminMode_;
        }
        if (((from_bitField0_ & 0x00800000) != 0)) {
          result.restartFirst_ = restartFirst_;
        }
        if (((from_bitField0_ & 0x01000000) != 0)) {
          result.restartInc_ = restartInc_;
        }
        if (((from_bitField0_ & 0x02000000) != 0)) {
          result.clauseDecay_ = clauseDecay_;
        }
        if (((from_bitField0_ & 0x04000000) != 0)) {
          result.shouldRemoveSatsisfied_ = shouldRemoveSatsisfied_;
        }
        if (((from_bitField0_ & 0x08000000) != 0)) {
          result.learntsizeFactor_ = learntsizeFactor_;
        }
        if (((from_bitField0_ & 0x10000000) != 0)) {
          result.learntsizeInc_ = learntsizeInc_;
        }
        if (((from_bitField0_ & 0x20000000) != 0)) {
          result.incremental_ = incremental_;
        }
        if (((from_bitField0_ & 0x40000000) != 0)) {
          result.name2Idx_ = internalGetName2Idx();
          result.name2Idx_.makeImmutable();
        }
        if (((from_bitField0_ & 0x80000000) != 0)) {
          result.pgProof_ = pgProofBuilder_ == null
              ? pgProof_
              : pgProofBuilder_.build();
          to_bitField0_ |= 0x00001000;
        }
        result.bitField0_ |= to_bitField0_;
      }

      private void buildPartial1(com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver result) {
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        if (((from_bitField1_ & 0x00000002) != 0)) {
          result.backboneCandidates_ = backboneCandidatesBuilder_ == null
              ? backboneCandidates_
              : backboneCandidatesBuilder_.build();
          to_bitField0_ |= 0x00002000;
        }
        if (((from_bitField1_ & 0x00000004) != 0)) {
          result.backboneAssumptions_ = backboneAssumptionsBuilder_ == null
              ? backboneAssumptions_
              : backboneAssumptionsBuilder_.build();
          to_bitField0_ |= 0x00004000;
        }
        if (((from_bitField1_ & 0x00000008) != 0)) {
          result.backboneMap_ = internalGetBackboneMap();
          result.backboneMap_.makeImmutable();
        }
        if (((from_bitField1_ & 0x00000010) != 0)) {
          result.computingBackbone_ = computingBackbone_;
        }
        if (((from_bitField1_ & 0x00000020) != 0)) {
          result.selectionOrder_ = selectionOrderBuilder_ == null
              ? selectionOrder_
              : selectionOrderBuilder_.build();
          to_bitField0_ |= 0x00008000;
        }
        if (((from_bitField1_ & 0x00000040) != 0)) {
          result.selectionOrderIdx_ = selectionOrderIdx_;
        }
        if (((from_bitField1_ & 0x00000080) != 0)) {
          result.learntsizeAdjustConfl_ = learntsizeAdjustConfl_;
        }
        if (((from_bitField1_ & 0x00000100) != 0)) {
          result.learntsizeAdjustCnt_ = learntsizeAdjustCnt_;
        }
        if (((from_bitField1_ & 0x00000200) != 0)) {
          result.learntsizeAdjustStartConfl_ = learntsizeAdjustStartConfl_;
        }
        if (((from_bitField1_ & 0x00000400) != 0)) {
          result.learntsizeAdjustInc_ = learntsizeAdjustInc_;
        }
        if (((from_bitField1_ & 0x00000800) != 0)) {
          result.maxLearnts_ = maxLearnts_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver) {
          return mergeFrom((com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver other) {
        if (other == com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver.getDefaultInstance()) return this;
        if (other.hasConfig()) {
          mergeConfig(other.getConfig());
        }
        if (other.getOk() != false) {
          setOk(other.getOk());
        }
        if (other.getQhead() != 0) {
          setQhead(other.getQhead());
        }
        if (other.hasClauses()) {
          mergeClauses(other.getClauses());
        }
        if (other.hasLearnts()) {
          mergeLearnts(other.getLearnts());
        }
        if (other.hasWatches()) {
          mergeWatches(other.getWatches());
        }
        if (other.hasVars()) {
          mergeVars(other.getVars());
        }
        if (other.hasOrderHeap()) {
          mergeOrderHeap(other.getOrderHeap());
        }
        if (other.hasTrail()) {
          mergeTrail(other.getTrail());
        }
        if (other.hasTrailLim()) {
          mergeTrailLim(other.getTrailLim());
        }
        if (other.hasModel()) {
          mergeModel(other.getModel());
        }
        if (other.hasConflict()) {
          mergeConflict(other.getConflict());
        }
        if (other.hasAssumptions()) {
          mergeAssumptions(other.getAssumptions());
        }
        if (other.hasSeen()) {
          mergeSeen(other.getSeen());
        }
        if (other.getAnalyzeBtLevel() != 0) {
          setAnalyzeBtLevel(other.getAnalyzeBtLevel());
        }
        if (other.getClaInc() != 0D) {
          setClaInc(other.getClaInc());
        }
        if (other.getSimpDBAssigns() != 0) {
          setSimpDBAssigns(other.getSimpDBAssigns());
        }
        if (other.getSimpDBProps() != 0) {
          setSimpDBProps(other.getSimpDBProps());
        }
        if (other.getClausesLiterals() != 0) {
          setClausesLiterals(other.getClausesLiterals());
        }
        if (other.getLearntsLiterals() != 0) {
          setLearntsLiterals(other.getLearntsLiterals());
        }
        if (other.getVarDecay() != 0D) {
          setVarDecay(other.getVarDecay());
        }
        if (other.getVarInc() != 0D) {
          setVarInc(other.getVarInc());
        }
        if (other.ccminMode_ != 0) {
          setCcminModeValue(other.getCcminModeValue());
        }
        if (other.getRestartFirst() != 0) {
          setRestartFirst(other.getRestartFirst());
        }
        if (other.getRestartInc() != 0D) {
          setRestartInc(other.getRestartInc());
        }
        if (other.getClauseDecay() != 0D) {
          setClauseDecay(other.getClauseDecay());
        }
        if (other.getShouldRemoveSatsisfied() != false) {
          setShouldRemoveSatsisfied(other.getShouldRemoveSatsisfied());
        }
        if (other.getLearntsizeFactor() != 0D) {
          setLearntsizeFactor(other.getLearntsizeFactor());
        }
        if (other.getLearntsizeInc() != 0D) {
          setLearntsizeInc(other.getLearntsizeInc());
        }
        if (other.getIncremental() != false) {
          setIncremental(other.getIncremental());
        }
        internalGetMutableName2Idx().mergeFrom(
            other.internalGetName2Idx());
        bitField0_ |= 0x40000000;
        if (other.hasPgProof()) {
          mergePgProof(other.getPgProof());
        }
        if (pgOriginalClausesBuilder_ == null) {
          if (!other.pgOriginalClauses_.isEmpty()) {
            if (pgOriginalClauses_.isEmpty()) {
              pgOriginalClauses_ = other.pgOriginalClauses_;
              bitField1_ = (bitField1_ & ~0x00000001);
            } else {
              ensurePgOriginalClausesIsMutable();
              pgOriginalClauses_.addAll(other.pgOriginalClauses_);
            }
            onChanged();
          }
        } else {
          if (!other.pgOriginalClauses_.isEmpty()) {
            if (pgOriginalClausesBuilder_.isEmpty()) {
              pgOriginalClausesBuilder_.dispose();
              pgOriginalClausesBuilder_ = null;
              pgOriginalClauses_ = other.pgOriginalClauses_;
              bitField1_ = (bitField1_ & ~0x00000001);
              pgOriginalClausesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPgOriginalClausesFieldBuilder() : null;
            } else {
              pgOriginalClausesBuilder_.addAllMessages(other.pgOriginalClauses_);
            }
          }
        }
        if (other.hasBackboneCandidates()) {
          mergeBackboneCandidates(other.getBackboneCandidates());
        }
        if (other.hasBackboneAssumptions()) {
          mergeBackboneAssumptions(other.getBackboneAssumptions());
        }
        internalGetMutableBackboneMap().mergeFrom(
            other.internalGetBackboneMap());
        bitField1_ |= 0x00000008;
        if (other.getComputingBackbone() != false) {
          setComputingBackbone(other.getComputingBackbone());
        }
        if (other.hasSelectionOrder()) {
          mergeSelectionOrder(other.getSelectionOrder());
        }
        if (other.getSelectionOrderIdx() != 0) {
          setSelectionOrderIdx(other.getSelectionOrderIdx());
        }
        if (other.getLearntsizeAdjustConfl() != 0D) {
          setLearntsizeAdjustConfl(other.getLearntsizeAdjustConfl());
        }
        if (other.getLearntsizeAdjustCnt() != 0) {
          setLearntsizeAdjustCnt(other.getLearntsizeAdjustCnt());
        }
        if (other.getLearntsizeAdjustStartConfl() != 0) {
          setLearntsizeAdjustStartConfl(other.getLearntsizeAdjustStartConfl());
        }
        if (other.getLearntsizeAdjustInc() != 0D) {
          setLearntsizeAdjustInc(other.getLearntsizeAdjustInc());
        }
        if (other.getMaxLearnts() != 0D) {
          setMaxLearnts(other.getMaxLearnts());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getConfigFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                ok_ = input.readBool();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                qhead_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 34: {
                input.readMessage(
                    getClausesFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getLearntsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 50: {
                input.readMessage(
                    getWatchesFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              case 58: {
                input.readMessage(
                    getVarsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              case 66: {
                input.readMessage(
                    getOrderHeapFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              case 74: {
                input.readMessage(
                    getTrailFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000100;
                break;
              } // case 74
              case 82: {
                input.readMessage(
                    getTrailLimFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000200;
                break;
              } // case 82
              case 90: {
                input.readMessage(
                    getModelFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000400;
                break;
              } // case 90
              case 98: {
                input.readMessage(
                    getConflictFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000800;
                break;
              } // case 98
              case 106: {
                input.readMessage(
                    getAssumptionsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00001000;
                break;
              } // case 106
              case 114: {
                input.readMessage(
                    getSeenFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00002000;
                break;
              } // case 114
              case 120: {
                analyzeBtLevel_ = input.readInt32();
                bitField0_ |= 0x00004000;
                break;
              } // case 120
              case 129: {
                claInc_ = input.readDouble();
                bitField0_ |= 0x00008000;
                break;
              } // case 129
              case 136: {
                simpDBAssigns_ = input.readInt32();
                bitField0_ |= 0x00010000;
                break;
              } // case 136
              case 144: {
                simpDBProps_ = input.readInt32();
                bitField0_ |= 0x00020000;
                break;
              } // case 144
              case 152: {
                clausesLiterals_ = input.readInt32();
                bitField0_ |= 0x00040000;
                break;
              } // case 152
              case 160: {
                learntsLiterals_ = input.readInt32();
                bitField0_ |= 0x00080000;
                break;
              } // case 160
              case 169: {
                varDecay_ = input.readDouble();
                bitField0_ |= 0x00100000;
                break;
              } // case 169
              case 177: {
                varInc_ = input.readDouble();
                bitField0_ |= 0x00200000;
                break;
              } // case 177
              case 184: {
                ccminMode_ = input.readEnum();
                bitField0_ |= 0x00400000;
                break;
              } // case 184
              case 192: {
                restartFirst_ = input.readInt32();
                bitField0_ |= 0x00800000;
                break;
              } // case 192
              case 201: {
                restartInc_ = input.readDouble();
                bitField0_ |= 0x01000000;
                break;
              } // case 201
              case 209: {
                clauseDecay_ = input.readDouble();
                bitField0_ |= 0x02000000;
                break;
              } // case 209
              case 216: {
                shouldRemoveSatsisfied_ = input.readBool();
                bitField0_ |= 0x04000000;
                break;
              } // case 216
              case 225: {
                learntsizeFactor_ = input.readDouble();
                bitField0_ |= 0x08000000;
                break;
              } // case 225
              case 233: {
                learntsizeInc_ = input.readDouble();
                bitField0_ |= 0x10000000;
                break;
              } // case 233
              case 240: {
                incremental_ = input.readBool();
                bitField0_ |= 0x20000000;
                break;
              } // case 240
              case 250: {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
                name2Idx__ = input.readMessage(
                    Name2IdxDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableName2Idx().getMutableMap().put(
                    name2Idx__.getKey(), name2Idx__.getValue());
                bitField0_ |= 0x40000000;
                break;
              } // case 250
              case 258: {
                input.readMessage(
                    getPgProofFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x80000000;
                break;
              } // case 258
              case 266: {
                com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation m =
                    input.readMessage(
                        com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation.parser(),
                        extensionRegistry);
                if (pgOriginalClausesBuilder_ == null) {
                  ensurePgOriginalClausesIsMutable();
                  pgOriginalClauses_.add(m);
                } else {
                  pgOriginalClausesBuilder_.addMessage(m);
                }
                break;
              } // case 266
              case 274: {
                input.readMessage(
                    getBackboneCandidatesFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField1_ |= 0x00000002;
                break;
              } // case 274
              case 282: {
                input.readMessage(
                    getBackboneAssumptionsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField1_ |= 0x00000004;
                break;
              } // case 282
              case 290: {
                com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
                backboneMap__ = input.readMessage(
                    BackboneMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableBackboneMap().getMutableMap().put(
                    backboneMap__.getKey(), backboneMap__.getValue());
                bitField1_ |= 0x00000008;
                break;
              } // case 290
              case 296: {
                computingBackbone_ = input.readBool();
                bitField1_ |= 0x00000010;
                break;
              } // case 296
              case 306: {
                input.readMessage(
                    getSelectionOrderFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField1_ |= 0x00000020;
                break;
              } // case 306
              case 312: {
                selectionOrderIdx_ = input.readInt32();
                bitField1_ |= 0x00000040;
                break;
              } // case 312
              case 321: {
                learntsizeAdjustConfl_ = input.readDouble();
                bitField1_ |= 0x00000080;
                break;
              } // case 321
              case 328: {
                learntsizeAdjustCnt_ = input.readInt32();
                bitField1_ |= 0x00000100;
                break;
              } // case 328
              case 336: {
                learntsizeAdjustStartConfl_ = input.readInt32();
                bitField1_ |= 0x00000200;
                break;
              } // case 336
              case 345: {
                learntsizeAdjustInc_ = input.readDouble();
                bitField1_ |= 0x00000400;
                break;
              } // case 345
              case 353: {
                maxLearnts_ = input.readDouble();
                bitField1_ |= 0x00000800;
                break;
              } // case 353
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig config_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig, com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig.Builder, com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfigOrBuilder> configBuilder_;
      /**
       * <code>.solver.PBMiniSatConfig config = 1;</code>
       * @return Whether the config field is set.
       */
      public boolean hasConfig() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.solver.PBMiniSatConfig config = 1;</code>
       * @return The config.
       */
      public com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig getConfig() {
        if (configBuilder_ == null) {
          return config_ == null ? com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig.getDefaultInstance() : config_;
        } else {
          return configBuilder_.getMessage();
        }
      }
      /**
       * <code>.solver.PBMiniSatConfig config = 1;</code>
       */
      public Builder setConfig(com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig value) {
        if (configBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          config_ = value;
        } else {
          configBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBMiniSatConfig config = 1;</code>
       */
      public Builder setConfig(
          com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig.Builder builderForValue) {
        if (configBuilder_ == null) {
          config_ = builderForValue.build();
        } else {
          configBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBMiniSatConfig config = 1;</code>
       */
      public Builder mergeConfig(com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig value) {
        if (configBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            config_ != null &&
            config_ != com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig.getDefaultInstance()) {
            getConfigBuilder().mergeFrom(value);
          } else {
            config_ = value;
          }
        } else {
          configBuilder_.mergeFrom(value);
        }
        if (config_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.solver.PBMiniSatConfig config = 1;</code>
       */
      public Builder clearConfig() {
        bitField0_ = (bitField0_ & ~0x00000001);
        config_ = null;
        if (configBuilder_ != null) {
          configBuilder_.dispose();
          configBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBMiniSatConfig config = 1;</code>
       */
      public com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig.Builder getConfigBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>.solver.PBMiniSatConfig config = 1;</code>
       */
      public com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfigOrBuilder getConfigOrBuilder() {
        if (configBuilder_ != null) {
          return configBuilder_.getMessageOrBuilder();
        } else {
          return config_ == null ?
              com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig.getDefaultInstance() : config_;
        }
      }
      /**
       * <code>.solver.PBMiniSatConfig config = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig, com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig.Builder, com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfigOrBuilder> 
          getConfigFieldBuilder() {
        if (configBuilder_ == null) {
          configBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig, com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfig.Builder, com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatConfigOrBuilder>(
                  getConfig(),
                  getParentForChildren(),
                  isClean());
          config_ = null;
        }
        return configBuilder_;
      }

      private boolean ok_ ;
      /**
       * <code>bool ok = 2;</code>
       * @return The ok.
       */
      @java.lang.Override
      public boolean getOk() {
        return ok_;
      }
      /**
       * <code>bool ok = 2;</code>
       * @param value The ok to set.
       * @return This builder for chaining.
       */
      public Builder setOk(boolean value) {

        ok_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>bool ok = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearOk() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ok_ = false;
        onChanged();
        return this;
      }

      private int qhead_ ;
      /**
       * <code>int32 qhead = 3;</code>
       * @return The qhead.
       */
      @java.lang.Override
      public int getQhead() {
        return qhead_;
      }
      /**
       * <code>int32 qhead = 3;</code>
       * @param value The qhead to set.
       * @return This builder for chaining.
       */
      public Builder setQhead(int value) {

        qhead_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>int32 qhead = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearQhead() {
        bitField0_ = (bitField0_ & ~0x00000004);
        qhead_ = 0;
        onChanged();
        return this;
      }

      private com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector clauses_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector.Builder, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVectorOrBuilder> clausesBuilder_;
      /**
       * <code>.solver.PBMsClauseVector clauses = 4;</code>
       * @return Whether the clauses field is set.
       */
      public boolean hasClauses() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>.solver.PBMsClauseVector clauses = 4;</code>
       * @return The clauses.
       */
      public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector getClauses() {
        if (clausesBuilder_ == null) {
          return clauses_ == null ? com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector.getDefaultInstance() : clauses_;
        } else {
          return clausesBuilder_.getMessage();
        }
      }
      /**
       * <code>.solver.PBMsClauseVector clauses = 4;</code>
       */
      public Builder setClauses(com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector value) {
        if (clausesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clauses_ = value;
        } else {
          clausesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBMsClauseVector clauses = 4;</code>
       */
      public Builder setClauses(
          com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector.Builder builderForValue) {
        if (clausesBuilder_ == null) {
          clauses_ = builderForValue.build();
        } else {
          clausesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBMsClauseVector clauses = 4;</code>
       */
      public Builder mergeClauses(com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector value) {
        if (clausesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            clauses_ != null &&
            clauses_ != com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector.getDefaultInstance()) {
            getClausesBuilder().mergeFrom(value);
          } else {
            clauses_ = value;
          }
        } else {
          clausesBuilder_.mergeFrom(value);
        }
        if (clauses_ != null) {
          bitField0_ |= 0x00000008;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.solver.PBMsClauseVector clauses = 4;</code>
       */
      public Builder clearClauses() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clauses_ = null;
        if (clausesBuilder_ != null) {
          clausesBuilder_.dispose();
          clausesBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBMsClauseVector clauses = 4;</code>
       */
      public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector.Builder getClausesBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getClausesFieldBuilder().getBuilder();
      }
      /**
       * <code>.solver.PBMsClauseVector clauses = 4;</code>
       */
      public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVectorOrBuilder getClausesOrBuilder() {
        if (clausesBuilder_ != null) {
          return clausesBuilder_.getMessageOrBuilder();
        } else {
          return clauses_ == null ?
              com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector.getDefaultInstance() : clauses_;
        }
      }
      /**
       * <code>.solver.PBMsClauseVector clauses = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector.Builder, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVectorOrBuilder> 
          getClausesFieldBuilder() {
        if (clausesBuilder_ == null) {
          clausesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector.Builder, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVectorOrBuilder>(
                  getClauses(),
                  getParentForChildren(),
                  isClean());
          clauses_ = null;
        }
        return clausesBuilder_;
      }

      private com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector learnts_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector.Builder, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVectorOrBuilder> learntsBuilder_;
      /**
       * <code>.solver.PBMsClauseVector learnts = 5;</code>
       * @return Whether the learnts field is set.
       */
      public boolean hasLearnts() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>.solver.PBMsClauseVector learnts = 5;</code>
       * @return The learnts.
       */
      public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector getLearnts() {
        if (learntsBuilder_ == null) {
          return learnts_ == null ? com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector.getDefaultInstance() : learnts_;
        } else {
          return learntsBuilder_.getMessage();
        }
      }
      /**
       * <code>.solver.PBMsClauseVector learnts = 5;</code>
       */
      public Builder setLearnts(com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector value) {
        if (learntsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          learnts_ = value;
        } else {
          learntsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBMsClauseVector learnts = 5;</code>
       */
      public Builder setLearnts(
          com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector.Builder builderForValue) {
        if (learntsBuilder_ == null) {
          learnts_ = builderForValue.build();
        } else {
          learntsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBMsClauseVector learnts = 5;</code>
       */
      public Builder mergeLearnts(com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector value) {
        if (learntsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            learnts_ != null &&
            learnts_ != com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector.getDefaultInstance()) {
            getLearntsBuilder().mergeFrom(value);
          } else {
            learnts_ = value;
          }
        } else {
          learntsBuilder_.mergeFrom(value);
        }
        if (learnts_ != null) {
          bitField0_ |= 0x00000010;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.solver.PBMsClauseVector learnts = 5;</code>
       */
      public Builder clearLearnts() {
        bitField0_ = (bitField0_ & ~0x00000010);
        learnts_ = null;
        if (learntsBuilder_ != null) {
          learntsBuilder_.dispose();
          learntsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBMsClauseVector learnts = 5;</code>
       */
      public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector.Builder getLearntsBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getLearntsFieldBuilder().getBuilder();
      }
      /**
       * <code>.solver.PBMsClauseVector learnts = 5;</code>
       */
      public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVectorOrBuilder getLearntsOrBuilder() {
        if (learntsBuilder_ != null) {
          return learntsBuilder_.getMessageOrBuilder();
        } else {
          return learnts_ == null ?
              com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector.getDefaultInstance() : learnts_;
        }
      }
      /**
       * <code>.solver.PBMsClauseVector learnts = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector.Builder, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVectorOrBuilder> 
          getLearntsFieldBuilder() {
        if (learntsBuilder_ == null) {
          learntsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVector.Builder, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsClauseVectorOrBuilder>(
                  getLearnts(),
                  getParentForChildren(),
                  isClean());
          learnts_ = null;
        }
        return learntsBuilder_;
      }

      private com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVector watches_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVector, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVector.Builder, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVectorOrBuilder> watchesBuilder_;
      /**
       * <code>.solver.PBMsWatcherVectorVector watches = 6;</code>
       * @return Whether the watches field is set.
       */
      public boolean hasWatches() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>.solver.PBMsWatcherVectorVector watches = 6;</code>
       * @return The watches.
       */
      public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVector getWatches() {
        if (watchesBuilder_ == null) {
          return watches_ == null ? com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVector.getDefaultInstance() : watches_;
        } else {
          return watchesBuilder_.getMessage();
        }
      }
      /**
       * <code>.solver.PBMsWatcherVectorVector watches = 6;</code>
       */
      public Builder setWatches(com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVector value) {
        if (watchesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          watches_ = value;
        } else {
          watchesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBMsWatcherVectorVector watches = 6;</code>
       */
      public Builder setWatches(
          com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVector.Builder builderForValue) {
        if (watchesBuilder_ == null) {
          watches_ = builderForValue.build();
        } else {
          watchesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBMsWatcherVectorVector watches = 6;</code>
       */
      public Builder mergeWatches(com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVector value) {
        if (watchesBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
            watches_ != null &&
            watches_ != com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVector.getDefaultInstance()) {
            getWatchesBuilder().mergeFrom(value);
          } else {
            watches_ = value;
          }
        } else {
          watchesBuilder_.mergeFrom(value);
        }
        if (watches_ != null) {
          bitField0_ |= 0x00000020;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.solver.PBMsWatcherVectorVector watches = 6;</code>
       */
      public Builder clearWatches() {
        bitField0_ = (bitField0_ & ~0x00000020);
        watches_ = null;
        if (watchesBuilder_ != null) {
          watchesBuilder_.dispose();
          watchesBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBMsWatcherVectorVector watches = 6;</code>
       */
      public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVector.Builder getWatchesBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getWatchesFieldBuilder().getBuilder();
      }
      /**
       * <code>.solver.PBMsWatcherVectorVector watches = 6;</code>
       */
      public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVectorOrBuilder getWatchesOrBuilder() {
        if (watchesBuilder_ != null) {
          return watchesBuilder_.getMessageOrBuilder();
        } else {
          return watches_ == null ?
              com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVector.getDefaultInstance() : watches_;
        }
      }
      /**
       * <code>.solver.PBMsWatcherVectorVector watches = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVector, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVector.Builder, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVectorOrBuilder> 
          getWatchesFieldBuilder() {
        if (watchesBuilder_ == null) {
          watchesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVector, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVector.Builder, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsWatcherVectorVectorOrBuilder>(
                  getWatches(),
                  getParentForChildren(),
                  isClean());
          watches_ = null;
        }
        return watchesBuilder_;
      }

      private com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVector vars_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVector, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVector.Builder, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVectorOrBuilder> varsBuilder_;
      /**
       * <code>.solver.PBMsVariableVector vars = 7;</code>
       * @return Whether the vars field is set.
       */
      public boolean hasVars() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>.solver.PBMsVariableVector vars = 7;</code>
       * @return The vars.
       */
      public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVector getVars() {
        if (varsBuilder_ == null) {
          return vars_ == null ? com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVector.getDefaultInstance() : vars_;
        } else {
          return varsBuilder_.getMessage();
        }
      }
      /**
       * <code>.solver.PBMsVariableVector vars = 7;</code>
       */
      public Builder setVars(com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVector value) {
        if (varsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vars_ = value;
        } else {
          varsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBMsVariableVector vars = 7;</code>
       */
      public Builder setVars(
          com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVector.Builder builderForValue) {
        if (varsBuilder_ == null) {
          vars_ = builderForValue.build();
        } else {
          varsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBMsVariableVector vars = 7;</code>
       */
      public Builder mergeVars(com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVector value) {
        if (varsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0) &&
            vars_ != null &&
            vars_ != com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVector.getDefaultInstance()) {
            getVarsBuilder().mergeFrom(value);
          } else {
            vars_ = value;
          }
        } else {
          varsBuilder_.mergeFrom(value);
        }
        if (vars_ != null) {
          bitField0_ |= 0x00000040;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.solver.PBMsVariableVector vars = 7;</code>
       */
      public Builder clearVars() {
        bitField0_ = (bitField0_ & ~0x00000040);
        vars_ = null;
        if (varsBuilder_ != null) {
          varsBuilder_.dispose();
          varsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBMsVariableVector vars = 7;</code>
       */
      public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVector.Builder getVarsBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getVarsFieldBuilder().getBuilder();
      }
      /**
       * <code>.solver.PBMsVariableVector vars = 7;</code>
       */
      public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVectorOrBuilder getVarsOrBuilder() {
        if (varsBuilder_ != null) {
          return varsBuilder_.getMessageOrBuilder();
        } else {
          return vars_ == null ?
              com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVector.getDefaultInstance() : vars_;
        }
      }
      /**
       * <code>.solver.PBMsVariableVector vars = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVector, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVector.Builder, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVectorOrBuilder> 
          getVarsFieldBuilder() {
        if (varsBuilder_ == null) {
          varsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVector, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVector.Builder, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBMsVariableVectorOrBuilder>(
                  getVars(),
                  getParentForChildren(),
                  isClean());
          vars_ = null;
        }
        return varsBuilder_;
      }

      private com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeap orderHeap_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeap, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeap.Builder, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeapOrBuilder> orderHeapBuilder_;
      /**
       * <code>.solver.PBLngHeap orderHeap = 8;</code>
       * @return Whether the orderHeap field is set.
       */
      public boolean hasOrderHeap() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>.solver.PBLngHeap orderHeap = 8;</code>
       * @return The orderHeap.
       */
      public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeap getOrderHeap() {
        if (orderHeapBuilder_ == null) {
          return orderHeap_ == null ? com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeap.getDefaultInstance() : orderHeap_;
        } else {
          return orderHeapBuilder_.getMessage();
        }
      }
      /**
       * <code>.solver.PBLngHeap orderHeap = 8;</code>
       */
      public Builder setOrderHeap(com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeap value) {
        if (orderHeapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          orderHeap_ = value;
        } else {
          orderHeapBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBLngHeap orderHeap = 8;</code>
       */
      public Builder setOrderHeap(
          com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeap.Builder builderForValue) {
        if (orderHeapBuilder_ == null) {
          orderHeap_ = builderForValue.build();
        } else {
          orderHeapBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBLngHeap orderHeap = 8;</code>
       */
      public Builder mergeOrderHeap(com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeap value) {
        if (orderHeapBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0) &&
            orderHeap_ != null &&
            orderHeap_ != com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeap.getDefaultInstance()) {
            getOrderHeapBuilder().mergeFrom(value);
          } else {
            orderHeap_ = value;
          }
        } else {
          orderHeapBuilder_.mergeFrom(value);
        }
        if (orderHeap_ != null) {
          bitField0_ |= 0x00000080;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.solver.PBLngHeap orderHeap = 8;</code>
       */
      public Builder clearOrderHeap() {
        bitField0_ = (bitField0_ & ~0x00000080);
        orderHeap_ = null;
        if (orderHeapBuilder_ != null) {
          orderHeapBuilder_.dispose();
          orderHeapBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBLngHeap orderHeap = 8;</code>
       */
      public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeap.Builder getOrderHeapBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getOrderHeapFieldBuilder().getBuilder();
      }
      /**
       * <code>.solver.PBLngHeap orderHeap = 8;</code>
       */
      public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeapOrBuilder getOrderHeapOrBuilder() {
        if (orderHeapBuilder_ != null) {
          return orderHeapBuilder_.getMessageOrBuilder();
        } else {
          return orderHeap_ == null ?
              com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeap.getDefaultInstance() : orderHeap_;
        }
      }
      /**
       * <code>.solver.PBLngHeap orderHeap = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeap, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeap.Builder, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeapOrBuilder> 
          getOrderHeapFieldBuilder() {
        if (orderHeapBuilder_ == null) {
          orderHeapBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeap, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeap.Builder, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBLngHeapOrBuilder>(
                  getOrderHeap(),
                  getParentForChildren(),
                  isClean());
          orderHeap_ = null;
        }
        return orderHeapBuilder_;
      }

      private com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector trail_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder> trailBuilder_;
      /**
       * <code>.collections.PBIntVector trail = 9;</code>
       * @return Whether the trail field is set.
       */
      public boolean hasTrail() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>.collections.PBIntVector trail = 9;</code>
       * @return The trail.
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector getTrail() {
        if (trailBuilder_ == null) {
          return trail_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : trail_;
        } else {
          return trailBuilder_.getMessage();
        }
      }
      /**
       * <code>.collections.PBIntVector trail = 9;</code>
       */
      public Builder setTrail(com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector value) {
        if (trailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trail_ = value;
        } else {
          trailBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBIntVector trail = 9;</code>
       */
      public Builder setTrail(
          com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder builderForValue) {
        if (trailBuilder_ == null) {
          trail_ = builderForValue.build();
        } else {
          trailBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBIntVector trail = 9;</code>
       */
      public Builder mergeTrail(com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector value) {
        if (trailBuilder_ == null) {
          if (((bitField0_ & 0x00000100) != 0) &&
            trail_ != null &&
            trail_ != com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance()) {
            getTrailBuilder().mergeFrom(value);
          } else {
            trail_ = value;
          }
        } else {
          trailBuilder_.mergeFrom(value);
        }
        if (trail_ != null) {
          bitField0_ |= 0x00000100;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.collections.PBIntVector trail = 9;</code>
       */
      public Builder clearTrail() {
        bitField0_ = (bitField0_ & ~0x00000100);
        trail_ = null;
        if (trailBuilder_ != null) {
          trailBuilder_.dispose();
          trailBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBIntVector trail = 9;</code>
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder getTrailBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getTrailFieldBuilder().getBuilder();
      }
      /**
       * <code>.collections.PBIntVector trail = 9;</code>
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder getTrailOrBuilder() {
        if (trailBuilder_ != null) {
          return trailBuilder_.getMessageOrBuilder();
        } else {
          return trail_ == null ?
              com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : trail_;
        }
      }
      /**
       * <code>.collections.PBIntVector trail = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder> 
          getTrailFieldBuilder() {
        if (trailBuilder_ == null) {
          trailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder>(
                  getTrail(),
                  getParentForChildren(),
                  isClean());
          trail_ = null;
        }
        return trailBuilder_;
      }

      private com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector trailLim_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder> trailLimBuilder_;
      /**
       * <code>.collections.PBIntVector trailLim = 10;</code>
       * @return Whether the trailLim field is set.
       */
      public boolean hasTrailLim() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>.collections.PBIntVector trailLim = 10;</code>
       * @return The trailLim.
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector getTrailLim() {
        if (trailLimBuilder_ == null) {
          return trailLim_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : trailLim_;
        } else {
          return trailLimBuilder_.getMessage();
        }
      }
      /**
       * <code>.collections.PBIntVector trailLim = 10;</code>
       */
      public Builder setTrailLim(com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector value) {
        if (trailLimBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trailLim_ = value;
        } else {
          trailLimBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBIntVector trailLim = 10;</code>
       */
      public Builder setTrailLim(
          com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder builderForValue) {
        if (trailLimBuilder_ == null) {
          trailLim_ = builderForValue.build();
        } else {
          trailLimBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBIntVector trailLim = 10;</code>
       */
      public Builder mergeTrailLim(com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector value) {
        if (trailLimBuilder_ == null) {
          if (((bitField0_ & 0x00000200) != 0) &&
            trailLim_ != null &&
            trailLim_ != com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance()) {
            getTrailLimBuilder().mergeFrom(value);
          } else {
            trailLim_ = value;
          }
        } else {
          trailLimBuilder_.mergeFrom(value);
        }
        if (trailLim_ != null) {
          bitField0_ |= 0x00000200;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.collections.PBIntVector trailLim = 10;</code>
       */
      public Builder clearTrailLim() {
        bitField0_ = (bitField0_ & ~0x00000200);
        trailLim_ = null;
        if (trailLimBuilder_ != null) {
          trailLimBuilder_.dispose();
          trailLimBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBIntVector trailLim = 10;</code>
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder getTrailLimBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getTrailLimFieldBuilder().getBuilder();
      }
      /**
       * <code>.collections.PBIntVector trailLim = 10;</code>
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder getTrailLimOrBuilder() {
        if (trailLimBuilder_ != null) {
          return trailLimBuilder_.getMessageOrBuilder();
        } else {
          return trailLim_ == null ?
              com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : trailLim_;
        }
      }
      /**
       * <code>.collections.PBIntVector trailLim = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder> 
          getTrailLimFieldBuilder() {
        if (trailLimBuilder_ == null) {
          trailLimBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder>(
                  getTrailLim(),
                  getParentForChildren(),
                  isClean());
          trailLim_ = null;
        }
        return trailLimBuilder_;
      }

      private com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector model_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector, com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVectorOrBuilder> modelBuilder_;
      /**
       * <code>.collections.PBBooleanVector model = 11;</code>
       * @return Whether the model field is set.
       */
      public boolean hasModel() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>.collections.PBBooleanVector model = 11;</code>
       * @return The model.
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector getModel() {
        if (modelBuilder_ == null) {
          return model_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector.getDefaultInstance() : model_;
        } else {
          return modelBuilder_.getMessage();
        }
      }
      /**
       * <code>.collections.PBBooleanVector model = 11;</code>
       */
      public Builder setModel(com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector value) {
        if (modelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          model_ = value;
        } else {
          modelBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBBooleanVector model = 11;</code>
       */
      public Builder setModel(
          com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector.Builder builderForValue) {
        if (modelBuilder_ == null) {
          model_ = builderForValue.build();
        } else {
          modelBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBBooleanVector model = 11;</code>
       */
      public Builder mergeModel(com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector value) {
        if (modelBuilder_ == null) {
          if (((bitField0_ & 0x00000400) != 0) &&
            model_ != null &&
            model_ != com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector.getDefaultInstance()) {
            getModelBuilder().mergeFrom(value);
          } else {
            model_ = value;
          }
        } else {
          modelBuilder_.mergeFrom(value);
        }
        if (model_ != null) {
          bitField0_ |= 0x00000400;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.collections.PBBooleanVector model = 11;</code>
       */
      public Builder clearModel() {
        bitField0_ = (bitField0_ & ~0x00000400);
        model_ = null;
        if (modelBuilder_ != null) {
          modelBuilder_.dispose();
          modelBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBBooleanVector model = 11;</code>
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector.Builder getModelBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getModelFieldBuilder().getBuilder();
      }
      /**
       * <code>.collections.PBBooleanVector model = 11;</code>
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVectorOrBuilder getModelOrBuilder() {
        if (modelBuilder_ != null) {
          return modelBuilder_.getMessageOrBuilder();
        } else {
          return model_ == null ?
              com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector.getDefaultInstance() : model_;
        }
      }
      /**
       * <code>.collections.PBBooleanVector model = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector, com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVectorOrBuilder> 
          getModelFieldBuilder() {
        if (modelBuilder_ == null) {
          modelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector, com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVectorOrBuilder>(
                  getModel(),
                  getParentForChildren(),
                  isClean());
          model_ = null;
        }
        return modelBuilder_;
      }

      private com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector conflict_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder> conflictBuilder_;
      /**
       * <code>.collections.PBIntVector conflict = 12;</code>
       * @return Whether the conflict field is set.
       */
      public boolean hasConflict() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <code>.collections.PBIntVector conflict = 12;</code>
       * @return The conflict.
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector getConflict() {
        if (conflictBuilder_ == null) {
          return conflict_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : conflict_;
        } else {
          return conflictBuilder_.getMessage();
        }
      }
      /**
       * <code>.collections.PBIntVector conflict = 12;</code>
       */
      public Builder setConflict(com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector value) {
        if (conflictBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          conflict_ = value;
        } else {
          conflictBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBIntVector conflict = 12;</code>
       */
      public Builder setConflict(
          com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder builderForValue) {
        if (conflictBuilder_ == null) {
          conflict_ = builderForValue.build();
        } else {
          conflictBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBIntVector conflict = 12;</code>
       */
      public Builder mergeConflict(com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector value) {
        if (conflictBuilder_ == null) {
          if (((bitField0_ & 0x00000800) != 0) &&
            conflict_ != null &&
            conflict_ != com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance()) {
            getConflictBuilder().mergeFrom(value);
          } else {
            conflict_ = value;
          }
        } else {
          conflictBuilder_.mergeFrom(value);
        }
        if (conflict_ != null) {
          bitField0_ |= 0x00000800;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.collections.PBIntVector conflict = 12;</code>
       */
      public Builder clearConflict() {
        bitField0_ = (bitField0_ & ~0x00000800);
        conflict_ = null;
        if (conflictBuilder_ != null) {
          conflictBuilder_.dispose();
          conflictBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBIntVector conflict = 12;</code>
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder getConflictBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getConflictFieldBuilder().getBuilder();
      }
      /**
       * <code>.collections.PBIntVector conflict = 12;</code>
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder getConflictOrBuilder() {
        if (conflictBuilder_ != null) {
          return conflictBuilder_.getMessageOrBuilder();
        } else {
          return conflict_ == null ?
              com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : conflict_;
        }
      }
      /**
       * <code>.collections.PBIntVector conflict = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder> 
          getConflictFieldBuilder() {
        if (conflictBuilder_ == null) {
          conflictBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder>(
                  getConflict(),
                  getParentForChildren(),
                  isClean());
          conflict_ = null;
        }
        return conflictBuilder_;
      }

      private com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector assumptions_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder> assumptionsBuilder_;
      /**
       * <code>.collections.PBIntVector assumptions = 13;</code>
       * @return Whether the assumptions field is set.
       */
      public boolean hasAssumptions() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>.collections.PBIntVector assumptions = 13;</code>
       * @return The assumptions.
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector getAssumptions() {
        if (assumptionsBuilder_ == null) {
          return assumptions_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : assumptions_;
        } else {
          return assumptionsBuilder_.getMessage();
        }
      }
      /**
       * <code>.collections.PBIntVector assumptions = 13;</code>
       */
      public Builder setAssumptions(com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector value) {
        if (assumptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          assumptions_ = value;
        } else {
          assumptionsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBIntVector assumptions = 13;</code>
       */
      public Builder setAssumptions(
          com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder builderForValue) {
        if (assumptionsBuilder_ == null) {
          assumptions_ = builderForValue.build();
        } else {
          assumptionsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBIntVector assumptions = 13;</code>
       */
      public Builder mergeAssumptions(com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector value) {
        if (assumptionsBuilder_ == null) {
          if (((bitField0_ & 0x00001000) != 0) &&
            assumptions_ != null &&
            assumptions_ != com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance()) {
            getAssumptionsBuilder().mergeFrom(value);
          } else {
            assumptions_ = value;
          }
        } else {
          assumptionsBuilder_.mergeFrom(value);
        }
        if (assumptions_ != null) {
          bitField0_ |= 0x00001000;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.collections.PBIntVector assumptions = 13;</code>
       */
      public Builder clearAssumptions() {
        bitField0_ = (bitField0_ & ~0x00001000);
        assumptions_ = null;
        if (assumptionsBuilder_ != null) {
          assumptionsBuilder_.dispose();
          assumptionsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBIntVector assumptions = 13;</code>
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder getAssumptionsBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getAssumptionsFieldBuilder().getBuilder();
      }
      /**
       * <code>.collections.PBIntVector assumptions = 13;</code>
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder getAssumptionsOrBuilder() {
        if (assumptionsBuilder_ != null) {
          return assumptionsBuilder_.getMessageOrBuilder();
        } else {
          return assumptions_ == null ?
              com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : assumptions_;
        }
      }
      /**
       * <code>.collections.PBIntVector assumptions = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder> 
          getAssumptionsFieldBuilder() {
        if (assumptionsBuilder_ == null) {
          assumptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder>(
                  getAssumptions(),
                  getParentForChildren(),
                  isClean());
          assumptions_ = null;
        }
        return assumptionsBuilder_;
      }

      private com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector seen_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector, com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVectorOrBuilder> seenBuilder_;
      /**
       * <code>.collections.PBBooleanVector seen = 14;</code>
       * @return Whether the seen field is set.
       */
      public boolean hasSeen() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <code>.collections.PBBooleanVector seen = 14;</code>
       * @return The seen.
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector getSeen() {
        if (seenBuilder_ == null) {
          return seen_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector.getDefaultInstance() : seen_;
        } else {
          return seenBuilder_.getMessage();
        }
      }
      /**
       * <code>.collections.PBBooleanVector seen = 14;</code>
       */
      public Builder setSeen(com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector value) {
        if (seenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          seen_ = value;
        } else {
          seenBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBBooleanVector seen = 14;</code>
       */
      public Builder setSeen(
          com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector.Builder builderForValue) {
        if (seenBuilder_ == null) {
          seen_ = builderForValue.build();
        } else {
          seenBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBBooleanVector seen = 14;</code>
       */
      public Builder mergeSeen(com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector value) {
        if (seenBuilder_ == null) {
          if (((bitField0_ & 0x00002000) != 0) &&
            seen_ != null &&
            seen_ != com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector.getDefaultInstance()) {
            getSeenBuilder().mergeFrom(value);
          } else {
            seen_ = value;
          }
        } else {
          seenBuilder_.mergeFrom(value);
        }
        if (seen_ != null) {
          bitField0_ |= 0x00002000;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.collections.PBBooleanVector seen = 14;</code>
       */
      public Builder clearSeen() {
        bitField0_ = (bitField0_ & ~0x00002000);
        seen_ = null;
        if (seenBuilder_ != null) {
          seenBuilder_.dispose();
          seenBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBBooleanVector seen = 14;</code>
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector.Builder getSeenBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getSeenFieldBuilder().getBuilder();
      }
      /**
       * <code>.collections.PBBooleanVector seen = 14;</code>
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVectorOrBuilder getSeenOrBuilder() {
        if (seenBuilder_ != null) {
          return seenBuilder_.getMessageOrBuilder();
        } else {
          return seen_ == null ?
              com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector.getDefaultInstance() : seen_;
        }
      }
      /**
       * <code>.collections.PBBooleanVector seen = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector, com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVectorOrBuilder> 
          getSeenFieldBuilder() {
        if (seenBuilder_ == null) {
          seenBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector, com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBBooleanVectorOrBuilder>(
                  getSeen(),
                  getParentForChildren(),
                  isClean());
          seen_ = null;
        }
        return seenBuilder_;
      }

      private int analyzeBtLevel_ ;
      /**
       * <code>int32 analyzeBtLevel = 15;</code>
       * @return The analyzeBtLevel.
       */
      @java.lang.Override
      public int getAnalyzeBtLevel() {
        return analyzeBtLevel_;
      }
      /**
       * <code>int32 analyzeBtLevel = 15;</code>
       * @param value The analyzeBtLevel to set.
       * @return This builder for chaining.
       */
      public Builder setAnalyzeBtLevel(int value) {

        analyzeBtLevel_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>int32 analyzeBtLevel = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearAnalyzeBtLevel() {
        bitField0_ = (bitField0_ & ~0x00004000);
        analyzeBtLevel_ = 0;
        onChanged();
        return this;
      }

      private double claInc_ ;
      /**
       * <code>double claInc = 16;</code>
       * @return The claInc.
       */
      @java.lang.Override
      public double getClaInc() {
        return claInc_;
      }
      /**
       * <code>double claInc = 16;</code>
       * @param value The claInc to set.
       * @return This builder for chaining.
       */
      public Builder setClaInc(double value) {

        claInc_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>double claInc = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearClaInc() {
        bitField0_ = (bitField0_ & ~0x00008000);
        claInc_ = 0D;
        onChanged();
        return this;
      }

      private int simpDBAssigns_ ;
      /**
       * <code>int32 simpDBAssigns = 17;</code>
       * @return The simpDBAssigns.
       */
      @java.lang.Override
      public int getSimpDBAssigns() {
        return simpDBAssigns_;
      }
      /**
       * <code>int32 simpDBAssigns = 17;</code>
       * @param value The simpDBAssigns to set.
       * @return This builder for chaining.
       */
      public Builder setSimpDBAssigns(int value) {

        simpDBAssigns_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <code>int32 simpDBAssigns = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearSimpDBAssigns() {
        bitField0_ = (bitField0_ & ~0x00010000);
        simpDBAssigns_ = 0;
        onChanged();
        return this;
      }

      private int simpDBProps_ ;
      /**
       * <code>int32 simpDBProps = 18;</code>
       * @return The simpDBProps.
       */
      @java.lang.Override
      public int getSimpDBProps() {
        return simpDBProps_;
      }
      /**
       * <code>int32 simpDBProps = 18;</code>
       * @param value The simpDBProps to set.
       * @return This builder for chaining.
       */
      public Builder setSimpDBProps(int value) {

        simpDBProps_ = value;
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <code>int32 simpDBProps = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearSimpDBProps() {
        bitField0_ = (bitField0_ & ~0x00020000);
        simpDBProps_ = 0;
        onChanged();
        return this;
      }

      private int clausesLiterals_ ;
      /**
       * <code>int32 clausesLiterals = 19;</code>
       * @return The clausesLiterals.
       */
      @java.lang.Override
      public int getClausesLiterals() {
        return clausesLiterals_;
      }
      /**
       * <code>int32 clausesLiterals = 19;</code>
       * @param value The clausesLiterals to set.
       * @return This builder for chaining.
       */
      public Builder setClausesLiterals(int value) {

        clausesLiterals_ = value;
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <code>int32 clausesLiterals = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearClausesLiterals() {
        bitField0_ = (bitField0_ & ~0x00040000);
        clausesLiterals_ = 0;
        onChanged();
        return this;
      }

      private int learntsLiterals_ ;
      /**
       * <code>int32 learntsLiterals = 20;</code>
       * @return The learntsLiterals.
       */
      @java.lang.Override
      public int getLearntsLiterals() {
        return learntsLiterals_;
      }
      /**
       * <code>int32 learntsLiterals = 20;</code>
       * @param value The learntsLiterals to set.
       * @return This builder for chaining.
       */
      public Builder setLearntsLiterals(int value) {

        learntsLiterals_ = value;
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <code>int32 learntsLiterals = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearLearntsLiterals() {
        bitField0_ = (bitField0_ & ~0x00080000);
        learntsLiterals_ = 0;
        onChanged();
        return this;
      }

      private double varDecay_ ;
      /**
       * <code>double varDecay = 21;</code>
       * @return The varDecay.
       */
      @java.lang.Override
      public double getVarDecay() {
        return varDecay_;
      }
      /**
       * <code>double varDecay = 21;</code>
       * @param value The varDecay to set.
       * @return This builder for chaining.
       */
      public Builder setVarDecay(double value) {

        varDecay_ = value;
        bitField0_ |= 0x00100000;
        onChanged();
        return this;
      }
      /**
       * <code>double varDecay = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearVarDecay() {
        bitField0_ = (bitField0_ & ~0x00100000);
        varDecay_ = 0D;
        onChanged();
        return this;
      }

      private double varInc_ ;
      /**
       * <code>double varInc = 22;</code>
       * @return The varInc.
       */
      @java.lang.Override
      public double getVarInc() {
        return varInc_;
      }
      /**
       * <code>double varInc = 22;</code>
       * @param value The varInc to set.
       * @return This builder for chaining.
       */
      public Builder setVarInc(double value) {

        varInc_ = value;
        bitField0_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <code>double varInc = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearVarInc() {
        bitField0_ = (bitField0_ & ~0x00200000);
        varInc_ = 0D;
        onChanged();
        return this;
      }

      private int ccminMode_ = 0;
      /**
       * <code>.solver.PBClauseMinimization ccminMode = 23;</code>
       * @return The enum numeric value on the wire for ccminMode.
       */
      @java.lang.Override public int getCcminModeValue() {
        return ccminMode_;
      }
      /**
       * <code>.solver.PBClauseMinimization ccminMode = 23;</code>
       * @param value The enum numeric value on the wire for ccminMode to set.
       * @return This builder for chaining.
       */
      public Builder setCcminModeValue(int value) {
        ccminMode_ = value;
        bitField0_ |= 0x00400000;
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBClauseMinimization ccminMode = 23;</code>
       * @return The ccminMode.
       */
      @java.lang.Override
      public com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization getCcminMode() {
        com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization result = com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization.forNumber(ccminMode_);
        return result == null ? com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization.UNRECOGNIZED : result;
      }
      /**
       * <code>.solver.PBClauseMinimization ccminMode = 23;</code>
       * @param value The ccminMode to set.
       * @return This builder for chaining.
       */
      public Builder setCcminMode(com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00400000;
        ccminMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBClauseMinimization ccminMode = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearCcminMode() {
        bitField0_ = (bitField0_ & ~0x00400000);
        ccminMode_ = 0;
        onChanged();
        return this;
      }

      private int restartFirst_ ;
      /**
       * <code>int32 restartFirst = 24;</code>
       * @return The restartFirst.
       */
      @java.lang.Override
      public int getRestartFirst() {
        return restartFirst_;
      }
      /**
       * <code>int32 restartFirst = 24;</code>
       * @param value The restartFirst to set.
       * @return This builder for chaining.
       */
      public Builder setRestartFirst(int value) {

        restartFirst_ = value;
        bitField0_ |= 0x00800000;
        onChanged();
        return this;
      }
      /**
       * <code>int32 restartFirst = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearRestartFirst() {
        bitField0_ = (bitField0_ & ~0x00800000);
        restartFirst_ = 0;
        onChanged();
        return this;
      }

      private double restartInc_ ;
      /**
       * <code>double restartInc = 25;</code>
       * @return The restartInc.
       */
      @java.lang.Override
      public double getRestartInc() {
        return restartInc_;
      }
      /**
       * <code>double restartInc = 25;</code>
       * @param value The restartInc to set.
       * @return This builder for chaining.
       */
      public Builder setRestartInc(double value) {

        restartInc_ = value;
        bitField0_ |= 0x01000000;
        onChanged();
        return this;
      }
      /**
       * <code>double restartInc = 25;</code>
       * @return This builder for chaining.
       */
      public Builder clearRestartInc() {
        bitField0_ = (bitField0_ & ~0x01000000);
        restartInc_ = 0D;
        onChanged();
        return this;
      }

      private double clauseDecay_ ;
      /**
       * <code>double clauseDecay = 26;</code>
       * @return The clauseDecay.
       */
      @java.lang.Override
      public double getClauseDecay() {
        return clauseDecay_;
      }
      /**
       * <code>double clauseDecay = 26;</code>
       * @param value The clauseDecay to set.
       * @return This builder for chaining.
       */
      public Builder setClauseDecay(double value) {

        clauseDecay_ = value;
        bitField0_ |= 0x02000000;
        onChanged();
        return this;
      }
      /**
       * <code>double clauseDecay = 26;</code>
       * @return This builder for chaining.
       */
      public Builder clearClauseDecay() {
        bitField0_ = (bitField0_ & ~0x02000000);
        clauseDecay_ = 0D;
        onChanged();
        return this;
      }

      private boolean shouldRemoveSatsisfied_ ;
      /**
       * <code>bool shouldRemoveSatsisfied = 27;</code>
       * @return The shouldRemoveSatsisfied.
       */
      @java.lang.Override
      public boolean getShouldRemoveSatsisfied() {
        return shouldRemoveSatsisfied_;
      }
      /**
       * <code>bool shouldRemoveSatsisfied = 27;</code>
       * @param value The shouldRemoveSatsisfied to set.
       * @return This builder for chaining.
       */
      public Builder setShouldRemoveSatsisfied(boolean value) {

        shouldRemoveSatsisfied_ = value;
        bitField0_ |= 0x04000000;
        onChanged();
        return this;
      }
      /**
       * <code>bool shouldRemoveSatsisfied = 27;</code>
       * @return This builder for chaining.
       */
      public Builder clearShouldRemoveSatsisfied() {
        bitField0_ = (bitField0_ & ~0x04000000);
        shouldRemoveSatsisfied_ = false;
        onChanged();
        return this;
      }

      private double learntsizeFactor_ ;
      /**
       * <code>double learntsizeFactor = 28;</code>
       * @return The learntsizeFactor.
       */
      @java.lang.Override
      public double getLearntsizeFactor() {
        return learntsizeFactor_;
      }
      /**
       * <code>double learntsizeFactor = 28;</code>
       * @param value The learntsizeFactor to set.
       * @return This builder for chaining.
       */
      public Builder setLearntsizeFactor(double value) {

        learntsizeFactor_ = value;
        bitField0_ |= 0x08000000;
        onChanged();
        return this;
      }
      /**
       * <code>double learntsizeFactor = 28;</code>
       * @return This builder for chaining.
       */
      public Builder clearLearntsizeFactor() {
        bitField0_ = (bitField0_ & ~0x08000000);
        learntsizeFactor_ = 0D;
        onChanged();
        return this;
      }

      private double learntsizeInc_ ;
      /**
       * <code>double learntsizeInc = 29;</code>
       * @return The learntsizeInc.
       */
      @java.lang.Override
      public double getLearntsizeInc() {
        return learntsizeInc_;
      }
      /**
       * <code>double learntsizeInc = 29;</code>
       * @param value The learntsizeInc to set.
       * @return This builder for chaining.
       */
      public Builder setLearntsizeInc(double value) {

        learntsizeInc_ = value;
        bitField0_ |= 0x10000000;
        onChanged();
        return this;
      }
      /**
       * <code>double learntsizeInc = 29;</code>
       * @return This builder for chaining.
       */
      public Builder clearLearntsizeInc() {
        bitField0_ = (bitField0_ & ~0x10000000);
        learntsizeInc_ = 0D;
        onChanged();
        return this;
      }

      private boolean incremental_ ;
      /**
       * <code>bool incremental = 30;</code>
       * @return The incremental.
       */
      @java.lang.Override
      public boolean getIncremental() {
        return incremental_;
      }
      /**
       * <code>bool incremental = 30;</code>
       * @param value The incremental to set.
       * @return This builder for chaining.
       */
      public Builder setIncremental(boolean value) {

        incremental_ = value;
        bitField0_ |= 0x20000000;
        onChanged();
        return this;
      }
      /**
       * <code>bool incremental = 30;</code>
       * @return This builder for chaining.
       */
      public Builder clearIncremental() {
        bitField0_ = (bitField0_ & ~0x20000000);
        incremental_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> name2Idx_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
          internalGetName2Idx() {
        if (name2Idx_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Name2IdxDefaultEntryHolder.defaultEntry);
        }
        return name2Idx_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
          internalGetMutableName2Idx() {
        if (name2Idx_ == null) {
          name2Idx_ = com.google.protobuf.MapField.newMapField(
              Name2IdxDefaultEntryHolder.defaultEntry);
        }
        if (!name2Idx_.isMutable()) {
          name2Idx_ = name2Idx_.copy();
        }
        bitField0_ |= 0x40000000;
        onChanged();
        return name2Idx_;
      }
      public int getName2IdxCount() {
        return internalGetName2Idx().getMap().size();
      }
      /**
       * <code>map&lt;string, int32&gt; name2idx = 31;</code>
       */
      @java.lang.Override
      public boolean containsName2Idx(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetName2Idx().getMap().containsKey(key);
      }
      /**
       * Use {@link #getName2IdxMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getName2Idx() {
        return getName2IdxMap();
      }
      /**
       * <code>map&lt;string, int32&gt; name2idx = 31;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.Integer> getName2IdxMap() {
        return internalGetName2Idx().getMap();
      }
      /**
       * <code>map&lt;string, int32&gt; name2idx = 31;</code>
       */
      @java.lang.Override
      public int getName2IdxOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetName2Idx().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, int32&gt; name2idx = 31;</code>
       */
      @java.lang.Override
      public int getName2IdxOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetName2Idx().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearName2Idx() {
        bitField0_ = (bitField0_ & ~0x40000000);
        internalGetMutableName2Idx().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; name2idx = 31;</code>
       */
      public Builder removeName2Idx(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableName2Idx().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
          getMutableName2Idx() {
        bitField0_ |= 0x40000000;
        return internalGetMutableName2Idx().getMutableMap();
      }
      /**
       * <code>map&lt;string, int32&gt; name2idx = 31;</code>
       */
      public Builder putName2Idx(
          java.lang.String key,
          int value) {
        if (key == null) { throw new NullPointerException("map key"); }

        internalGetMutableName2Idx().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x40000000;
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; name2idx = 31;</code>
       */
      public Builder putAllName2Idx(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableName2Idx().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x40000000;
        return this;
      }

      private com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVector pgProof_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVector, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVectorOrBuilder> pgProofBuilder_;
      /**
       * <code>.collections.PBIntVectorVector pgProof = 32;</code>
       * @return Whether the pgProof field is set.
       */
      public boolean hasPgProof() {
        return ((bitField0_ & 0x80000000) != 0);
      }
      /**
       * <code>.collections.PBIntVectorVector pgProof = 32;</code>
       * @return The pgProof.
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVector getPgProof() {
        if (pgProofBuilder_ == null) {
          return pgProof_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVector.getDefaultInstance() : pgProof_;
        } else {
          return pgProofBuilder_.getMessage();
        }
      }
      /**
       * <code>.collections.PBIntVectorVector pgProof = 32;</code>
       */
      public Builder setPgProof(com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVector value) {
        if (pgProofBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pgProof_ = value;
        } else {
          pgProofBuilder_.setMessage(value);
        }
        bitField0_ |= 0x80000000;
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBIntVectorVector pgProof = 32;</code>
       */
      public Builder setPgProof(
          com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVector.Builder builderForValue) {
        if (pgProofBuilder_ == null) {
          pgProof_ = builderForValue.build();
        } else {
          pgProofBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x80000000;
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBIntVectorVector pgProof = 32;</code>
       */
      public Builder mergePgProof(com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVector value) {
        if (pgProofBuilder_ == null) {
          if (((bitField0_ & 0x80000000) != 0) &&
            pgProof_ != null &&
            pgProof_ != com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVector.getDefaultInstance()) {
            getPgProofBuilder().mergeFrom(value);
          } else {
            pgProof_ = value;
          }
        } else {
          pgProofBuilder_.mergeFrom(value);
        }
        if (pgProof_ != null) {
          bitField0_ |= 0x80000000;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.collections.PBIntVectorVector pgProof = 32;</code>
       */
      public Builder clearPgProof() {
        bitField0_ = (bitField0_ & ~0x80000000);
        pgProof_ = null;
        if (pgProofBuilder_ != null) {
          pgProofBuilder_.dispose();
          pgProofBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBIntVectorVector pgProof = 32;</code>
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVector.Builder getPgProofBuilder() {
        bitField0_ |= 0x80000000;
        onChanged();
        return getPgProofFieldBuilder().getBuilder();
      }
      /**
       * <code>.collections.PBIntVectorVector pgProof = 32;</code>
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVectorOrBuilder getPgProofOrBuilder() {
        if (pgProofBuilder_ != null) {
          return pgProofBuilder_.getMessageOrBuilder();
        } else {
          return pgProof_ == null ?
              com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVector.getDefaultInstance() : pgProof_;
        }
      }
      /**
       * <code>.collections.PBIntVectorVector pgProof = 32;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVector, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVectorOrBuilder> 
          getPgProofFieldBuilder() {
        if (pgProofBuilder_ == null) {
          pgProofBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVector, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorVectorOrBuilder>(
                  getPgProof(),
                  getParentForChildren(),
                  isClean());
          pgProof_ = null;
        }
        return pgProofBuilder_;
      }

      private java.util.List<com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation> pgOriginalClauses_ =
        java.util.Collections.emptyList();
      private void ensurePgOriginalClausesIsMutable() {
        if (!((bitField1_ & 0x00000001) != 0)) {
          pgOriginalClauses_ = new java.util.ArrayList<com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation>(pgOriginalClauses_);
          bitField1_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation.Builder, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformationOrBuilder> pgOriginalClausesBuilder_;

      /**
       * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
       */
      public java.util.List<com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation> getPgOriginalClausesList() {
        if (pgOriginalClausesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pgOriginalClauses_);
        } else {
          return pgOriginalClausesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
       */
      public int getPgOriginalClausesCount() {
        if (pgOriginalClausesBuilder_ == null) {
          return pgOriginalClauses_.size();
        } else {
          return pgOriginalClausesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
       */
      public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation getPgOriginalClauses(int index) {
        if (pgOriginalClausesBuilder_ == null) {
          return pgOriginalClauses_.get(index);
        } else {
          return pgOriginalClausesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
       */
      public Builder setPgOriginalClauses(
          int index, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation value) {
        if (pgOriginalClausesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePgOriginalClausesIsMutable();
          pgOriginalClauses_.set(index, value);
          onChanged();
        } else {
          pgOriginalClausesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
       */
      public Builder setPgOriginalClauses(
          int index, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation.Builder builderForValue) {
        if (pgOriginalClausesBuilder_ == null) {
          ensurePgOriginalClausesIsMutable();
          pgOriginalClauses_.set(index, builderForValue.build());
          onChanged();
        } else {
          pgOriginalClausesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
       */
      public Builder addPgOriginalClauses(com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation value) {
        if (pgOriginalClausesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePgOriginalClausesIsMutable();
          pgOriginalClauses_.add(value);
          onChanged();
        } else {
          pgOriginalClausesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
       */
      public Builder addPgOriginalClauses(
          int index, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation value) {
        if (pgOriginalClausesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePgOriginalClausesIsMutable();
          pgOriginalClauses_.add(index, value);
          onChanged();
        } else {
          pgOriginalClausesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
       */
      public Builder addPgOriginalClauses(
          com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation.Builder builderForValue) {
        if (pgOriginalClausesBuilder_ == null) {
          ensurePgOriginalClausesIsMutable();
          pgOriginalClauses_.add(builderForValue.build());
          onChanged();
        } else {
          pgOriginalClausesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
       */
      public Builder addPgOriginalClauses(
          int index, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation.Builder builderForValue) {
        if (pgOriginalClausesBuilder_ == null) {
          ensurePgOriginalClausesIsMutable();
          pgOriginalClauses_.add(index, builderForValue.build());
          onChanged();
        } else {
          pgOriginalClausesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
       */
      public Builder addAllPgOriginalClauses(
          java.lang.Iterable<? extends com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation> values) {
        if (pgOriginalClausesBuilder_ == null) {
          ensurePgOriginalClausesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, pgOriginalClauses_);
          onChanged();
        } else {
          pgOriginalClausesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
       */
      public Builder clearPgOriginalClauses() {
        if (pgOriginalClausesBuilder_ == null) {
          pgOriginalClauses_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000001);
          onChanged();
        } else {
          pgOriginalClausesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
       */
      public Builder removePgOriginalClauses(int index) {
        if (pgOriginalClausesBuilder_ == null) {
          ensurePgOriginalClausesIsMutable();
          pgOriginalClauses_.remove(index);
          onChanged();
        } else {
          pgOriginalClausesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
       */
      public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation.Builder getPgOriginalClausesBuilder(
          int index) {
        return getPgOriginalClausesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
       */
      public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformationOrBuilder getPgOriginalClausesOrBuilder(
          int index) {
        if (pgOriginalClausesBuilder_ == null) {
          return pgOriginalClauses_.get(index);  } else {
          return pgOriginalClausesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
       */
      public java.util.List<? extends com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformationOrBuilder> 
           getPgOriginalClausesOrBuilderList() {
        if (pgOriginalClausesBuilder_ != null) {
          return pgOriginalClausesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pgOriginalClauses_);
        }
      }
      /**
       * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
       */
      public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation.Builder addPgOriginalClausesBuilder() {
        return getPgOriginalClausesFieldBuilder().addBuilder(
            com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
       */
      public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation.Builder addPgOriginalClausesBuilder(
          int index) {
        return getPgOriginalClausesFieldBuilder().addBuilder(
            index, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .solver.PBProofInformation pgOriginalClauses = 33;</code>
       */
      public java.util.List<com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation.Builder> 
           getPgOriginalClausesBuilderList() {
        return getPgOriginalClausesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation.Builder, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformationOrBuilder> 
          getPgOriginalClausesFieldBuilder() {
        if (pgOriginalClausesBuilder_ == null) {
          pgOriginalClausesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformation.Builder, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBProofInformationOrBuilder>(
                  pgOriginalClauses_,
                  ((bitField1_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          pgOriginalClauses_ = null;
        }
        return pgOriginalClausesBuilder_;
      }

      private com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector backboneCandidates_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder> backboneCandidatesBuilder_;
      /**
       * <code>.collections.PBIntVector backboneCandidates = 34;</code>
       * @return Whether the backboneCandidates field is set.
       */
      public boolean hasBackboneCandidates() {
        return ((bitField1_ & 0x00000002) != 0);
      }
      /**
       * <code>.collections.PBIntVector backboneCandidates = 34;</code>
       * @return The backboneCandidates.
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector getBackboneCandidates() {
        if (backboneCandidatesBuilder_ == null) {
          return backboneCandidates_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : backboneCandidates_;
        } else {
          return backboneCandidatesBuilder_.getMessage();
        }
      }
      /**
       * <code>.collections.PBIntVector backboneCandidates = 34;</code>
       */
      public Builder setBackboneCandidates(com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector value) {
        if (backboneCandidatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          backboneCandidates_ = value;
        } else {
          backboneCandidatesBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBIntVector backboneCandidates = 34;</code>
       */
      public Builder setBackboneCandidates(
          com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder builderForValue) {
        if (backboneCandidatesBuilder_ == null) {
          backboneCandidates_ = builderForValue.build();
        } else {
          backboneCandidatesBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBIntVector backboneCandidates = 34;</code>
       */
      public Builder mergeBackboneCandidates(com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector value) {
        if (backboneCandidatesBuilder_ == null) {
          if (((bitField1_ & 0x00000002) != 0) &&
            backboneCandidates_ != null &&
            backboneCandidates_ != com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance()) {
            getBackboneCandidatesBuilder().mergeFrom(value);
          } else {
            backboneCandidates_ = value;
          }
        } else {
          backboneCandidatesBuilder_.mergeFrom(value);
        }
        if (backboneCandidates_ != null) {
          bitField1_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.collections.PBIntVector backboneCandidates = 34;</code>
       */
      public Builder clearBackboneCandidates() {
        bitField1_ = (bitField1_ & ~0x00000002);
        backboneCandidates_ = null;
        if (backboneCandidatesBuilder_ != null) {
          backboneCandidatesBuilder_.dispose();
          backboneCandidatesBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBIntVector backboneCandidates = 34;</code>
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder getBackboneCandidatesBuilder() {
        bitField1_ |= 0x00000002;
        onChanged();
        return getBackboneCandidatesFieldBuilder().getBuilder();
      }
      /**
       * <code>.collections.PBIntVector backboneCandidates = 34;</code>
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder getBackboneCandidatesOrBuilder() {
        if (backboneCandidatesBuilder_ != null) {
          return backboneCandidatesBuilder_.getMessageOrBuilder();
        } else {
          return backboneCandidates_ == null ?
              com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : backboneCandidates_;
        }
      }
      /**
       * <code>.collections.PBIntVector backboneCandidates = 34;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder> 
          getBackboneCandidatesFieldBuilder() {
        if (backboneCandidatesBuilder_ == null) {
          backboneCandidatesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder>(
                  getBackboneCandidates(),
                  getParentForChildren(),
                  isClean());
          backboneCandidates_ = null;
        }
        return backboneCandidatesBuilder_;
      }

      private com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector backboneAssumptions_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder> backboneAssumptionsBuilder_;
      /**
       * <code>.collections.PBIntVector backboneAssumptions = 35;</code>
       * @return Whether the backboneAssumptions field is set.
       */
      public boolean hasBackboneAssumptions() {
        return ((bitField1_ & 0x00000004) != 0);
      }
      /**
       * <code>.collections.PBIntVector backboneAssumptions = 35;</code>
       * @return The backboneAssumptions.
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector getBackboneAssumptions() {
        if (backboneAssumptionsBuilder_ == null) {
          return backboneAssumptions_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : backboneAssumptions_;
        } else {
          return backboneAssumptionsBuilder_.getMessage();
        }
      }
      /**
       * <code>.collections.PBIntVector backboneAssumptions = 35;</code>
       */
      public Builder setBackboneAssumptions(com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector value) {
        if (backboneAssumptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          backboneAssumptions_ = value;
        } else {
          backboneAssumptionsBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBIntVector backboneAssumptions = 35;</code>
       */
      public Builder setBackboneAssumptions(
          com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder builderForValue) {
        if (backboneAssumptionsBuilder_ == null) {
          backboneAssumptions_ = builderForValue.build();
        } else {
          backboneAssumptionsBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBIntVector backboneAssumptions = 35;</code>
       */
      public Builder mergeBackboneAssumptions(com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector value) {
        if (backboneAssumptionsBuilder_ == null) {
          if (((bitField1_ & 0x00000004) != 0) &&
            backboneAssumptions_ != null &&
            backboneAssumptions_ != com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance()) {
            getBackboneAssumptionsBuilder().mergeFrom(value);
          } else {
            backboneAssumptions_ = value;
          }
        } else {
          backboneAssumptionsBuilder_.mergeFrom(value);
        }
        if (backboneAssumptions_ != null) {
          bitField1_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.collections.PBIntVector backboneAssumptions = 35;</code>
       */
      public Builder clearBackboneAssumptions() {
        bitField1_ = (bitField1_ & ~0x00000004);
        backboneAssumptions_ = null;
        if (backboneAssumptionsBuilder_ != null) {
          backboneAssumptionsBuilder_.dispose();
          backboneAssumptionsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBIntVector backboneAssumptions = 35;</code>
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder getBackboneAssumptionsBuilder() {
        bitField1_ |= 0x00000004;
        onChanged();
        return getBackboneAssumptionsFieldBuilder().getBuilder();
      }
      /**
       * <code>.collections.PBIntVector backboneAssumptions = 35;</code>
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder getBackboneAssumptionsOrBuilder() {
        if (backboneAssumptionsBuilder_ != null) {
          return backboneAssumptionsBuilder_.getMessageOrBuilder();
        } else {
          return backboneAssumptions_ == null ?
              com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : backboneAssumptions_;
        }
      }
      /**
       * <code>.collections.PBIntVector backboneAssumptions = 35;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder> 
          getBackboneAssumptionsFieldBuilder() {
        if (backboneAssumptionsBuilder_ == null) {
          backboneAssumptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder>(
                  getBackboneAssumptions(),
                  getParentForChildren(),
                  isClean());
          backboneAssumptions_ = null;
        }
        return backboneAssumptionsBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> backboneMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetBackboneMap() {
        if (backboneMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              BackboneMapDefaultEntryHolder.defaultEntry);
        }
        return backboneMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetMutableBackboneMap() {
        if (backboneMap_ == null) {
          backboneMap_ = com.google.protobuf.MapField.newMapField(
              BackboneMapDefaultEntryHolder.defaultEntry);
        }
        if (!backboneMap_.isMutable()) {
          backboneMap_ = backboneMap_.copy();
        }
        bitField1_ |= 0x00000008;
        onChanged();
        return backboneMap_;
      }
      public int getBackboneMapCount() {
        return internalGetBackboneMap().getMap().size();
      }
      /**
       * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
       */
      @java.lang.Override
      public boolean containsBackboneMap(
          int key) {

        return internalGetBackboneMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getBackboneMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBTristate>
      getBackboneMap() {
        return getBackboneMapMap();
      }
      /**
       * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBTristate>
      getBackboneMapMap() {
        return internalGetAdaptedBackboneMapMap(
            internalGetBackboneMap().getMap());}
      /**
       * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
       */
      @java.lang.Override
      public /* nullable */
com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBTristate getBackboneMapOrDefault(
          int key,
          /* nullable */
com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBTristate defaultValue) {

        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetBackboneMap().getMap();
        return map.containsKey(key)
               ? backboneMapValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
       */
      @java.lang.Override
      public com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBTristate getBackboneMapOrThrow(
          int key) {

        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetBackboneMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return backboneMapValueConverter.doForward(map.get(key));
      }
      /**
       * Use {@link #getBackboneMapValueMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getBackboneMapValue() {
        return getBackboneMapValueMap();
      }
      /**
       * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getBackboneMapValueMap() {
        return internalGetBackboneMap().getMap();
      }
      /**
       * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
       */
      @java.lang.Override
      public int getBackboneMapValueOrDefault(
          int key,
          int defaultValue) {

        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetBackboneMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
       */
      @java.lang.Override
      public int getBackboneMapValueOrThrow(
          int key) {

        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetBackboneMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearBackboneMap() {
        bitField1_ = (bitField1_ & ~0x00000008);
        internalGetMutableBackboneMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
       */
      public Builder removeBackboneMap(
          int key) {

        internalGetMutableBackboneMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBTristate>
          getMutableBackboneMap() {
        bitField1_ |= 0x00000008;
        return internalGetAdaptedBackboneMapMap(
             internalGetMutableBackboneMap().getMutableMap());
      }
      /**
       * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
       */
      public Builder putBackboneMap(
          int key,
          com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBTristate value) {


        internalGetMutableBackboneMap().getMutableMap()
            .put(key, backboneMapValueConverter.doBackward(value));
        bitField1_ |= 0x00000008;
        return this;
      }
      /**
       * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
       */
      public Builder putAllBackboneMap(
          java.util.Map<java.lang.Integer, com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.PBTristate> values) {
        internalGetAdaptedBackboneMapMap(
            internalGetMutableBackboneMap().getMutableMap())
                .putAll(values);
        bitField1_ |= 0x00000008;
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableBackboneMapValue() {
        bitField1_ |= 0x00000008;
        return internalGetMutableBackboneMap().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
       */
      public Builder putBackboneMapValue(
          int key,
          int value) {


        internalGetMutableBackboneMap().getMutableMap()
            .put(key, value);
        bitField1_ |= 0x00000008;
        return this;
      }
      /**
       * <code>map&lt;int32, .solver.PBTristate&gt; backboneMap = 36;</code>
       */
      public Builder putAllBackboneMapValue(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableBackboneMap().getMutableMap()
            .putAll(values);
        bitField1_ |= 0x00000008;
        return this;
      }

      private boolean computingBackbone_ ;
      /**
       * <code>bool computingBackbone = 37;</code>
       * @return The computingBackbone.
       */
      @java.lang.Override
      public boolean getComputingBackbone() {
        return computingBackbone_;
      }
      /**
       * <code>bool computingBackbone = 37;</code>
       * @param value The computingBackbone to set.
       * @return This builder for chaining.
       */
      public Builder setComputingBackbone(boolean value) {

        computingBackbone_ = value;
        bitField1_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>bool computingBackbone = 37;</code>
       * @return This builder for chaining.
       */
      public Builder clearComputingBackbone() {
        bitField1_ = (bitField1_ & ~0x00000010);
        computingBackbone_ = false;
        onChanged();
        return this;
      }

      private com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector selectionOrder_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder> selectionOrderBuilder_;
      /**
       * <code>.collections.PBIntVector selectionOrder = 38;</code>
       * @return Whether the selectionOrder field is set.
       */
      public boolean hasSelectionOrder() {
        return ((bitField1_ & 0x00000020) != 0);
      }
      /**
       * <code>.collections.PBIntVector selectionOrder = 38;</code>
       * @return The selectionOrder.
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector getSelectionOrder() {
        if (selectionOrderBuilder_ == null) {
          return selectionOrder_ == null ? com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : selectionOrder_;
        } else {
          return selectionOrderBuilder_.getMessage();
        }
      }
      /**
       * <code>.collections.PBIntVector selectionOrder = 38;</code>
       */
      public Builder setSelectionOrder(com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector value) {
        if (selectionOrderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          selectionOrder_ = value;
        } else {
          selectionOrderBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBIntVector selectionOrder = 38;</code>
       */
      public Builder setSelectionOrder(
          com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder builderForValue) {
        if (selectionOrderBuilder_ == null) {
          selectionOrder_ = builderForValue.build();
        } else {
          selectionOrderBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBIntVector selectionOrder = 38;</code>
       */
      public Builder mergeSelectionOrder(com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector value) {
        if (selectionOrderBuilder_ == null) {
          if (((bitField1_ & 0x00000020) != 0) &&
            selectionOrder_ != null &&
            selectionOrder_ != com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance()) {
            getSelectionOrderBuilder().mergeFrom(value);
          } else {
            selectionOrder_ = value;
          }
        } else {
          selectionOrderBuilder_.mergeFrom(value);
        }
        if (selectionOrder_ != null) {
          bitField1_ |= 0x00000020;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.collections.PBIntVector selectionOrder = 38;</code>
       */
      public Builder clearSelectionOrder() {
        bitField1_ = (bitField1_ & ~0x00000020);
        selectionOrder_ = null;
        if (selectionOrderBuilder_ != null) {
          selectionOrderBuilder_.dispose();
          selectionOrderBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.collections.PBIntVector selectionOrder = 38;</code>
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder getSelectionOrderBuilder() {
        bitField1_ |= 0x00000020;
        onChanged();
        return getSelectionOrderFieldBuilder().getBuilder();
      }
      /**
       * <code>.collections.PBIntVector selectionOrder = 38;</code>
       */
      public com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder getSelectionOrderOrBuilder() {
        if (selectionOrderBuilder_ != null) {
          return selectionOrderBuilder_.getMessageOrBuilder();
        } else {
          return selectionOrder_ == null ?
              com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.getDefaultInstance() : selectionOrder_;
        }
      }
      /**
       * <code>.collections.PBIntVector selectionOrder = 38;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder> 
          getSelectionOrderFieldBuilder() {
        if (selectionOrderBuilder_ == null) {
          selectionOrderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVector.Builder, com.booleworks.logicng.collections.ProtoBufCollections.PBIntVectorOrBuilder>(
                  getSelectionOrder(),
                  getParentForChildren(),
                  isClean());
          selectionOrder_ = null;
        }
        return selectionOrderBuilder_;
      }

      private int selectionOrderIdx_ ;
      /**
       * <code>int32 selectionOrderIdx = 39;</code>
       * @return The selectionOrderIdx.
       */
      @java.lang.Override
      public int getSelectionOrderIdx() {
        return selectionOrderIdx_;
      }
      /**
       * <code>int32 selectionOrderIdx = 39;</code>
       * @param value The selectionOrderIdx to set.
       * @return This builder for chaining.
       */
      public Builder setSelectionOrderIdx(int value) {

        selectionOrderIdx_ = value;
        bitField1_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>int32 selectionOrderIdx = 39;</code>
       * @return This builder for chaining.
       */
      public Builder clearSelectionOrderIdx() {
        bitField1_ = (bitField1_ & ~0x00000040);
        selectionOrderIdx_ = 0;
        onChanged();
        return this;
      }

      private double learntsizeAdjustConfl_ ;
      /**
       * <code>double learntsizeAdjustConfl = 40;</code>
       * @return The learntsizeAdjustConfl.
       */
      @java.lang.Override
      public double getLearntsizeAdjustConfl() {
        return learntsizeAdjustConfl_;
      }
      /**
       * <code>double learntsizeAdjustConfl = 40;</code>
       * @param value The learntsizeAdjustConfl to set.
       * @return This builder for chaining.
       */
      public Builder setLearntsizeAdjustConfl(double value) {

        learntsizeAdjustConfl_ = value;
        bitField1_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>double learntsizeAdjustConfl = 40;</code>
       * @return This builder for chaining.
       */
      public Builder clearLearntsizeAdjustConfl() {
        bitField1_ = (bitField1_ & ~0x00000080);
        learntsizeAdjustConfl_ = 0D;
        onChanged();
        return this;
      }

      private int learntsizeAdjustCnt_ ;
      /**
       * <code>int32 learntsizeAdjustCnt = 41;</code>
       * @return The learntsizeAdjustCnt.
       */
      @java.lang.Override
      public int getLearntsizeAdjustCnt() {
        return learntsizeAdjustCnt_;
      }
      /**
       * <code>int32 learntsizeAdjustCnt = 41;</code>
       * @param value The learntsizeAdjustCnt to set.
       * @return This builder for chaining.
       */
      public Builder setLearntsizeAdjustCnt(int value) {

        learntsizeAdjustCnt_ = value;
        bitField1_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>int32 learntsizeAdjustCnt = 41;</code>
       * @return This builder for chaining.
       */
      public Builder clearLearntsizeAdjustCnt() {
        bitField1_ = (bitField1_ & ~0x00000100);
        learntsizeAdjustCnt_ = 0;
        onChanged();
        return this;
      }

      private int learntsizeAdjustStartConfl_ ;
      /**
       * <code>int32 learntsizeAdjustStartConfl = 42;</code>
       * @return The learntsizeAdjustStartConfl.
       */
      @java.lang.Override
      public int getLearntsizeAdjustStartConfl() {
        return learntsizeAdjustStartConfl_;
      }
      /**
       * <code>int32 learntsizeAdjustStartConfl = 42;</code>
       * @param value The learntsizeAdjustStartConfl to set.
       * @return This builder for chaining.
       */
      public Builder setLearntsizeAdjustStartConfl(int value) {

        learntsizeAdjustStartConfl_ = value;
        bitField1_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>int32 learntsizeAdjustStartConfl = 42;</code>
       * @return This builder for chaining.
       */
      public Builder clearLearntsizeAdjustStartConfl() {
        bitField1_ = (bitField1_ & ~0x00000200);
        learntsizeAdjustStartConfl_ = 0;
        onChanged();
        return this;
      }

      private double learntsizeAdjustInc_ ;
      /**
       * <code>double learntsizeAdjustInc = 43;</code>
       * @return The learntsizeAdjustInc.
       */
      @java.lang.Override
      public double getLearntsizeAdjustInc() {
        return learntsizeAdjustInc_;
      }
      /**
       * <code>double learntsizeAdjustInc = 43;</code>
       * @param value The learntsizeAdjustInc to set.
       * @return This builder for chaining.
       */
      public Builder setLearntsizeAdjustInc(double value) {

        learntsizeAdjustInc_ = value;
        bitField1_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>double learntsizeAdjustInc = 43;</code>
       * @return This builder for chaining.
       */
      public Builder clearLearntsizeAdjustInc() {
        bitField1_ = (bitField1_ & ~0x00000400);
        learntsizeAdjustInc_ = 0D;
        onChanged();
        return this;
      }

      private double maxLearnts_ ;
      /**
       * <code>double maxLearnts = 44;</code>
       * @return The maxLearnts.
       */
      @java.lang.Override
      public double getMaxLearnts() {
        return maxLearnts_;
      }
      /**
       * <code>double maxLearnts = 44;</code>
       * @param value The maxLearnts to set.
       * @return This builder for chaining.
       */
      public Builder setMaxLearnts(double value) {

        maxLearnts_ = value;
        bitField1_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>double maxLearnts = 44;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxLearnts() {
        bitField1_ = (bitField1_ & ~0x00000800);
        maxLearnts_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:solver.PBMiniSatStyleSolver)
    }

    // @@protoc_insertion_point(class_scope:solver.PBMiniSatStyleSolver)
    private static final com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver();
    }

    public static com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PBMiniSatStyleSolver>
        PARSER = new com.google.protobuf.AbstractParser<PBMiniSatStyleSolver>() {
      @java.lang.Override
      public PBMiniSatStyleSolver parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PBMiniSatStyleSolver> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PBMiniSatStyleSolver> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.booleworks.logicng.solvers.sat.ProtoBufSolverCommons.PBMiniSatStyleSolver getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_solver_PBMiniSatConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_solver_PBMiniSatConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_solver_PBGlucoseConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_solver_PBGlucoseConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_solver_PBMiniSatStyleSolver_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_solver_PBMiniSatStyleSolver_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_solver_PBMiniSatStyleSolver_Name2idxEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_solver_PBMiniSatStyleSolver_Name2idxEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_solver_PBMiniSatStyleSolver_BackboneMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_solver_PBMiniSatStyleSolver_BackboneMapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024solver_commons.proto\022\006solver\032\021collecti" +
      "ons.proto\032\033solver_datastructures.proto\"\327" +
      "\003\n\017PBMiniSatConfig\022\020\n\010varDecay\030\001 \001(\001\022\016\n\006" +
      "varInc\030\002 \001(\001\022/\n\tclauseMin\030\003 \001(\0162\034.solver" +
      ".PBClauseMinimization\022\024\n\014restartFirst\030\004 " +
      "\001(\005\022\022\n\nrestartInc\030\005 \001(\001\022\023\n\013clauseDecay\030\006" +
      " \001(\001\022\027\n\017removeSatisfied\030\007 \001(\010\022\030\n\020learnts" +
      "izeFactor\030\010 \001(\001\022\025\n\rlearntsizeInc\030\t \001(\001\022\023" +
      "\n\013incremental\030\n \001(\010\022\024\n\014initialPhase\030\013 \001(" +
      "\010\022\027\n\017proofGeneration\030\014 \001(\010\022&\n\tcnfMethod\030" +
      "\r \001(\0162\023.solver.PBCnfMethod\022,\n$bbInitialU" +
      "BCheckForRotatableLiterals\030\016 \001(\010\022)\n!bbCh" +
      "eckForComplementModelLiterals\030\017 \001(\010\022#\n\033b" +
      "bCheckForRotatableLiterals\030\020 \001(\010\"\310\002\n\017PBG" +
      "lucoseConfig\022\035\n\025lbLBDMinimizingClause\030\001 " +
      "\001(\005\022\031\n\021lbLBDFrozenClause\030\002 \001(\005\022\036\n\026lbSize" +
      "MinimizingClause\030\003 \001(\005\022\025\n\rfirstReduceDB\030" +
      "\004 \001(\005\022\032\n\022specialIncReduceDB\030\005 \001(\005\022\023\n\013inc" +
      "ReduceDB\030\006 \001(\005\022\017\n\007factorK\030\007 \001(\001\022\017\n\007facto" +
      "rR\030\010 \001(\001\022\024\n\014sizeLBDQueue\030\t \001(\005\022\026\n\016sizeTr" +
      "ailQueue\030\n \001(\005\022\024\n\014reduceOnSize\030\013 \001(\010\022\030\n\020" +
      "reduceOnSizeSize\030\014 \001(\005\022\023\n\013maxVarDecay\030\r " +
      "\001(\001\"\202\r\n\024PBMiniSatStyleSolver\022\'\n\006config\030\001" +
      " \001(\0132\027.solver.PBMiniSatConfig\022\n\n\002ok\030\002 \001(" +
      "\010\022\r\n\005qhead\030\003 \001(\005\022)\n\007clauses\030\004 \001(\0132\030.solv" +
      "er.PBMsClauseVector\022)\n\007learnts\030\005 \001(\0132\030.s" +
      "olver.PBMsClauseVector\0220\n\007watches\030\006 \001(\0132" +
      "\037.solver.PBMsWatcherVectorVector\022(\n\004vars" +
      "\030\007 \001(\0132\032.solver.PBMsVariableVector\022$\n\tor" +
      "derHeap\030\010 \001(\0132\021.solver.PBLngHeap\022\'\n\005trai" +
      "l\030\t \001(\0132\030.collections.PBIntVector\022*\n\010tra" +
      "ilLim\030\n \001(\0132\030.collections.PBIntVector\022+\n" +
      "\005model\030\013 \001(\0132\034.collections.PBBooleanVect" +
      "or\022*\n\010conflict\030\014 \001(\0132\030.collections.PBInt" +
      "Vector\022-\n\013assumptions\030\r \001(\0132\030.collection" +
      "s.PBIntVector\022*\n\004seen\030\016 \001(\0132\034.collection" +
      "s.PBBooleanVector\022\026\n\016analyzeBtLevel\030\017 \001(" +
      "\005\022\016\n\006claInc\030\020 \001(\001\022\025\n\rsimpDBAssigns\030\021 \001(\005" +
      "\022\023\n\013simpDBProps\030\022 \001(\005\022\027\n\017clausesLiterals" +
      "\030\023 \001(\005\022\027\n\017learntsLiterals\030\024 \001(\005\022\020\n\010varDe" +
      "cay\030\025 \001(\001\022\016\n\006varInc\030\026 \001(\001\022/\n\tccminMode\030\027" +
      " \001(\0162\034.solver.PBClauseMinimization\022\024\n\014re" +
      "startFirst\030\030 \001(\005\022\022\n\nrestartInc\030\031 \001(\001\022\023\n\013" +
      "clauseDecay\030\032 \001(\001\022\036\n\026shouldRemoveSatsisf" +
      "ied\030\033 \001(\010\022\030\n\020learntsizeFactor\030\034 \001(\001\022\025\n\rl" +
      "earntsizeInc\030\035 \001(\001\022\023\n\013incremental\030\036 \001(\010\022" +
      "<\n\010name2idx\030\037 \003(\0132*.solver.PBMiniSatStyl" +
      "eSolver.Name2idxEntry\022/\n\007pgProof\030  \001(\0132\036" +
      ".collections.PBIntVectorVector\0225\n\021pgOrig" +
      "inalClauses\030! \003(\0132\032.solver.PBProofInform" +
      "ation\0224\n\022backboneCandidates\030\" \001(\0132\030.coll" +
      "ections.PBIntVector\0225\n\023backboneAssumptio" +
      "ns\030# \001(\0132\030.collections.PBIntVector\022B\n\013ba" +
      "ckboneMap\030$ \003(\0132-.solver.PBMiniSatStyleS" +
      "olver.BackboneMapEntry\022\031\n\021computingBackb" +
      "one\030% \001(\010\0220\n\016selectionOrder\030& \001(\0132\030.coll" +
      "ections.PBIntVector\022\031\n\021selectionOrderIdx" +
      "\030\' \001(\005\022\035\n\025learntsizeAdjustConfl\030( \001(\001\022\033\n" +
      "\023learntsizeAdjustCnt\030) \001(\005\022\"\n\032learntsize" +
      "AdjustStartConfl\030* \001(\005\022\033\n\023learntsizeAdju" +
      "stInc\030+ \001(\001\022\022\n\nmaxLearnts\030, \001(\001\032/\n\rName2" +
      "idxEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\005:\0028\001" +
      "\032F\n\020BackboneMapEntry\022\013\n\003key\030\001 \001(\005\022!\n\005val" +
      "ue\030\002 \001(\0162\022.solver.PBTristate:\0028\001*5\n\024PBCl" +
      "auseMinimization\022\010\n\004NONE\020\000\022\t\n\005BASIC\020\001\022\010\n" +
      "\004DEEP\020\002*G\n\013PBCnfMethod\022\017\n\013FACTORY_CNF\020\000\022" +
      "\020\n\014PG_ON_SOLVER\020\001\022\025\n\021FULL_PG_ON_SOLVER\020\002" +
      "B;\n\"com.booleworks.logicng.solvers.satB\025" +
      "ProtoBufSolverCommonsb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.booleworks.logicng.collections.ProtoBufCollections.getDescriptor(),
          com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.getDescriptor(),
        });
    internal_static_solver_PBMiniSatConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_solver_PBMiniSatConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_solver_PBMiniSatConfig_descriptor,
        new java.lang.String[] { "VarDecay", "VarInc", "ClauseMin", "RestartFirst", "RestartInc", "ClauseDecay", "RemoveSatisfied", "LearntsizeFactor", "LearntsizeInc", "Incremental", "InitialPhase", "ProofGeneration", "CnfMethod", "BbInitialUBCheckForRotatableLiterals", "BbCheckForComplementModelLiterals", "BbCheckForRotatableLiterals", });
    internal_static_solver_PBGlucoseConfig_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_solver_PBGlucoseConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_solver_PBGlucoseConfig_descriptor,
        new java.lang.String[] { "LbLBDMinimizingClause", "LbLBDFrozenClause", "LbSizeMinimizingClause", "FirstReduceDB", "SpecialIncReduceDB", "IncReduceDB", "FactorK", "FactorR", "SizeLBDQueue", "SizeTrailQueue", "ReduceOnSize", "ReduceOnSizeSize", "MaxVarDecay", });
    internal_static_solver_PBMiniSatStyleSolver_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_solver_PBMiniSatStyleSolver_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_solver_PBMiniSatStyleSolver_descriptor,
        new java.lang.String[] { "Config", "Ok", "Qhead", "Clauses", "Learnts", "Watches", "Vars", "OrderHeap", "Trail", "TrailLim", "Model", "Conflict", "Assumptions", "Seen", "AnalyzeBtLevel", "ClaInc", "SimpDBAssigns", "SimpDBProps", "ClausesLiterals", "LearntsLiterals", "VarDecay", "VarInc", "CcminMode", "RestartFirst", "RestartInc", "ClauseDecay", "ShouldRemoveSatsisfied", "LearntsizeFactor", "LearntsizeInc", "Incremental", "Name2Idx", "PgProof", "PgOriginalClauses", "BackboneCandidates", "BackboneAssumptions", "BackboneMap", "ComputingBackbone", "SelectionOrder", "SelectionOrderIdx", "LearntsizeAdjustConfl", "LearntsizeAdjustCnt", "LearntsizeAdjustStartConfl", "LearntsizeAdjustInc", "MaxLearnts", });
    internal_static_solver_PBMiniSatStyleSolver_Name2idxEntry_descriptor =
      internal_static_solver_PBMiniSatStyleSolver_descriptor.getNestedTypes().get(0);
    internal_static_solver_PBMiniSatStyleSolver_Name2idxEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_solver_PBMiniSatStyleSolver_Name2idxEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_solver_PBMiniSatStyleSolver_BackboneMapEntry_descriptor =
      internal_static_solver_PBMiniSatStyleSolver_descriptor.getNestedTypes().get(1);
    internal_static_solver_PBMiniSatStyleSolver_BackboneMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_solver_PBMiniSatStyleSolver_BackboneMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    com.booleworks.logicng.collections.ProtoBufCollections.getDescriptor();
    com.booleworks.logicng.solvers.datastructures.ProtoBufSolverDatastructures.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
